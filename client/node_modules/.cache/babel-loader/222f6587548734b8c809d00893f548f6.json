{"ast":null,"code":"import _slicedToArray from \"/Users/Pablo/Documents/React/bitechoice/biteFinal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/biteFinal/client/src/components/MainView/index.js\";\n\nimport React, { useContext, useState } from 'react';\nimport { Store } from '../../Store';\nimport LandingView from '../LandingView';\nvar CustomView = React.lazy(function () {\n  return import('../CustomView');\n});\nvar RandomView = React.lazy(function () {\n  return import('../RandomView');\n}); // TODO: intentar clear location aqui\n// TODO: intentar toggleUi desde aqui\n// TODO: intentar toggleCustomForm desde aqui\n// intentar togglelocationinputview\n\nfunction _validBtn(eventA, eventB) {\n  if (eventA || eventB) return true;\n  return false;\n}\n\nvar mainView = function mainView(_ref) {\n  var location = _ref.location,\n      fetchSuccess = _ref.fetchSuccess;\n\n  var _useContext = useContext(Store),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      locationInput = _useState2[0],\n      setLocationInput = _useState2[1];\n\n  var validUserLocation = state.inputLocation !== '' ? true : false;\n\n  var clearLocation = function clearLocation() {\n    return dispatch({\n      type: 'CLEAR_LOCATION'\n    });\n  };\n\n  var _toggleUi = function toggleUi(ui) {\n    return dispatch({\n      type: 'TOGGLE_UI',\n      payload: ui\n    });\n  };\n\n  var toggleCustomForm = function toggleCustomForm() {\n    return dispatch({\n      type: 'TOGGLE_CUSTOM_FORM'\n    });\n  };\n\n  var eventA = locationInput && validUserLocation ? true : false;\n  var eventB = !locationInput && fetchSuccess ? true : false;\n\n  var toggleLocationInputView = function toggleLocationInputView(input) {\n    clearLocation();\n    setLocationInput(input);\n  }; // const validBtn = () => {\n  //   let eventA = locationInput && validUserLocation ? true : false;\n  //   let eventB = !locationInput && fetchSuccess ? true : false;\n  //   if(eventA || eventB) return true;\n  //   return false;\n  // }\n\n\n  return React.createElement(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100vw'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, state.ui === 'landing' && React.createElement(LandingView, {\n    location: location // validBtn={validBtn}\n    ,\n    validBtn: function validBtn() {\n      return _validBtn(eventA, eventB);\n    },\n    toggleUi: _toggleUi,\n    fetchSuccess: fetchSuccess,\n    locationInput: locationInput,\n    toggleLocationInputView: toggleLocationInputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), React.createElement(React.Suspense, {\n    fallback: React.createElement(React.Fragment, null),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, state.ui === 'custom' && React.createElement(CustomView, {\n    data: state.data,\n    toggleUi: _toggleUi,\n    customView: state.customView,\n    toggleCustomForm: toggleCustomForm,\n    location: locationInput ? state.inputLocation : location,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), state.ui === 'random' && React.createElement(RandomView, {\n    data: state.data,\n    locationInput: locationInput,\n    toggleUi: function toggleUi() {\n      return _toggleUi('landing');\n    },\n    location: locationInput ? state.inputLocation : location,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default mainView;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/biteFinal/client/src/components/MainView/index.js"],"names":["React","useContext","useState","Store","LandingView","CustomView","lazy","RandomView","validBtn","eventA","eventB","mainView","location","fetchSuccess","state","dispatch","locationInput","setLocationInput","validUserLocation","inputLocation","clearLocation","type","toggleUi","ui","payload","toggleCustomForm","toggleLocationInputView","input","height","width","data","customView"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\n\nimport { Store } from '../../Store';\nimport LandingView from '../LandingView';\nconst CustomView = React.lazy(() => import('../CustomView'));\nconst RandomView = React.lazy(() => import('../RandomView'));\n\n// TODO: intentar clear location aqui\n// TODO: intentar toggleUi desde aqui\n// TODO: intentar toggleCustomForm desde aqui\n// intentar togglelocationinputview\n\nfunction validBtn(eventA, eventB) {\n  if (eventA || eventB) return true\n  return false\n}\n\nconst mainView = ({ location, fetchSuccess }) => {\n  const { state, dispatch } = useContext(Store);\n  const [locationInput, setLocationInput] = useState(false);\n  const validUserLocation = state.inputLocation !== '' ? true : false;\n\n  const clearLocation = () => dispatch ({ type: 'CLEAR_LOCATION' });\n  const toggleUi = ui => dispatch ({ type: 'TOGGLE_UI', payload: ui });\n  const toggleCustomForm = () => dispatch({ type: 'TOGGLE_CUSTOM_FORM' });\n\n  let eventA = locationInput && validUserLocation ? true : false;\n  let eventB = !locationInput && fetchSuccess ? true : false;\n\n  const toggleLocationInputView = input => {\n    clearLocation();\n    setLocationInput(input);\n  }\n\n  // const validBtn = () => {\n  //   let eventA = locationInput && validUserLocation ? true : false;\n  //   let eventB = !locationInput && fetchSuccess ? true : false;\n  //   if(eventA || eventB) return true;\n  //   return false;\n  // }\n\n  return (\n    <div style={{ height: '100vh', width: '100vw' }}>\n      {state.ui === 'landing' && (\n        <LandingView \n          location={location} \n          // validBtn={validBtn}\n          validBtn={() => validBtn(eventA, eventB)}\n          toggleUi={toggleUi}\n          fetchSuccess={fetchSuccess} \n          locationInput={locationInput}\n          toggleLocationInputView={toggleLocationInputView}\n        />\n      )}\n      <React.Suspense fallback={<></>}>\n        {state.ui === 'custom' && (\n          <CustomView \n              data={state.data}\n              toggleUi={toggleUi}\n              customView={state.customView}\n              toggleCustomForm={toggleCustomForm}\n              location={locationInput ? state.inputLocation : location}\n            />\n        )} \n        {state.ui === 'random' && (\n          <RandomView\n            data={state.data}\n            locationInput={locationInput}\n            toggleUi={() => toggleUi('landing')} \n            location={locationInput ? state.inputLocation : location}\n          />\n        )}\n      </React.Suspense>\n    </div>\n  );\n};\n\nexport default mainView;"]},"metadata":{},"sourceType":"module"}