{"ast":null,"code":"import _classCallCheck from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/ResultList.js\";\nimport React, { Component } from 'react';\n\nvar ResultList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ResultList, _Component);\n\n  function ResultList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ResultList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ResultList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: _this.props.data\n    };\n\n    _this.removeItem = function (passedIndex) {\n      var newData = _this.state.data.filter(function (el, index) {\n        return passedIndex !== index;\n      });\n\n      _this.setState({\n        data: newData\n      });\n\n      console.log(newData);\n    };\n\n    return _this;\n  }\n\n  _createClass(ResultList, [{\n    key: \"componentWillMount\",\n    // TAKE FULL DATA [1,2,3,4,5,6]\n    // SELECT 3 ITEMS AND UPDATE DATA\n    // REFRESH DATA ARRAY EACH TIME ONE ITEM IS DELETED\n    // ONLY SHOW 3 RANDOM PICKS\n    // WHEN USER CLICKS IN ONE ITEM IT DELETES AND GIVES ANOTHER RANDOM FROM THE LIST\n    value: function componentWillMount() {\n      console.log('component will mount');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.props.data.map(function (el, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          onClick: function onClick() {\n            return _this2.removeItem(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, el.name);\n      }));\n    }\n  }]);\n\n  return ResultList;\n}(Component);\n\n;\nexport default ResultList;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/ResultList.js"],"names":["React","Component","ResultList","state","data","props","removeItem","passedIndex","newData","filter","el","index","setState","console","log","map","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,MAAKC,KAAL,CAAWD;AADX,K;;UAcRE,U,GAAa,UAACC,WAAD,EAAiB;AAC5B,UAAIC,OAAO,GAAG,MAAKL,KAAL,CAAWC,IAAX,CAAgBK,MAAhB,CAAuB,UAACC,EAAD,EAAKC,KAAL;AAAA,eAAeJ,WAAW,KAAKI,KAA/B;AAAA,OAAvB,CAAd;;AACA,YAAKC,QAAL,CAAc;AAAER,QAAAA,IAAI,EAAEI;AAAR,OAAd;;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACD,K;;;;;;;AAdD;AACA;AACA;AAEA;AACA;yCACsB;AACpBK,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;;;6BAQQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKT,KAAL,CAAWD,IAAX,CAAgBW,GAAhB,CAAoB,UAACL,EAAD,EAAKC,KAAL,EAAe;AACjC,eAAO;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAgB,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACL,UAAL,CAAgBK,KAAhB,CAAN;AAAA,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAwDD,EAAE,CAACM,IAA3D,CAAP;AACD,OAFD,CAFJ,CADF;AASD;;;;EA/BsBf,S;;AAgCxB;AAED,eAAeC,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass ResultList extends Component {\n  state = {\n    data: this.props.data\n  };\n\n  // TAKE FULL DATA [1,2,3,4,5,6]\n  // SELECT 3 ITEMS AND UPDATE DATA\n  // REFRESH DATA ARRAY EACH TIME ONE ITEM IS DELETED\n\n  // ONLY SHOW 3 RANDOM PICKS\n  // WHEN USER CLICKS IN ONE ITEM IT DELETES AND GIVES ANOTHER RANDOM FROM THE LIST\n  componentWillMount () {\n    console.log('component will mount');\n  };\n\n  removeItem = (passedIndex) => {\n    let newData = this.state.data.filter((el, index) => passedIndex !== index);\n    this.setState({ data: newData });\n    console.log(newData);\n  };\n\n  render() {\n    return (\n      <ul>\n        {\n          this.props.data.map((el, index) => {\n            return <li key={index} onClick={() => this.removeItem(index)}>{el.name}</li>\n          })\n        }\n      </ul>\n    );\n  }\n};\n\nexport default ResultList;"]},"metadata":{},"sourceType":"module"}