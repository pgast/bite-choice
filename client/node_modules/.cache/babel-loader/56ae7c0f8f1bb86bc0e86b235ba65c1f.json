{"ast":null,"code":"import _slicedToArray from \"/Users/Pablo/Documents/React/bitechoice/v5/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/Pablo/Documents/React/bitechoice/v5/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/Pablo/Documents/React/bitechoice/v5/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Pablo/Documents/React/bitechoice/v5/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v5/client/src/Store.js\";\nimport React, { useReducer, createContext } from \"react\";\nvar initialState = {\n  customView: {\n    resultsMode: false,\n    searchTerms: [],\n    sortBy: 'Best Match'\n  },\n  data: [],\n  ui: 'landing',\n  inputLocation: ''\n};\n\nvar randomSorting = function randomSorting() {\n  var criteria = ['best_match', 'rating', 'review_count', 'distance'];\n  return criteria[Math.floor(Math.random() * 4)];\n};\n\nvar searchTerm =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(term, sort_by, newLocation, inputLocationMode) {\n    var response, businesses;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"/search/\".concat(term, \"/\").concat(sort_by, \"/\").concat(newLocation, \"/\").concat(inputLocationMode));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            businesses = _context.sent;\n            return _context.abrupt(\"return\", businesses.businesses);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function searchTerm(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar fetchData =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(newLocation, searchInputs) {\n    var sortBy, searchTerms, locationInput, coordinates, sorting, data, termOne, termTwo, termThree, result, dataOne, dataTwo, dataThree;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            sortBy = searchInputs.sortBy, searchTerms = searchInputs.searchTerms, locationInput = searchInputs.locationInput, coordinates = searchInputs.coordinates;\n            console.log(coordinates);\n            sorting = sortBy === 'random' ? randomSorting() : sortBy;\n\n            if (!(searchTerms.length === 0)) {\n              _context2.next = 10;\n              break;\n            }\n\n            _context2.next = 6;\n            return searchTerm(null, sorting, newLocation, locationInput);\n\n          case 6:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data);\n\n          case 10:\n            termOne = searchTerms[0] !== undefined ? searchTerms[0] : null;\n            termTwo = searchTerms[1] !== undefined ? searchTerms[1] : null;\n            termThree = searchTerms[2] !== undefined ? searchTerms[2] : null;\n            result = [];\n            dataOne = [];\n            dataTwo = [];\n            dataThree = [];\n\n            if (!(termOne !== null)) {\n              _context2.next = 21;\n              break;\n            }\n\n            _context2.next = 20;\n            return searchTerm(termOne, sorting, newLocation, locationInput);\n\n          case 20:\n            dataOne = _context2.sent;\n\n          case 21:\n            ;\n\n            if (!(termTwo !== null)) {\n              _context2.next = 26;\n              break;\n            }\n\n            _context2.next = 25;\n            return searchTerm(termTwo, sorting, newLocation, locationInput);\n\n          case 25:\n            dataTwo = _context2.sent;\n\n          case 26:\n            ;\n\n            if (!(termThree !== null)) {\n              _context2.next = 31;\n              break;\n            }\n\n            _context2.next = 30;\n            return searchTerm(termThree, sorting, newLocation, locationInput);\n\n          case 30:\n            dataThree = _context2.sent;\n\n          case 31:\n            ;\n\n            if (dataOne.length !== 0) {\n              result.push(dataOne);\n            }\n\n            ;\n\n            if (dataTwo.length !== 0) {\n              result.push(dataTwo);\n            }\n\n            ;\n\n            if (dataThree.length !== 0) {\n              result.push(dataThree);\n            }\n\n            ;\n            return _context2.abrupt(\"return\", result);\n\n          case 39:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function fetchData(_x5, _x6) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar fetchRandomData =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3(newLocation, inputLocationMode) {\n    var response, businesses;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch(\"/getRandom/\".concat(inputLocationMode, \"/\").concat(newLocation));\n\n          case 2:\n            response = _context3.sent;\n            _context3.next = 5;\n            return response.json();\n\n          case 5:\n            businesses = _context3.sent;\n            return _context3.abrupt(\"return\", businesses.businesses);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function fetchRandomData(_x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction reducer(state, action) {\n  var customViewCopy = _objectSpread({}, state.customView);\n\n  switch (action.type) {\n    case 'TOGGLE_CUSTOM_FORM':\n      customViewCopy.resultsMode = !customViewCopy.resultsMode;\n      return _objectSpread({}, state, {\n        customView: customViewCopy\n      });\n\n    case 'SUBMIT_SEARCH':\n      customViewCopy = {\n        searchTerms: action.payload.searchTerms,\n        sortBy: action.payload.sortBy,\n        resultsMode: true\n      };\n      return _objectSpread({}, state, {\n        customView: customViewCopy,\n        data: fetchData(state.inputLocation, action.payload)\n      });\n\n    case 'FETCH_RANDOM_DATA':\n      return _objectSpread({}, state, {\n        data: fetchRandomData(state.inputLocation, action.payload)\n      });\n\n    case 'TOGGLE_UI':\n      customViewCopy = {\n        sortBy: 'Best Match',\n        resultsMode: false,\n        searchTerms: []\n      };\n      return _objectSpread({}, state, {\n        customView: customViewCopy,\n        data: [],\n        ui: action.payload\n      });\n\n    case 'UPDATE_LOCATION':\n      return _objectSpread({}, state, {\n        inputLocation: action.payload\n      });\n\n    case 'CLEAR_LOCATION':\n      return _objectSpread({}, state, {\n        inputLocation: ''\n      });\n\n    default:\n      return state;\n  }\n}\n\n;\nexport function StoreProvider(props) {\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var value = {\n    state: state,\n    dispatch: dispatch\n  };\n  return React.createElement(Store.Provider, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, props.children);\n}\nexport var Store = createContext();","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v5/client/src/Store.js"],"names":["React","useReducer","createContext","initialState","customView","resultsMode","searchTerms","sortBy","data","ui","inputLocation","randomSorting","criteria","Math","floor","random","searchTerm","term","sort_by","newLocation","inputLocationMode","fetch","response","json","businesses","fetchData","searchInputs","locationInput","coordinates","console","log","sorting","length","termOne","undefined","termTwo","termThree","result","dataOne","dataTwo","dataThree","push","fetchRandomData","reducer","state","action","customViewCopy","type","payload","StoreProvider","props","dispatch","value","children","Store"],"mappings":"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","sourcesContent":["import React, { useReducer, createContext } from \"react\";\n\nconst initialState = {\n  customView: {\n    resultsMode: false,\n    searchTerms: [],\n    sortBy: 'Best Match'\n  },\n  data: [],\n  ui: 'landing',\n  inputLocation: ''\n}\n\nconst randomSorting = () => {\n  const criteria = ['best_match', 'rating', 'review_count', 'distance'];\n  return criteria[Math.floor(Math.random() * 4)];\n};\n\nconst searchTerm = async (term, sort_by, newLocation, inputLocationMode) => {\n    const response = await fetch(`/search/${term}/${sort_by}/${newLocation}/${inputLocationMode}`);\n    const businesses = await response.json();\n    return businesses.businesses;\n  };\n\nconst fetchData = async (newLocation, searchInputs) => {\n  const { sortBy, searchTerms, locationInput, coordinates } = searchInputs;\n  console.log(coordinates);\n  const sorting = sortBy === 'random' ? randomSorting() : sortBy\n\n  if (searchTerms.length === 0) {\n    const data = await searchTerm(null, sorting, newLocation, locationInput);\n    return data;\n  } else { \n    const termOne = searchTerms[0] !== undefined ? searchTerms[0] : null; \n    const termTwo = searchTerms[1] !== undefined ? searchTerms[1] : null; \n    const termThree = searchTerms[2] !== undefined ? searchTerms[2] : null; \n\n    let result = [];\n    let dataOne = [];\n    let dataTwo = [];\n    let dataThree = [];\n\n    if (termOne !== null) { dataOne = await searchTerm(termOne, sorting, newLocation, locationInput) };\n    if (termTwo !== null) { dataTwo = await searchTerm(termTwo, sorting, newLocation, locationInput) };\n    if (termThree !== null) { dataThree = await searchTerm(termThree, sorting, newLocation, locationInput) };\n\n    if (dataOne.length !== 0) { result.push(dataOne) };\n    if (dataTwo.length !== 0) { result.push(dataTwo) };\n    if (dataThree.length !== 0) { result.push(dataThree) };\n\n    return result;\n  }\n};\n\nconst fetchRandomData = async (newLocation, inputLocationMode) => {\n  const response = await fetch(`/getRandom/${inputLocationMode}/${newLocation}`);\n  const businesses = await response.json();\n  return businesses.businesses;\n};\n\nfunction reducer(state, action) {\n  let customViewCopy = { ...state.customView };\n\n  switch(action.type) {\n    case 'TOGGLE_CUSTOM_FORM':\n      customViewCopy.resultsMode = !customViewCopy.resultsMode;\n      return { ...state, customView: customViewCopy };\n\n    case 'SUBMIT_SEARCH':\n      customViewCopy = {\n        searchTerms: action.payload.searchTerms,\n        sortBy: action.payload.sortBy,\n        resultsMode: true\n      };\n      return { \n        ...state, \n        customView: customViewCopy, \n        data: fetchData(state.inputLocation, action.payload) \n      };\n\n    case 'FETCH_RANDOM_DATA':\n      return { ...state, data: fetchRandomData(state.inputLocation, action.payload) }\n      \n    case 'TOGGLE_UI':\n      customViewCopy = {\n        sortBy: 'Best Match',\n        resultsMode: false,\n        searchTerms: []\n      };\n      return { ...state, customView: customViewCopy, data: [], ui: action.payload };\n\n    case 'UPDATE_LOCATION':\n      return { ...state, inputLocation: action.payload };\n\n    case 'CLEAR_LOCATION':\n      return { ...state, inputLocation: '' };\n      \n    default:\n      return state;\n  }\n};\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const value = {state, dispatch}\n  return <Store.Provider value={value}>{props.children}</Store.Provider>\n}\n\nexport const Store = createContext();"]},"metadata":{},"sourceType":"module"}