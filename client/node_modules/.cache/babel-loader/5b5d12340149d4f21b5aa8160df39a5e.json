{"ast":null,"code":"import _classCallCheck from \"/Users/Pablo/Documents/React/bitechoice/v5/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Pablo/Documents/React/bitechoice/v5/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Pablo/Documents/React/bitechoice/v5/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Pablo/Documents/React/bitechoice/v5/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Pablo/Documents/React/bitechoice/v5/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v5/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { Grommet, Box } from 'grommet';\nimport Request from 'request';\nimport MainView from './components/MainView';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      location: '',\n      fetchSuccess: '',\n      coordinates: {\n        lat: '',\n        lon: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      Request.get({\n        \"url\": \"http://ip-api.com/json/\"\n      }, function (error, response, body) {\n        if (error) {\n          _this2.setState({\n            fetchSuccess: false\n          });\n\n          return console.dir(error);\n        }\n\n        if (JSON.parse(body).status === \"fail\") {\n          _this2.setState({\n            fetchSuccess: false\n          });\n        } else {\n          var location = JSON.parse(body).city;\n          var lat = JSON.parse(body).lat;\n          var lon = JSON.parse(body).lon;\n\n          _this2.setState({\n            location: location,\n            fetchSuccess: true,\n            coordinates: {\n              lat: lat,\n              lon: lon\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Grommet, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Box, {\n        width: \"100vw\",\n        height: \"100vh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(MainView, {\n        fetchSuccess: this.state.fetchSuccess,\n        coordinates: this.state.coordinates,\n        location: this.state.location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v5/client/src/App.js"],"names":["React","Component","Grommet","Box","Request","MainView","App","state","location","fetchSuccess","coordinates","lat","lon","get","error","response","body","setState","console","dir","JSON","parse","status","city"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,GAAlB,QAA6B,SAA7B;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,WAAW,EAAE;AACXC,QAAAA,GAAG,EAAE,EADM;AAEXC,QAAAA,GAAG,EAAE;AAFM;AAHP,K;;;;;;yCASa;AAAA;;AACnBR,MAAAA,OAAO,CAACS,GAAR,CAAY;AAAE,eAAO;AAAT,OAAZ,EAAkD,UAACC,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAA2B;AACzE,YAAIF,KAAJ,EAAW;AACT,UAAA,MAAI,CAACG,QAAL,CAAc;AAAER,YAAAA,YAAY,EAAE;AAAhB,WAAd;;AACA,iBAAOS,OAAO,CAACC,GAAR,CAAYL,KAAZ,CAAP;AACD;;AACD,YAAIM,IAAI,CAACC,KAAL,CAAWL,IAAX,EAAiBM,MAAjB,KAA4B,MAAhC,EAAwC;AACtC,UAAA,MAAI,CAACL,QAAL,CAAc;AAAER,YAAAA,YAAY,EAAE;AAAhB,WAAd;AACD,SAFD,MAEO;AACL,cAAMD,QAAQ,GAAGY,IAAI,CAACC,KAAL,CAAWL,IAAX,EAAiBO,IAAlC;AACA,cAAMZ,GAAG,GAAGS,IAAI,CAACC,KAAL,CAAWL,IAAX,EAAiBL,GAA7B;AACA,cAAMC,GAAG,GAAGQ,IAAI,CAACC,KAAL,CAAWL,IAAX,EAAiBJ,GAA7B;;AACA,UAAA,MAAI,CAACK,QAAL,CAAc;AACZT,YAAAA,QAAQ,EAARA,QADY;AAEZC,YAAAA,YAAY,EAAE,IAFF;AAGZC,YAAAA,WAAW,EAAE;AAAEC,cAAAA,GAAG,EAAHA,GAAF;AAAOC,cAAAA,GAAG,EAAHA;AAAP;AAHD,WAAd;AAKD;AACJ,OAjBD;AAkBD;;;6BAEQ;AACP,aACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAC,OAAX;AAAmB,QAAA,MAAM,EAAC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,YAAY,EAAE,KAAKL,KAAL,CAAWE,YAD3B;AAEE,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWG,WAF1B;AAGE,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWC,QAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAWD;;;;EA3CeP,S;;AA6ClB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Grommet, Box } from 'grommet';\nimport Request from 'request';\n\nimport MainView from './components/MainView';\n\nclass App extends Component {\n  state = {\n    location: '',\n    fetchSuccess: '',\n    coordinates: {\n      lat: '',\n      lon: ''\n    }\n  };\n\n  componentWillMount() {\n    Request.get({ \"url\": \"http://ip-api.com/json/\" }, (error, response, body) => {\n        if (error) {\n          this.setState({ fetchSuccess: false });  \n          return console.dir(error);    \n        }\n        if (JSON.parse(body).status === \"fail\") {\n          this.setState({ fetchSuccess: false });\n        } else {\n          const location = JSON.parse(body).city;\n          const lat = JSON.parse(body).lat;\n          const lon = JSON.parse(body).lon;\n          this.setState({ \n            location, \n            fetchSuccess: true,\n            coordinates: { lat, lon } \n          });\n        }\n    });\n  };\n\n  render() {\n    return (\n      <Grommet>\n        <Box width=\"100vw\" height=\"100vh\">\n          <MainView \n            fetchSuccess={this.state.fetchSuccess}\n            coordinates={this.state.coordinates}\n            location={this.state.location} \n          />\n        </Box>\n      </Grommet>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}