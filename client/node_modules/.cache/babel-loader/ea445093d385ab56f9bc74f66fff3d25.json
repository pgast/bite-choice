{"ast":null,"code":"import React, { useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { normalizeColor, parseMetricToNum } from '../../utils';\n\nvar Swatch = function Swatch(_ref) {\n  var aspect = _ref.aspect,\n      color = _ref.color,\n      point = _ref.point,\n      thickness = _ref.thickness;\n  var theme = useContext(ThemeContext);\n  var dim = parseInt(theme.global.spacing, 10) / 2;\n  var half = dim / 2;\n  var width = dim;\n  var content;\n  if (aspect === 'x') content = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 0 \" + half + \" L \" + dim + \" \" + half,\n    stroke: \"#000\"\n  });else if (aspect === 'y') content = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M \" + half + \" 0 L \" + half + \" \" + dim,\n    stroke: \"#000\"\n  });else if (aspect === 'thickness') content = /*#__PURE__*/React.createElement(\"g\", {\n    stroke: \"#000\",\n    fill: \"none\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: half,\n    cy: half,\n    r: half / 4\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: half,\n    cy: half,\n    r: half - 1\n  }));else if (aspect === 'color') content = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 0,\n    y: 0,\n    width: half,\n    height: dim,\n    fill: \"#000\",\n    opacity: 0.4\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: half,\n    y: 0,\n    width: half,\n    height: dim,\n    fill: \"#000\",\n    opacity: 0.8\n  }));else if (point === 'circle') content = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: half,\n    cy: half,\n    r: half\n  });else {\n    var d;\n    if (point === 'diamond') d = \"M \" + half + \" 0 L \" + dim + \" \" + half + \" L \" + half + \" \" + dim + \" L 0 \" + half + \" Z\";else if (point === 'star') {\n      var off1 = half / 3;\n      var off2 = off1 * 2;\n      d = \"M \" + half + \" 0 L \" + (half - off2) + \" \" + dim + \" L \" + dim + \" \" + (half - off1) + \" L 0 \" + (half - off1) + \" L \" + (half + off2) + \" \" + dim + \" Z\";\n    } else if (point === 'triangle') d = \"M \" + half + \" 0 L \" + dim + \" \" + dim + \" L 0 \" + dim + \" Z\";else if (point === 'triangleDown') d = \"M 0 0 L \" + dim + \" 0 L \" + half + \" \" + dim + \" Z\";else if (point === 'square') d = \"M 0 0 L \" + dim + \" 0 L \" + dim + \" \" + dim + \" L 0 \" + dim + \" Z\"; // TODO: dash\n    else if (thickness) {\n        width = parseMetricToNum(theme.global.edgeSize[thickness]) || dim;\n        d = \"M 0 0 L \" + width + \" 0 L \" + width + \" \" + dim + \" L 0 \" + dim + \" Z\";\n      } // box\n      else d = \"M 0 0 L \" + dim + \" 0 L \" + dim + \" \" + dim + \" L 0 \" + dim + \" Z\";\n    content = /*#__PURE__*/React.createElement(\"path\", {\n      d: d\n    });\n  }\n  var opacity = color && color.opacity ? theme.global.opacity[color.opacity] : undefined;\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: width,\n    height: dim,\n    viewBox: \"0 0 \" + width + \" \" + dim,\n    fill: color ? normalizeColor(color.color || color, theme) : undefined,\n    opacity: opacity,\n    stroke: \"none\"\n  }, content);\n};\n\nexport { Swatch };","map":null,"metadata":{},"sourceType":"module"}