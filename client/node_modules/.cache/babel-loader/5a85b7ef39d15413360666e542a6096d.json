{"ast":null,"code":"var _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/CustomView.js\";\nimport React, { useContext } from 'react';\nimport { Store } from '../Store';\nimport ResultView from './ResultView';\nimport CustomForm from './CustomForm'; // CUSTOM VIEW\n// RESULT VIEW NEEDS\n//RESULT HEADER NEEDS\n// toggleCustomForm\n// toggle ui en general\n\nvar customView = function customView(_ref) {\n  var location = _ref.location,\n      toggleUi = _ref.toggleUi,\n      toggleCustomForm = _ref.toggleCustomForm;\n\n  var _useContext = useContext(Store),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Custom View\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return toggleUi('landing');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"MAIN PAGE FROM CUSTOM VIEW\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return toggleCustomForm();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"TOGGLE CUSTOM FORM FROM CUSTOM VIEW\"), state.customView.resultsMode ? React.createElement(ResultView, {\n    location: location,\n    data: state.data,\n    isCustom: true,\n    randomSorting: state.customView.sortBy === 'random' ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }) : React.createElement(CustomForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n};\n\nexport default customView;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/CustomView.js"],"names":["React","useContext","Store","ResultView","CustomForm","customView","location","toggleUi","toggleCustomForm","state","dispatch","resultsMode","data","sortBy"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;AAEA;AACE;AACE;AACA;;AAEJ,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA8C;AAAA,MAA3CC,QAA2C,QAA3CA,QAA2C;AAAA,MAAjCC,QAAiC,QAAjCA,QAAiC;AAAA,MAAvBC,gBAAuB,QAAvBA,gBAAuB;;AAAA,oBACnCP,UAAU,CAACC,KAAD,CADyB;AAAA,MACvDO,KADuD,eACvDA,KADuD;AAAA,MAChDC,QADgD,eAChDA,QADgD;;AAG7D,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMH,QAAQ,CAAC,SAAD,CAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,EAGE;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMC,gBAAgB,EAAtB;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAHF,EAKGC,KAAK,CAACJ,UAAN,CAAiBM,WAAjB,GACG,oBAAC,UAAD;AACA,IAAA,QAAQ,EAAEL,QADV;AAEA,IAAA,IAAI,EAAEG,KAAK,CAACG,IAFZ;AAGA,IAAA,QAAQ,EAAE,IAHV;AAIA,IAAA,aAAa,EAAEH,KAAK,CAACJ,UAAN,CAAiBQ,MAAjB,KAA4B,QAA5B,GAAuC,IAAvC,GAA8C,KAJ7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,GAMG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXN,CADF;AAgBH,CAnBD;;AAqBA,eAAeR,UAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Store } from '../Store';\nimport ResultView from './ResultView';\nimport CustomForm from './CustomForm';\n\n// CUSTOM VIEW\n\n// RESULT VIEW NEEDS\n  //RESULT HEADER NEEDS\n    // toggleCustomForm\n    // toggle ui en general\n\nconst customView = ({ location, toggleUi, toggleCustomForm }) => {\n  const { state, dispatch } = useContext(Store);\n\n    return (\n      <div>\n        <h1>Custom View</h1>\n        <button onClick={() => toggleUi('landing')} >MAIN PAGE FROM CUSTOM VIEW</button>\n        <button onClick={() => toggleCustomForm()}>TOGGLE CUSTOM FORM FROM CUSTOM VIEW</button>\n\n        {state.customView.resultsMode \n          ? <ResultView \n            location={location}\n            data={state.data}\n            isCustom={true}\n            randomSorting={state.customView.sortBy === 'random' ? true : false}/> \n          : <CustomForm />}\n\n      </div>\n    );\n};\n\nexport default customView;"]},"metadata":{},"sourceType":"module"}