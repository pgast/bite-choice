{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useContext } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { Text } from '../Text';\nimport { StyledDataTableCell } from './StyledDataTable';\nimport { datumValue } from './buildState';\nimport { TableContext } from '../Table/TableContext';\n\nvar normalizeProp = function normalizeProp(name, rowProp, prop) {\n  if (rowProp && rowProp[name]) return rowProp[name];\n  return prop;\n};\n\nvar Cell = function Cell(_ref) {\n  var backgroundProp = _ref.background,\n      border = _ref.border,\n      _ref$column = _ref.column,\n      align = _ref$column.align,\n      columnPin = _ref$column.pin,\n      footer = _ref$column.footer,\n      property = _ref$column.property,\n      render = _ref$column.render,\n      verticalAlign = _ref$column.verticalAlign,\n      size = _ref$column.size,\n      datum = _ref.datum,\n      index = _ref.index,\n      pad = _ref.pad,\n      cellPin = _ref.pin,\n      primaryProperty = _ref.primaryProperty,\n      rowProp = _ref.rowProp,\n      scope = _ref.scope;\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n  var value = datumValue(datum, property);\n  var context = useContext(TableContext);\n  var renderContexts = context === 'body' || context === 'footer' && footer && footer.aggregate;\n  var content;\n\n  if (render && renderContexts) {\n    content = render(datum);\n  } else if (value !== undefined) {\n    content = value;\n  }\n\n  if (typeof content === 'string' || typeof content === 'number') {\n    var textProps = property === primaryProperty ? theme.dataTable.primary : {};\n    content = /*#__PURE__*/React.createElement(Text, textProps, content);\n  }\n\n  var pin;\n  if (cellPin) pin = cellPin;else if (columnPin) pin = ['left'];\n  var background;\n\n  if (pin && theme.dataTable.pinned && theme.dataTable.pinned[context]) {\n    background = theme.dataTable.pinned[context].background;\n  } else background = undefined;\n\n  return /*#__PURE__*/React.createElement(StyledDataTableCell, _extends({\n    scope: scope\n  }, theme.dataTable[context], {\n    align: align,\n    context: context,\n    verticalAlign: verticalAlign,\n    size: size,\n    background: normalizeProp('background', rowProp, Array.isArray(backgroundProp) ? backgroundProp[index % backgroundProp.length] : backgroundProp) || background,\n    border: normalizeProp('border', rowProp, border),\n    pad: normalizeProp('pad', rowProp, pad),\n    pin: pin\n  }), content);\n};\n\nCell.displayName = 'Cell';\nCell.defaultProps = {};\nObject.setPrototypeOf(Cell.defaultProps, defaultProps);\nexport { Cell };","map":null,"metadata":{},"sourceType":"module"}