{"ast":null,"code":"import _toConsumableArray from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/CustomView.js\";\nimport React, { Component } from 'react';\nimport ListItem from './ListItem'; // TODAS LAS OPCIONES DAR LOS PRIMEROS 3 DEL ARRAY\n// EN OPCION RANDOM SI SE DAN 3 RANDOM DE LA LISTA EN ACOMODO RANDOM\n\nvar CustomView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomView, _Component);\n\n  function CustomView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustomView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: [],\n      randomPicks: [],\n      searchTerms: [],\n      currentTerm: '',\n      sortBy: 'best_match'\n    };\n\n    _this.getIndeces = function (businesses) {\n      var indeces = []; // HANDLE IF DATA RETURNED IS LESS THAN 3\n\n      if (businesses.length < 3) {\n        businesses.forEach(function (el, index) {\n          indeces.push(index);\n        });\n      } else {\n        while (indeces.length < 3) {\n          var number = Math.floor(Math.random() * Math.floor(businesses.length));\n\n          if (!indeces.includes(number)) {\n            indeces.push(number);\n          }\n        }\n\n        ;\n      }\n\n      return indeces;\n    };\n\n    _this.randomPicks = function () {\n      var results = _this.getIndeces(_this.state.data).map(function (el) {\n        return _this.state.data[el];\n      });\n\n      return results;\n    };\n\n    _this.searchTerm =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(el) {\n        var response, businesses;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('/search', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    term: el,\n                    sort_by: _this.state.sortBy === 'random' ? _this.randomSorting() : _this.state.sortBy\n                  })\n                });\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                businesses = _context.sent;\n                return _context.abrupt(\"return\", businesses.businesses);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.fetchData =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var businesses;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                businesses = []; // IF SEARCH TERMS IS EMPTY \n\n                if (_this.state.searchTerms.length === 0) {\n                  // CONDUCT FETCHING OF DATA AS ALWAYS\n                  businesses.push(_this.searchTerm(''));\n                } else {\n                  // ELSE = TERMS ARRAY IS NOT EMPTY\n                  // LOOP THROUGH SEARCH TERMS ARRAY AND PERFORM FETCHING FOR EACH ELEMENT\n                  // GUARDAR DATOS DE CADA FETCHING NESTED EN ARRAYS [[], [], []];\n                  _this.state.searchTerms.forEach(function (el) {\n                    businesses.push(_this.searchTerm(el));\n                  });\n                }\n\n                _this.setState({\n                  data: businesses\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleInputChange = function (e) {\n      var target = e.target;\n      var name = target.name;\n\n      if (target.type === 'number') {\n        _this.setState(_defineProperty({}, name, parseInt(target.value)));\n      } else {\n        _this.setState(_defineProperty({}, name, target.value));\n      }\n    };\n\n    _this.randomSorting = function () {\n      var criteria = ['best_match', 'rating', 'review_count', 'distance'];\n      var index = Math.floor(Math.random() * Math.floor(criteria.length));\n      return criteria[index];\n    };\n\n    _this.addTerm = function (e) {\n      e.preventDefault();\n\n      if (_this.state.currentTerm !== '') {\n        if (_this.state.searchTerms.length < 3) {\n          var newTerms = _toConsumableArray(_this.state.searchTerms);\n\n          newTerms.push(_this.state.currentTerm);\n\n          _this.setState({\n            searchTerms: newTerms\n          });\n\n          _this.setState({\n            currentTerm: ''\n          });\n        }\n\n        ;\n      }\n\n      ;\n    };\n\n    _this.removeTerm = function (inputIndex) {\n      var newSearchTerms = _toConsumableArray(_this.state.searchTerms).filter(function (el, inx) {\n        return inx !== inputIndex;\n      });\n\n      _this.setState({\n        searchTerms: newSearchTerms\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CustomView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Custom View\"), React.createElement(\"form\", {\n        onSubmit: this.fetchData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"currentTerm\",\n        value: this.state.currentTerm,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.addTerm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Add term\")), this.state.searchTerms.map(function (el, index) {\n        return React.createElement(\"p\", {\n          key: index,\n          onClick: function onClick() {\n            return _this2.removeTerm(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }, el);\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Sort by:\", React.createElement(\"select\", {\n        name: \"sortBy\",\n        value: this.state.sortBy,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"best_match\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Best Match\"), React.createElement(\"option\", {\n        value: \"rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Rating\"), React.createElement(\"option\", {\n        value: \"review_count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Review Count\"), React.createElement(\"option\", {\n        value: \"distance\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Distance\"), React.createElement(\"option\", {\n        value: \"random\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"Random\"))), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return console.log(_this2.state);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Get state\"));\n    }\n  }]);\n\n  return CustomView;\n}(Component);\n\n;\nexport default CustomView;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/CustomView.js"],"names":["React","Component","ListItem","CustomView","state","data","randomPicks","searchTerms","currentTerm","sortBy","getIndeces","businesses","indeces","length","forEach","el","index","push","number","Math","floor","random","includes","results","map","searchTerm","fetch","method","headers","body","JSON","stringify","term","sort_by","randomSorting","response","json","fetchData","e","preventDefault","setState","handleInputChange","target","name","type","parseInt","value","criteria","addTerm","newTerms","removeTerm","inputIndex","newSearchTerms","filter","inx","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ListItem from './ListItem';\n\n// TODAS LAS OPCIONES DAR LOS PRIMEROS 3 DEL ARRAY\n// EN OPCION RANDOM SI SE DAN 3 RANDOM DE LA LISTA EN ACOMODO RANDOM\n\nclass CustomView extends Component {\n  state = {\n    data: [],\n    randomPicks: [],\n    searchTerms: [],\n    currentTerm: '',\n    sortBy:'best_match',\n  };\n\n  // FUNCTION THAT CREATES 3 RANDOM NUMBERS WITH DATA ARRAY LENGTH\n  getIndeces = (businesses) => {\n    let indeces = [];\n\n    // HANDLE IF DATA RETURNED IS LESS THAN 3\n    if (businesses.length < 3) {\n\n      businesses.forEach((el, index) => {\n        indeces.push(index);\n      });\n\n    } else {\n\n      while (indeces.length < 3) {\n        let number = Math.floor(Math.random() * Math.floor(businesses.length));\n  \n        if (!indeces.includes(number)) {\n          indeces.push(number);\n        }\n      };\n\n    }\n\n    return indeces;\n  };\n\n  // SETS 3 RANDOM PICKS AND ADDS THEM TO STATE - USING GETINDECES FUNCTION\n  randomPicks = () => {\n    let results = this.getIndeces(this.state.data).map(el => {\n      return this.state.data[el];\n    });\n\n    return results;\n  };\n\n  // GET REQUEST WITH TERM\n  // searchTerm = async e => {\n  //   e.preventDefault();\n  //   const response = await fetch('/search', {\n  //     method: 'POST',\n  //     headers: { 'Content-Type': 'application/json' },\n  //     body: JSON.stringify({ \n  //       term: this.state.searchTerms,\n  //       sort_by: this.state.sortBy === 'random' ? this.randomSorting() : this.state.sortBy\n  //     })\n  //   });\n  //   const businesses = await response.json();\n  //   this.setState({ data: businesses.businesses });    \n  //   this.setState({ randomPicks: this.randomPicks() });\n  // };\n\n\n  searchTerm = async el => {\n\n    const response = await fetch('/search', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ \n        term: el,\n        sort_by: this.state.sortBy === 'random' ? this.randomSorting() : this.state.sortBy\n      })\n    });\n\n    const businesses = await response.json();\n\n    return businesses.businesses;\n  };\n\n \n  fetchData = async e => {\n    e.preventDefault();\n    let businesses = [];\n\n    // IF SEARCH TERMS IS EMPTY \n    if (this.state.searchTerms.length === 0) {\n      // CONDUCT FETCHING OF DATA AS ALWAYS\n      businesses.push(this.searchTerm(''));\n\n    } else {\n      // ELSE = TERMS ARRAY IS NOT EMPTY\n      // LOOP THROUGH SEARCH TERMS ARRAY AND PERFORM FETCHING FOR EACH ELEMENT\n      // GUARDAR DATOS DE CADA FETCHING NESTED EN ARRAYS [[], [], []];\n      this.state.searchTerms.forEach(el => {\n        businesses.push(this.searchTerm(el));\n      });\n    }\n\n    this.setState({ data: businesses });\n  };\n\n\n\n\n\n\n\n\n\n  // UPDATE STATE WITH USER FORM INPUTS\n  handleInputChange = e => {\n    const target = e.target;\n    const name = target.name;\n\n    if (target.type === 'number') {\n      this.setState({ [name]: parseInt(target.value) });\n    } else {\n      this.setState({ [name]: target.value });\n    }\n  };\n\n  // RETURNS A RANDOM SEARCH CRITERIA WHEN USER SELECTS RANDOM\n  randomSorting = () => {\n    let criteria = ['best_match', 'rating', 'review_count', 'distance'];\n    let index = Math.floor(Math.random() * Math.floor(criteria.length));\n    return criteria[index];\n  };\n\n  // ADDS TERM TO STATE\n  addTerm = e => {\n    e.preventDefault();\n    if (this.state.currentTerm !== '') {\n      if (this.state.searchTerms.length < 3) {\n        let newTerms = [...this.state.searchTerms];\n        newTerms.push(this.state.currentTerm);\n  \n        this.setState({ searchTerms: newTerms });\n        this.setState({ currentTerm: '' });\n      };\n    }; \n  };\n\n  // REMOVES TERM FROM STATE\n  removeTerm = inputIndex => {\n    let newSearchTerms = [...this.state.searchTerms].filter((el, inx) => inx !== inputIndex);    \n    this.setState({ searchTerms: newSearchTerms });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Custom View</h1>\n\n\n        <form onSubmit={this.fetchData}>\n          <label>\n            Name:\n            <input \n              type=\"text\" \n              name=\"currentTerm\" \n              value={this.state.currentTerm} \n              onChange={this.handleInputChange} \n            />\n            <button onClick={this.addTerm}>Add term</button>\n          </label>\n\n          {\n            this.state.searchTerms.map((el, index) => {\n              return <p key={index} onClick={() => this.removeTerm(index)} >{el}</p>\n            })\n          }\n\n          <label>\n            Sort by:\n            <select name=\"sortBy\" value={this.state.sortBy} onChange={this.handleInputChange} >\n              <option value=\"best_match\">Best Match</option>\n              <option value=\"rating\">Rating</option>\n              <option value=\"review_count\">Review Count</option>\n              <option value=\"distance\">Distance</option>\n              <option value=\"random\">Random</option>\n            </select>\n          </label>\n\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n\n        {\n\n          // IF SORT BY ESTA EN RANDOM => RETURN 3 RANDOM PICKS\n\n          // this.state.randomPicks.map((el, index) => {\n          //   return <ListItem key={index} item={el} />\n          // })\n\n          // SI NO, DAR LOS 3 PRIMEROS DEL ARRAY REGRESADO\n\n          // this.state.data.forEach(el => {\n          //   el.map((element, index) => {\n          //     return <ListItem key={index} item={element} />\n          //   });\n          // })\n        }\n\n        <button onClick={() => console.log(this.state)}>Get state</button>\n      </div>\n    );\n  };\n};\n\nexport default CustomView;"]},"metadata":{},"sourceType":"module"}