{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { Stack } from '../Stack';\nvar InteractionBox = styled(Box).withConfig({\n  displayName: \"Resizer__InteractionBox\",\n  componentId: \"sc-8l808w-0\"\n})([\"cursor:col-resize;> *{opacity:0;}\", \" &:hover{> *{opacity:1;}}\"], function (props) {\n  return props.active && '> * { opacity: 1; }';\n});\n\nvar Resizer = function Resizer(_ref) {\n  var onResize = _ref.onResize,\n      property = _ref.property;\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n\n  var _useState = useState(false),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var _useState2 = useState(),\n      start = _useState2[0],\n      setStart = _useState2[1];\n\n  var _useState3 = useState(),\n      width = _useState3[0],\n      setWidth = _useState3[1];\n\n  var ref = useRef();\n  var onMouseDown = useCallback(function (event) {\n    if (ref.current) {\n      var element = ref.current; // find TH parent\n\n      while (element && element.nodeName !== 'TH') {\n        element = element.parentNode;\n      }\n\n      var rect = element.getBoundingClientRect();\n      setStart(event.clientX);\n      setWidth(rect.width);\n      setActive(true);\n    }\n  }, []);\n  var onMouseMove = useCallback(function (event) {\n    // We determined 12 empirically as being wide enough to hit but\n    // not too wide to cause false hits.\n    var nextWidth = Math.max(12, width + (event.clientX - start));\n    onResize(property, nextWidth);\n  }, [onResize, property, start, width]);\n  var onMouseUp = useCallback(function () {\n    setActive(false);\n    setStart(undefined);\n    setWidth(undefined);\n  }, []);\n  useEffect(function () {\n    var remove = function remove() {\n      document.removeEventListener('mouseup', onMouseUp);\n      document.removeEventListener('mousemove', onMouseMove);\n    };\n\n    if (active) {\n      document.addEventListener('mouseup', onMouseUp);\n      document.addEventListener('mousemove', onMouseMove);\n      return remove;\n    }\n\n    remove();\n    return undefined;\n  }, [active, onMouseMove, onMouseUp]);\n  var border;\n\n  if (theme.dataTable.resize.hover && theme.dataTable.resize.hover.border) {\n    var _theme$dataTable$resi = theme.dataTable.resize.hover.border,\n        color = _theme$dataTable$resi.color,\n        _theme$dataTable$resi2 = _theme$dataTable$resi.side,\n        side = _theme$dataTable$resi2 === void 0 ? 'end' : _theme$dataTable$resi2,\n        size = _theme$dataTable$resi.size;\n    border = {\n      color: color,\n      side: side,\n      size: size\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(Stack, {\n    anchor: \"right\"\n  }, /*#__PURE__*/React.createElement(Box, _extends({\n    flex: false,\n    responsive: false,\n    pad: {\n      vertical: 'small'\n    }\n  }, theme.dataTable.resize)), /*#__PURE__*/React.createElement(InteractionBox, {\n    active: active,\n    flex: false,\n    pad: {\n      left: 'xsmall'\n    },\n    ref: ref,\n    responsive: false,\n    onMouseDown: onMouseDown,\n    onMouseMove: start !== undefined ? onMouseMove : undefined,\n    onMouseUp: start !== undefined ? onMouseUp : undefined\n  }, /*#__PURE__*/React.createElement(Box, {\n    pad: {\n      vertical: 'small'\n    },\n    border: border\n  })));\n};\n\nResizer.displayName = 'Resizer';\nResizer.defaultProps = {};\nObject.setPrototypeOf(Resizer.defaultProps, defaultProps);\nexport { Resizer };","map":null,"metadata":{},"sourceType":"module"}