{"ast":null,"code":"export var getBreakpoint = function getBreakpoint(windowWidth, theme) {\n  var result;\n  var sortedBreakpoints = Object.keys(theme.global.breakpoints).sort(function (a, b) {\n    var first = theme.global.breakpoints[a];\n    var second = theme.global.breakpoints[b];\n    if (!first) return 1;\n    if (!second) return -1;\n    if (!first.value) return 1;\n    if (!second.value) return -1;\n    return first.value - second.value;\n  }); // the last breakpoint on the sorted array should have\n  // no windowWidth boundaries\n\n  var lastBreakpoint = sortedBreakpoints[sortedBreakpoints.length - 1];\n  sortedBreakpoints.some(function (name) {\n    var breakpoint = theme.global.breakpoints[name];\n\n    if (breakpoint) {\n      if (!breakpoint.value || breakpoint.value >= windowWidth) {\n        result = name;\n        return true;\n      }\n    }\n\n    return false;\n  });\n  return result || lastBreakpoint;\n};\nexport var getDeviceBreakpoint = function getDeviceBreakpoint(type, theme) {\n  return theme.global.deviceBreakpoints[type];\n};\nexport var getBreakpointStyle = function getBreakpointStyle(theme, breakpointSize) {\n  var breakpoint = breakpointSize && theme.global.breakpoints[breakpointSize] || {};\n  if (!breakpoint.edgeSize) breakpoint.edgeSize = theme.global.edgeSize;\n  if (!breakpoint.borderSize) breakpoint.borderSize = theme.global.borderSize;\n  if (!breakpoint.size) breakpoint.size = theme.global.size;\n  return breakpoint;\n};","map":null,"metadata":{},"sourceType":"module"}