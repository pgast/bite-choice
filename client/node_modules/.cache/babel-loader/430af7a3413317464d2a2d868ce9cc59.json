{"ast":null,"code":"import _slicedToArray from \"/Users/Pablo/Documents/React/bitechoice/v4/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v4/client/src/components/Landing.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Box, Heading, TextInput, Button, ThemeContext } from 'grommet';\nimport { FormSearch } from 'grommet-icons';\n\nvar landing = function landing(_ref) {\n  var location = _ref.location,\n      fetchSuccess = _ref.fetchSuccess;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      locationInput = _useState2[0],\n      setLocation = _useState2[1];\n\n  useEffect(function () {\n    setLocation(location);\n  }, [location]);\n\n  var capitalize = function capitalize(str) {\n    return str.replace(/\\w\\S*/g, function (txt) {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n  };\n\n  useEffect(function () {\n    if (locationInput === '' || locationInput === undefined) {\n      setLocation(location);\n    } else {// let newInfo = capitalize(locationInput);\n      // setLocation(newInfo);\n    }\n  }, [locationInput]); // dispatch to state new location (if typed)\n\n  return React.createElement(Box, {\n    pad: {\n      \"left\": \"small\",\n      \"right\": \"small\"\n    },\n    animation: \"fadeIn\",\n    justify: \"center\",\n    align: \"center\",\n    height: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, fetchSuccess || fetchSuccess === '' ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    textAlign: \"center\",\n    color: \"dark-1\",\n    margin: \"none\",\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Where to eat in\"), React.createElement(Heading, {\n    color: \"status-warning\",\n    margin: \"none\",\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, capitalize(locationInput)), React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(ThemeContext.Extend, {\n    value: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    onChange: function onChange(e) {\n      return setLocation(e.target.value);\n    },\n    placeholder: \"Wrong location? Fix it here\",\n    size: \"small\",\n    plain: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(Button, {\n    color: \"status-warning\",\n    icon: React.createElement(FormSearch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }),\n    alignSelf: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))) : React.createElement(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"unable to fetch\"));\n};\n\nexport default landing;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v4/client/src/components/Landing.js"],"names":["React","useState","useEffect","Box","Heading","TextInput","Button","ThemeContext","FormSearch","landing","location","fetchSuccess","locationInput","setLocation","capitalize","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","undefined","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Heading, TextInput, Button, ThemeContext } from 'grommet';\nimport { FormSearch } from 'grommet-icons';\n\nconst landing = ({ location, fetchSuccess }) => {\n  const [locationInput, setLocation] = useState();\n  useEffect(() => { setLocation(location) }, [location]);\n\n\n  const capitalize = (str) => {\n    return str.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n  }\n\n  useEffect(() => {\n    if (locationInput === '' || locationInput === undefined) { \n      setLocation(location); \n    } else {\n      // let newInfo = capitalize(locationInput);\n      // setLocation(newInfo);\n    }\n  }, [locationInput]);\n\n  // dispatch to state new location (if typed)\n\n\n  return (\n    <Box \n      pad={{ \"left\": \"small\", \"right\": \"small\" }} \n      animation=\"fadeIn\"\n      justify=\"center\" \n      align=\"center\" \n      height=\"100%\"\n    >\n      {fetchSuccess || fetchSuccess === '' ? \n        (\n          <React.Fragment>\n            <Heading \n              textAlign=\"center\" \n              color=\"dark-1\" \n              margin=\"none\"\n              size=\"small\"\n            >\n              Where to eat in\n            </Heading>\n            <Heading color=\"status-warning\" margin=\"none\" size=\"large\">\n              {capitalize(locationInput)}\n            </Heading>\n\n            <Box>\n              <ThemeContext.Extend value={{}}>\n                <TextInput\n                  onChange={(e) => setLocation(e.target.value)}\n                  placeholder=\"Wrong location? Fix it here\" \n                  size=\"small\"\n                  plain\n                />\n              </ThemeContext.Extend>\n              <Button \n                color=\"status-warning\"\n                icon={<FormSearch />}\n                alignSelf=\"center\"\n              />\n            </Box> \n          </React.Fragment>\n        )\n        : (\n          <Heading>unable to fetch</Heading>\n        )\n      }\n\n    </Box>\n  )\n}\n\nexport default landing;"]},"metadata":{},"sourceType":"module"}