{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/RandomView.js\";\nimport React, { Component } from 'react';\n\nvar RandomView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RandomView, _Component);\n\n  function RandomView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RandomView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RandomView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: []\n    };\n    _this.getBusinesses =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, businesses;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/getRandom');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              businesses = _context.sent;\n\n              _this.setState({\n                data: businesses.businesses\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.randomPicks = function (businesses) {\n      var indeces = [];\n\n      while (indeces.length < 3) {\n        var number = Math.floor(Math.random() * Math.floor(businesses.length));\n\n        if (!indeces.includes(number)) {\n          indeces.push(number);\n        }\n      }\n\n      ;\n      return indeces;\n    };\n\n    return _this;\n  }\n\n  _createClass(RandomView, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getBusinesses();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Random View\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, randomPicks(this.state.data).map(function (el) {\n        React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, _this2.state.data[el]);\n      })));\n    }\n  }]);\n\n  return RandomView;\n}(Component);\n\n;\nexport default RandomView;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/RandomView.js"],"names":["React","Component","RandomView","state","data","getBusinesses","fetch","response","json","businesses","setState","randomPicks","indeces","length","number","Math","floor","random","includes","push","map","el"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;UAKRC,a;;;;6BAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACSC,KAAK,CAAC,YAAD,CADd;;AAAA;AACRC,cAAAA,QADQ;AAAA;AAAA,qBAEWA,QAAQ,CAACC,IAAT,EAFX;;AAAA;AAERC,cAAAA,UAFQ;;AAGd,oBAAKC,QAAL,CAAc;AAAEN,gBAAAA,IAAI,EAAEK,UAAU,CAACA;AAAnB,eAAd;;AAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAWhBE,W,GAAc,UAACF,UAAD,EAAgB;AAC5B,UAAIG,OAAO,GAAG,EAAd;;AAEA,aAAOA,OAAO,CAACC,MAAR,GAAiB,CAAxB,EAA2B;AACzB,YAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWP,UAAU,CAACI,MAAtB,CAA3B,CAAb;;AAEA,YAAI,CAACD,OAAO,CAACM,QAAR,CAAiBJ,MAAjB,CAAL,EAA+B;AAC7BF,UAAAA,OAAO,CAACO,IAAR,CAAaL,MAAb;AACD;AACF;;AAAA;AAED,aAAOF,OAAP;AACD,K;;;;;;;yCAjBqB;AACpB,WAAKP,aAAL;AACD;;;6BAiBQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEEM,WAAW,CAAC,KAAKR,KAAL,CAAWC,IAAZ,CAAX,CAA6BgB,GAA7B,CAAiC,UAAAC,EAAE,EAAI;AACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,MAAI,CAAClB,KAAL,CAAWC,IAAX,CAAgBiB,EAAhB,CAAL;AACD,OAFD,CAFF,CAHF,CADF;AAcD;;;;EA9CsBpB,S;;AA+CxB;AAED,eAAeC,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass RandomView extends Component {\n  state = {\n    data: []\n  };\n\n  // API GET REQUEST FETCHES 3 RANDOM LOCAL BUSINESSES FROM COORDINATES\n  getBusinesses = async () => {\n    const response = await fetch('/getRandom');\n    const businesses = await response.json();\n    this.setState({ data: businesses.businesses });\n  };\n\n  componentWillMount () {\n    this.getBusinesses();\n  };\n\n  // FUNCTION THAT FETCHES 3 RANDOM ENTRIES\n  randomPicks = (businesses) => {\n    let indeces = [];\n\n    while (indeces.length < 3) {\n      let number = Math.floor(Math.random() * Math.floor(businesses.length));\n\n      if (!indeces.includes(number)) {\n        indeces.push(number);\n      }\n    };\n\n    return indeces;\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Random View</h1>\n       \n        <ul>\n        {\n          randomPicks(this.state.data).map(el => {\n            <li>{this.state.data[el]}</li>\n          })\n        }\n        </ul>\n\n      </div>\n    );\n  }; \n};\n\nexport default RandomView;\n\n\n"]},"metadata":{},"sourceType":"module"}