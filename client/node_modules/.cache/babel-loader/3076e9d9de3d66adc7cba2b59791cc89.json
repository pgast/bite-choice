{"ast":null,"code":"import _toConsumableArray from \"/Users/Pablo/Documents/React/bitechoice/v2/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/Pablo/Documents/React/bitechoice/v2/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v2/client/src/components/CustomForm.js\";\nimport React, { useState, useContext } from 'react';\nimport { Store } from '../Store';\n\nvar customForm = function customForm(_ref) {\n  var toggleUi = _ref.toggleUi,\n      customView = _ref.customView;\n\n  var _useContext = useContext(Store),\n      dispatch = _useContext.dispatch;\n\n  var _useState = useState(customView.searchTerms),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerms = _useState2[0],\n      setSearchTerms = _useState2[1];\n\n  var _useState3 = useState(customView.sortBy),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sortBy = _useState4[0],\n      setSortBy = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentTerm = _useState6[0],\n      setCurrentTerm = _useState6[1];\n\n  var submitSearchTerms = function submitSearchTerms(e) {\n    e.preventDefault();\n    var payload = {\n      sortBy: sortBy,\n      searchTerms: searchTerms\n    };\n    return dispatch({\n      type: 'SUBMIT_SEARCH',\n      payload: payload\n    });\n  };\n\n  var addTerm = function addTerm(e) {\n    e.preventDefault();\n\n    if (currentTerm !== '') {\n      if (searchTerms.length < 3) {\n        var newTerms = _toConsumableArray(searchTerms);\n\n        newTerms.push(currentTerm);\n        setSearchTerms(newTerms);\n        setCurrentTerm('');\n      }\n    }\n  };\n\n  var removeTerm = function removeTerm(inputIndex) {\n    var newSearchTerms = _toConsumableArray(searchTerms).filter(function (el, inx) {\n      return inx !== inputIndex;\n    });\n\n    setSearchTerms(newSearchTerms);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Custom Form\"), React.createElement(\"form\", {\n    onSubmit: function onSubmit(e) {\n      return submitSearchTerms(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Name:\", React.createElement(\"input\", {\n    onChange: function onChange(e) {\n      return setCurrentTerm(e.target.value);\n    },\n    placeholder: \"Type Search Term\",\n    value: currentTerm,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: function onClick(e) {\n      return addTerm(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Add term\")), searchTerms.map(function (el, index) {\n    return React.createElement(\"p\", {\n      key: index,\n      onClick: function onClick() {\n        return removeTerm(index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, el);\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Sort by:\", React.createElement(\"select\", {\n    value: sortBy,\n    onChange: function onChange(e) {\n      return setSortBy(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"best_match\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Best Match\"), React.createElement(\"option\", {\n    value: \"rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Rating\"), React.createElement(\"option\", {\n    value: \"review_count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Review Count\"), React.createElement(\"option\", {\n    value: \"distance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Distance\"), React.createElement(\"option\", {\n    value: \"random\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Random\"))), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return toggleUi('landing');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"MAIN PAGE\"));\n};\n\nexport default customForm;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v2/client/src/components/CustomForm.js"],"names":["React","useState","useContext","Store","customForm","toggleUi","customView","dispatch","searchTerms","setSearchTerms","sortBy","setSortBy","currentTerm","setCurrentTerm","submitSearchTerms","e","preventDefault","payload","type","addTerm","length","newTerms","push","removeTerm","inputIndex","newSearchTerms","filter","el","inx","target","value","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Store } from '../Store';\n\nconst customForm = ({ toggleUi, customView }) => {\n  const { dispatch } = useContext(Store);\n  const [searchTerms, setSearchTerms] = useState(customView.searchTerms);\n  const [sortBy, setSortBy] = useState(customView.sortBy);\n  const [currentTerm, setCurrentTerm] = useState(\"\");\n\n  const submitSearchTerms = (e) => {\n    e.preventDefault();\n    let payload = { sortBy, searchTerms };\n    return dispatch ({\n      type: 'SUBMIT_SEARCH',\n      payload\n    });\n  };\n\n  const addTerm = (e) => {\n    e.preventDefault();\n    if (currentTerm !== '') {\n      if (searchTerms.length < 3) {\n        let newTerms = [...searchTerms];\n        newTerms.push(currentTerm);\n        setSearchTerms(newTerms);\n        setCurrentTerm('');\n      }\n    }\n  };\n\n  const removeTerm = (inputIndex) => {\n    const newSearchTerms = [...searchTerms].filter((el, inx) => inx !== inputIndex);\n    setSearchTerms(newSearchTerms);\n  };\n\n  return (\n    <div>\n      <h1>Custom Form</h1>\n      <form onSubmit={(e) => submitSearchTerms(e)}>\n\n        <label>\n          Name:\n          <input \n            onChange={(e) => setCurrentTerm(e.target.value)} \n            placeholder=\"Type Search Term\"\n            value={currentTerm}\n            type=\"text\" \n          />\n          <button onClick={(e) => addTerm(e)}>Add term</button>\n        </label>\n\n        {searchTerms.map((el, index) => {\n          return <p key={index} onClick={() => removeTerm(index)}>{el}</p>\n        })}\n\n        <label>\n          Sort by:\n          <select value={sortBy} onChange={(e) => setSortBy(e.target.value)}>\n            <option value=\"best_match\">Best Match</option>\n            <option value=\"rating\">Rating</option>\n            <option value=\"review_count\">Review Count</option>\n            <option value=\"distance\">Distance</option>\n            <option value=\"random\">Random</option>\n          </select>\n        </label>\n\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n      <button onClick={() => toggleUi('landing')}>MAIN PAGE</button>\n    </div>\n  );\n};\n\nexport default customForm;"]},"metadata":{},"sourceType":"module"}