{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.hoverIndicatorPropType = exports.genericProps = exports.padPropType = exports.marginProp = exports.colorPropType = exports.backgroundDoc = exports.a11yTitlePropType = void 0;\n\nvar _reactDesc = require(\"react-desc\");\n\nvar a11yTitlePropType = _reactDesc.PropTypes.string.description(\"Custom label to be used by screen readers. When provided, an aria-label will\\n   be added to the element.\");\n\nexports.a11yTitlePropType = a11yTitlePropType;\n\nvar backgroundDoc = _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.string, _reactDesc.PropTypes.shape({\n  color: _reactDesc.PropTypes.string,\n  dark: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.bool, _reactDesc.PropTypes.string]),\n  image: _reactDesc.PropTypes.string,\n  position: _reactDesc.PropTypes.string,\n  opacity: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.string, _reactDesc.PropTypes.bool, _reactDesc.PropTypes.number, _reactDesc.PropTypes.oneOf(['weak', 'medium', 'strong'])]),\n  repeat: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(['no-repeat', 'repeat']), _reactDesc.PropTypes.string]),\n  size: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(['cover', 'contain']), _reactDesc.PropTypes.string]),\n  light: _reactDesc.PropTypes.string\n})]).description(\"Either a color \\nidentifier to use for the background color. For example: 'neutral-1'. Or, a \\n'url()' for an image. Dark is not needed if color is provided.\");\n\nexports.backgroundDoc = backgroundDoc;\n\nvar colorPropType = _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.string, _reactDesc.PropTypes.shape({\n  dark: _reactDesc.PropTypes.string,\n  light: _reactDesc.PropTypes.string\n})]);\n\nexports.colorPropType = colorPropType;\nvar MARGIN_SIZES = ['xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge'];\n\nvar marginProp = _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(['none'].concat(MARGIN_SIZES)), _reactDesc.PropTypes.shape({\n  bottom: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(MARGIN_SIZES), _reactDesc.PropTypes.string]),\n  end: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(MARGIN_SIZES), _reactDesc.PropTypes.string]),\n  horizontal: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(MARGIN_SIZES), _reactDesc.PropTypes.string]),\n  left: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(MARGIN_SIZES), _reactDesc.PropTypes.string]),\n  right: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(MARGIN_SIZES), _reactDesc.PropTypes.string]),\n  start: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(MARGIN_SIZES), _reactDesc.PropTypes.string]),\n  top: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(MARGIN_SIZES), _reactDesc.PropTypes.string]),\n  vertical: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(MARGIN_SIZES), _reactDesc.PropTypes.string])\n}), _reactDesc.PropTypes.string]).description(\"The amount of margin around the component. An object can\\n    be specified to distinguish horizontal margin, vertical margin, and\\n    margin on a particular side.\");\n\nexports.marginProp = marginProp;\nvar PAD_SIZES = ['xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge'];\n\nvar padPropType = _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(['none'].concat(PAD_SIZES)), _reactDesc.PropTypes.shape({\n  bottom: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(PAD_SIZES), _reactDesc.PropTypes.string]),\n  end: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(PAD_SIZES), _reactDesc.PropTypes.string]),\n  horizontal: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(PAD_SIZES), _reactDesc.PropTypes.string]),\n  left: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(PAD_SIZES), _reactDesc.PropTypes.string]),\n  right: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(PAD_SIZES), _reactDesc.PropTypes.string]),\n  start: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(PAD_SIZES), _reactDesc.PropTypes.string]),\n  top: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(PAD_SIZES), _reactDesc.PropTypes.string]),\n  vertical: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(PAD_SIZES), _reactDesc.PropTypes.string])\n}), _reactDesc.PropTypes.string]).description(\"The amount of padding around the box contents. An\\n    object can be specified to distinguish horizontal padding, vertical\\n    padding, and padding on a particular side of the box\").defaultValue('none');\n\nexports.padPropType = padPropType;\nvar genericProps = {\n  a11yTitle: a11yTitlePropType,\n  alignSelf: _reactDesc.PropTypes.oneOf(['start', 'center', 'end', 'stretch']).description(\"How to align along the cross axis when contained in\\n      a Box or along the column axis when contained in a Grid.\"),\n  gridArea: _reactDesc.PropTypes.string.description(\"The name of the area to place\\n    this inside a parent Grid.\"),\n  margin: marginProp\n};\nexports.genericProps = genericProps;\n\nvar hoverIndicatorPropType = _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.bool, _reactDesc.PropTypes.string, _reactDesc.PropTypes.oneOf(['background']), _reactDesc.PropTypes.shape({\n  color: _reactDesc.PropTypes.string,\n  dark: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.bool, _reactDesc.PropTypes.string]),\n  image: _reactDesc.PropTypes.string,\n  light: _reactDesc.PropTypes.string,\n  position: _reactDesc.PropTypes.string,\n  opacity: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.string, _reactDesc.PropTypes.bool, _reactDesc.PropTypes.number, _reactDesc.PropTypes.oneOf(['weak', 'medium', 'strong'])]),\n  repeat: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(['no-repeat', 'repeat']), _reactDesc.PropTypes.string]),\n  size: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.oneOf(['cover', 'contain']), _reactDesc.PropTypes.string])\n})]);\n\nexports.hoverIndicatorPropType = hoverIndicatorPropType;","map":null,"metadata":{},"sourceType":"script"}