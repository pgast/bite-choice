{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/ResultList.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Store } from '../Store'; // FIRST GET INPUT DATA 3 DISPLAY ITEMS AND EVERYTHING ELSE AS DATA\n// IF IS RANDOM MODE GET 3 \n// NO TERM && cualquier criterio menos random\n// RETURN LOS PRIMEROS 3 DE ARRAY DE RESPUESTA\n// NO TERM && random\n// RETURN RANDOM 3 ITEMS\n// 1 TERM && cualquier criterio menos random\n// RETURN LOS PRIMERO 3 DE ARRAY DE RESPUESTA\n// 1 TERM && random\n// RETURN RANDOM 3 ITEMS\n// 2 TERM && cualquier criterio menos random\n// RETURN EL PRIMERO DE 1 Y LOS PRIMEROS 2 DE OTRO (cual tiene 1 y cual 2 luego se define)\n// 2 TERM && random\n// RETURN RANDOM 1 DE 1 Y 2 RANDOM DE OTRO\n// 3 TERM && cualquier criterio menos random\n// RETURN el primero de cada term\n// 3 TERM && random \n// RETURN y \n\nvar resultList = function resultList(_ref) {\n  var data = _ref.data,\n      randomSorting = _ref.randomSorting,\n      isCustom = _ref.isCustom;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      businesses = _useState2[0],\n      setBusinesses = _useState2[1];\n\n  var _useState3 = useState([{\n    name: 'Waiting for items'\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayItems = _useState4[0],\n      setDisplayItems = _useState4[1];\n\n  var _useContext = useContext(Store),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var toggleUi = function toggleUi(ui) {\n    return dispatch({\n      type: 'TOGGLE_UI',\n      payload: ui\n    });\n  }; ////////  WORKING SOLUTION IN RANDOM MODE /////////////\n  // useEffect(() => {\n  //   async function fetchData() {\n  //     let newData = await data;\n  //     setBusinesses(newData);\n  //   }\n  //   fetchData();\n  // }, [data, setBusinesses]);\n  // funciona random, custom no\n\n\n  useEffect(function () {\n    function fetchCustomData() {\n      return _fetchCustomData.apply(this, arguments);\n    }\n\n    function _fetchCustomData() {\n      _fetchCustomData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var resultArray, i;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                resultArray = [];\n                i = 0;\n\n              case 2:\n                if (!(i < data.length)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 5;\n                return [].concat(_toConsumableArray(resultArray), _toConsumableArray(data[i]));\n\n              case 5:\n                resultArray = _context.sent;\n\n              case 6:\n                i++;\n                _context.next = 2;\n                break;\n\n              case 9:\n                setBusinesses(resultArray);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchCustomData.apply(this, arguments);\n    }\n\n    if (isCustom) {\n      fetchCustomData();\n    } else {\n      setStatesRandom(data);\n    }\n  }, [data, setBusinesses]); // returns 3 random indeces depending on input array length\n\n  var getIndeces = function getIndeces(businesses) {\n    var indeces = [];\n\n    if (businesses.length <= 3) {\n      indeces.push(0, 2);\n    } else if (businesses.length !== 0) {\n      while (indeces.length < 3) {\n        var number = Math.floor(Math.random() * Math.floor(businesses.length));\n\n        if (!indeces.includes(number)) {\n          indeces.push(number);\n        }\n      }\n\n      ;\n    }\n\n    return indeces;\n  }; // returns 3 random array items using get indeces function\n\n\n  var randomPicks = function randomPicks(array) {\n    var results = getIndeces(array).map(function (el) {\n      return array[el];\n    });\n    return results;\n  }; // IF IS IN CUSTOM MODE\n\n\n  var setStatesCustom = function setStatesCustom(inputData) {\n    // 1 array only\n    console.log('set states custom');\n  }; // IF IS RANDOM MODE\n\n\n  var setStatesRandom =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(inputData) {\n      var newData, newDisplayItems, i, item;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return inputData;\n\n            case 2:\n              newData = _context2.sent;\n              newDisplayItems = [];\n\n              if (newData.length < 3 && newData.length !== 0) {\n                newDisplayItems = newData;\n              } else if (newData.length > 3) {\n                newDisplayItems = randomPicks(newData);\n\n                for (i = 0; i < newDisplayItems.length; i++) {\n                  item = newData.indexOf(newDisplayItems[i]);\n\n                  if (item > -1) {\n                    newData.splice(item, 1);\n                  }\n\n                  ;\n                }\n              }\n\n              setBusinesses(newData);\n              setDisplayItems(newDisplayItems);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function setStatesRandom(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var removeItem = function removeItem(passedIndex) {\n    // update display items by deleting clicked item\n    var newDisplayItems = displayItems.filter(function (el, index) {\n      return passedIndex !== index;\n    }); // copy state\n\n    var newState = businesses;\n    var newItem; // if random mode is selected\n\n    if (randomSorting) {\n      // select random item from new state and save it to new item\n      newItem = newState[getIndeces(newState)[0]]; // update new state, filtering out the new item\n\n      newState = newState.filter(function (el) {\n        return newItem.name !== el.name;\n      });\n    } else {\n      // save value of removed item from array with shift\n      newItem = newState.shift();\n    }\n\n    if (newItem !== undefined) {\n      newDisplayItems.push(newItem);\n    }\n\n    setBusinesses(newState);\n    setDisplayItems(newDisplayItems);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return console.log(businesses);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"GET BUSINESSES STATE\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return console.log(displayItems);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"GET DISPLAY ITEMS STATE\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return toggleUi('landing');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"MAIN PAGE\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, displayItems.map(function (el, index) {\n    return React.createElement(\"li\", {\n      key: index,\n      onClick: function onClick() {\n        return removeItem(index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, el.name);\n  })));\n};\n\nexport default resultList;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/ResultList.js"],"names":["React","useState","useEffect","useContext","Store","resultList","data","randomSorting","isCustom","businesses","setBusinesses","name","displayItems","setDisplayItems","state","dispatch","toggleUi","ui","type","payload","fetchCustomData","resultArray","i","length","setStatesRandom","getIndeces","indeces","push","number","Math","floor","random","includes","randomPicks","array","results","map","el","setStatesCustom","inputData","console","log","newData","newDisplayItems","item","indexOf","splice","removeItem","passedIndex","filter","index","newState","newItem","shift","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Store } from '../Store';\n\n// FIRST GET INPUT DATA 3 DISPLAY ITEMS AND EVERYTHING ELSE AS DATA\n  // IF IS RANDOM MODE GET 3 \n\n// NO TERM && cualquier criterio menos random\n// RETURN LOS PRIMEROS 3 DE ARRAY DE RESPUESTA\n\n// NO TERM && random\n// RETURN RANDOM 3 ITEMS\n\n// 1 TERM && cualquier criterio menos random\n// RETURN LOS PRIMERO 3 DE ARRAY DE RESPUESTA\n\n// 1 TERM && random\n// RETURN RANDOM 3 ITEMS\n\n// 2 TERM && cualquier criterio menos random\n// RETURN EL PRIMERO DE 1 Y LOS PRIMEROS 2 DE OTRO (cual tiene 1 y cual 2 luego se define)\n\n// 2 TERM && random\n// RETURN RANDOM 1 DE 1 Y 2 RANDOM DE OTRO\n\n// 3 TERM && cualquier criterio menos random\n// RETURN el primero de cada term\n\n// 3 TERM && random \n// RETURN y \n\n\n\nconst resultList = ({ data, randomSorting, isCustom }) => {\n  const [businesses, setBusinesses] = useState([]);\n  const [displayItems, setDisplayItems] = useState([{ name: 'Waiting for items' }]);\n  const { state, dispatch } = useContext(Store);\n\n  const toggleUi = (ui) => {\n    return dispatch ({\n      type: 'TOGGLE_UI',\n      payload: ui\n    });\n  };\n\n  ////////  WORKING SOLUTION IN RANDOM MODE /////////////\n  // useEffect(() => {\n  //   async function fetchData() {\n  //     let newData = await data;\n  //     setBusinesses(newData);\n  //   }\n\n  //   fetchData();\n  // }, [data, setBusinesses]);\n\n\n  // funciona random, custom no\n  useEffect(() => {\n    async function fetchCustomData() {\n      let resultArray = [];\n  \n      for (let i=0; i<data.length; i++) {\n        resultArray = await [...resultArray, ...data[i]];\n      }\n      setBusinesses(resultArray);\n    }\n\n    if (isCustom) {\n      fetchCustomData();\n    } else {\n      setStatesRandom(data);\n    }\n\n  }, [data, setBusinesses]);\n\n\n  \n\n  // returns 3 random indeces depending on input array length\n  const getIndeces = (businesses) => {\n    let indeces = [];\n    if (businesses.length <= 3) {\n      indeces.push(0, 2);\n    } else if (businesses.length !== 0) {\n      while (indeces.length < 3) {\n        let number = Math.floor(Math.random() * Math.floor(businesses.length));\n        if (!indeces.includes(number)) {\n          indeces.push(number);\n        }\n      };\n    }\n    return indeces;\n  }\n\n  // returns 3 random array items using get indeces function\n  const randomPicks = (array) => {\n    let results = getIndeces(array).map(el => {\n      return array[el];\n    })\n    return results;\n  }\n\n\n  // IF IS IN CUSTOM MODE\n  const setStatesCustom = (inputData) => {\n    // 1 array only\n    console.log('set states custom');\n  }\n  \n\n  // IF IS RANDOM MODE\n  const setStatesRandom = async (inputData) => {\n    let newData = await inputData;\n    let newDisplayItems = [];\n\n\n    if (newData.length < 3 && newData.length !== 0) {\n      newDisplayItems = newData;\n    } else if (newData.length > 3) {\n      newDisplayItems = randomPicks(newData);\n\n      for (let i=0; i<newDisplayItems.length; i++) {\n        let item = newData.indexOf(newDisplayItems[i]);\n        if (item > -1) { newData.splice(item, 1) };\n      }\n    }\n\n    setBusinesses(newData);\n    setDisplayItems(newDisplayItems);\n  }\n\n\n\n\n\n\n\n  const removeItem = (passedIndex) => {\n    // update display items by deleting clicked item\n    let newDisplayItems = displayItems.filter((el, index) => passedIndex !== index);\n    // copy state\n    let newState = businesses;\n    let newItem;\n\n\n    // if random mode is selected\n    if (randomSorting) {\n      // select random item from new state and save it to new item\n      newItem = newState[getIndeces(newState)[0]];\n      // update new state, filtering out the new item\n      newState = newState.filter(el => newItem.name !== el.name);\n    } else {\n      // save value of removed item from array with shift\n      newItem = newState.shift();\n    }\n\n    if (newItem !== undefined) {\n      newDisplayItems.push(newItem);\n    }\n    \n    setBusinesses(newState);\n    setDisplayItems(newDisplayItems);\n  }\n\n\n\n  return (\n    <div>\n      <button onClick={() => console.log(businesses)}>GET BUSINESSES STATE</button>\n      <button onClick={() => console.log(displayItems)}>GET DISPLAY ITEMS STATE</button>\n      <button onClick={() => toggleUi('landing')}>MAIN PAGE</button>\n\n      <ul>\n        { \n          displayItems.map((el, index) => {\n            return <li key={index} onClick={() => removeItem(index)}>{el.name}</li>\n          })\n        }\n      </ul>\n    </div>\n  );\n};\n\nexport default resultList;"]},"metadata":{},"sourceType":"module"}