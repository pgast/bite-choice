{"ast":null,"code":"import _classCallCheck from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/ResultList.js\";\nimport React, { Component } from 'react';\n\nvar ResultList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ResultList, _Component);\n\n  function ResultList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ResultList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ResultList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: _this.props.data\n    };\n    return _this;\n  }\n\n  _createClass(ResultList, [{\n    key: \"removeItem\",\n    // TAKE FULL DATA [1,2,3,4,5,6]\n    // SELECT 3 ITEMS AND UPDATE DATA\n    // REFRESH DATA ARRAY EACH TIME ONE ITEM IS DELETED\n    // ONLY SHOW 3 RANDOM PICKS\n    // WHEN USER CLICKS IN ONE ITEM IT DELETES AND GIVES ANOTHER RANDOM FROM THE LIST\n    value: function removeItem(name) {\n      console.log(index);\n      var newData = this.state.data.filter(function (el) {\n        return el !== name;\n      });\n      this.setState({\n        data: newData\n      });\n      console.log(newData);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, this.props.data.map(function (el, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          onClick: function onClick() {\n            return _this2.removeItem(el.name);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, el.name);\n      }));\n    }\n  }]);\n\n  return ResultList;\n}(Component);\n\n;\nexport default ResultList;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/ResultList.js"],"names":["React","Component","ResultList","state","data","props","name","console","log","index","newData","filter","el","setState","map","removeItem"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,MAAKC,KAAL,CAAWD;AADX,K;;;;;;AAIR;AACA;AACA;AAEA;AACA;+BAEYE,I,EAAM;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,UAAIC,OAAO,GAAG,KAAKP,KAAL,CAAWC,IAAX,CAAgBO,MAAhB,CAAuB,UAACC,EAAD;AAAA,eAAQA,EAAE,KAAKN,IAAf;AAAA,OAAvB,CAAd;AACA,WAAKO,QAAL,CAAc;AAAET,QAAAA,IAAI,EAAEM;AAAR,OAAd;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACD;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKL,KAAL,CAAWD,IAAX,CAAgBU,GAAhB,CAAoB,UAACF,EAAD,EAAKH,KAAL,EAAe;AACjC,eAAO;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAgB,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACM,UAAL,CAAgBH,EAAE,CAACN,IAAnB,CAAN;AAAA,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0DM,EAAE,CAACN,IAA7D,CAAP;AACD,OAFD,CAFJ,CADF;AASD;;;;EA7BsBL,S;;AA8BxB;AAED,eAAeC,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass ResultList extends Component {\n  state = {\n    data: this.props.data\n  };\n\n  // TAKE FULL DATA [1,2,3,4,5,6]\n  // SELECT 3 ITEMS AND UPDATE DATA\n  // REFRESH DATA ARRAY EACH TIME ONE ITEM IS DELETED\n\n  // ONLY SHOW 3 RANDOM PICKS\n  // WHEN USER CLICKS IN ONE ITEM IT DELETES AND GIVES ANOTHER RANDOM FROM THE LIST\n\n  removeItem (name) {\n    console.log(index);\n    let newData = this.state.data.filter((el) => el !== name);\n    this.setState({ data: newData });\n    console.log(newData);\n  };\n\n  render() {\n    return (\n      <ul>\n        {\n          this.props.data.map((el, index) => {\n            return <li key={index} onClick={() => this.removeItem(el.name)}>{el.name}</li>\n          })\n        }\n      </ul>\n    );\n  }\n};\n\nexport default ResultList;"]},"metadata":{},"sourceType":"module"}