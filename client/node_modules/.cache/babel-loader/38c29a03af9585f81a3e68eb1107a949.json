{"ast":null,"code":"import _slicedToArray from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v1/client/src/Store.js\";\nimport React, { useReducer, createContext } from \"react\";\nvar initialState = {\n  customView: {\n    resultsMode: false\n  }\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'TOGGLE':\n      var customViewCopy = state.customView;\n      customViewCopy.resultsMode = !customViewCopy.resultsMode;\n      return _objectSpread({}, state, {\n        customView: customViewCopy\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var value = {\n    state: state,\n    dispatch: dispatch\n  };\n  return React.createElement(Store.Provider, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.children);\n}\nexport var Store = createContext();","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v1/client/src/Store.js"],"names":["React","useReducer","createContext","initialState","customView","resultsMode","reducer","state","action","type","customViewCopy","StoreProvider","props","dispatch","value","children","Store"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAE;AADH;AADO,CAArB;;AAMA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,QAAL;AACE,UAAIC,cAAc,GAAGH,KAAK,CAACH,UAA3B;AACAM,MAAAA,cAAc,CAACL,WAAf,GAA6B,CAACK,cAAc,CAACL,WAA7C;AACA,+BAAYE,KAAZ;AAAmBH,QAAAA,UAAU,EAAEM;AAA/B;;AACF;AACE,aAAOH,KAAP;AANJ;AAQD;;AAED,OAAO,SAASI,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,oBACTX,UAAU,CAACK,OAAD,EAAUH,YAAV,CADD;AAAA;AAAA,MAC5BI,KAD4B;AAAA,MACrBM,QADqB;;AAEnC,MAAMC,KAAK,GAAG;AAACP,IAAAA,KAAK,EAALA,KAAD;AAAQM,IAAAA,QAAQ,EAARA;AAAR,GAAd;AACA,SAAO,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BF,KAAK,CAACG,QAArC,CAAP;AACD;AAED,OAAO,IAAMC,KAAK,GAAGd,aAAa,EAA3B","sourcesContent":["import React, { useReducer, createContext } from \"react\";\n\nconst initialState = {\n  customView: {\n    resultsMode: false\n  }\n}\n\nfunction reducer(state, action) {\n  switch(action.type) {\n    case 'TOGGLE':\n      let customViewCopy = state.customView\n      customViewCopy.resultsMode = !customViewCopy.resultsMode;\n      return { ...state, customView: customViewCopy};\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const value = {state, dispatch}\n  return <Store.Provider value={value}>{props.children}</Store.Provider>\n}\n\nexport const Store = createContext();"]},"metadata":{},"sourceType":"module"}