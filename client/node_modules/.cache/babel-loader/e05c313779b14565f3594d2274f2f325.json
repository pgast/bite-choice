{"ast":null,"code":"import _slicedToArray from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v1/client/src/Store.js\";\nimport React, { useReducer, createContext } from \"react\";\nvar initialState = {\n  customView: {\n    resultsMode: false,\n    searchTerms: [],\n    sortBy: 'best_match'\n  },\n  data: [],\n  ui: 'landing'\n};\n\nvar randomSorting = function randomSorting() {\n  var criteria = ['best_match', 'rating', 'review_count', 'distance'];\n  var index = Math.floor(Math.random() * 4);\n  return criteria[index];\n};\n\nvar searchTerm =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(term, sort_by) {\n    var response, businesses;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('/search', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                term: term,\n                sort_by: sort_by\n              })\n            });\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            businesses = _context.sent;\n            return _context.abrupt(\"return\", businesses.businesses);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function searchTerm(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar fetchData =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(searchInputs) {\n    var sorting, data, termOne, termTwo, termThree, dataOne, dataTwo, dataThree;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            sorting = searchInputs.sortBy === 'random' ? randomSorting() : searchInputs.sortBy;\n\n            if (!(searchInputs.searchTerms.length === 0)) {\n              _context2.next = 8;\n              break;\n            }\n\n            _context2.next = 4;\n            return searchTerm(null, sorting);\n\n          case 4:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data);\n\n          case 8:\n            termOne = searchInputs.searchTerms[0] !== undefined ? searchInputs.searchTerms[0] : null;\n            termTwo = searchInputs.searchTerms[1] !== undefined ? searchInputs.searchTerms[1] : null;\n            termThree = searchInputs.searchTerms[2] !== undefined ? searchInputs.searchTerms[2] : null;\n            dataOne = [];\n            dataTwo = [];\n            dataThree = [];\n\n            if (!(termOne !== null)) {\n              _context2.next = 18;\n              break;\n            }\n\n            _context2.next = 17;\n            return searchTerm(termOne, sorting);\n\n          case 17:\n            dataOne = _context2.sent;\n\n          case 18:\n            if (!(termTwo !== null)) {\n              _context2.next = 22;\n              break;\n            }\n\n            _context2.next = 21;\n            return searchTerm(termTwo, sorting);\n\n          case 21:\n            dataTwo = _context2.sent;\n\n          case 22:\n            if (!(termThree !== null)) {\n              _context2.next = 26;\n              break;\n            }\n\n            _context2.next = 25;\n            return searchTerm(termThree, sorting);\n\n          case 25:\n            dataThree = _context2.sent;\n\n          case 26:\n            return _context2.abrupt(\"return\", [].concat(_toConsumableArray(dataOne), _toConsumableArray(dataTwo), _toConsumableArray(dataThree)));\n\n          case 27:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function fetchData(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar fetchRandomData =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3() {\n    var response, businesses;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch('/getRandom');\n\n          case 2:\n            response = _context3.sent;\n            _context3.next = 5;\n            return response.json();\n\n          case 5:\n            businesses = _context3.sent;\n            return _context3.abrupt(\"return\", businesses.businesses);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function fetchRandomData() {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction reducer(state, action) {\n  var customViewCopy = _objectSpread({}, state.customView);\n\n  switch (action.type) {\n    case 'TOGGLE_CUSTOM_FORM':\n      customViewCopy.resultsMode = !customViewCopy.resultsMode;\n      return _objectSpread({}, state, {\n        customView: customViewCopy\n      });\n\n    case 'SUBMIT_SEARCH':\n      customViewCopy = {\n        searchTerms: action.payload.searchTerms,\n        sortBy: action.payload.sortBy,\n        resultsMode: true\n      };\n      return _objectSpread({}, state, {\n        customView: customViewCopy,\n        data: fetchData(action.payload)\n      });\n\n    case 'FETCH_RANDOM_DATA':\n      return _objectSpread({}, state, {\n        data: fetchRandomData()\n      });\n\n    case 'TOGGLE_UI':\n      customViewCopy = {\n        resultsMode: false,\n        searchTerms: [],\n        sortBy: 'best_match'\n      };\n      return _objectSpread({}, state, {\n        customView: customViewCopy,\n        data: [],\n        ui: action.payload\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var value = {\n    state: state,\n    dispatch: dispatch\n  };\n  return React.createElement(Store.Provider, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, props.children);\n}\nexport var Store = createContext();","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v1/client/src/Store.js"],"names":["React","useReducer","createContext","initialState","customView","resultsMode","searchTerms","sortBy","data","ui","randomSorting","criteria","index","Math","floor","random","searchTerm","term","sort_by","fetch","method","headers","body","JSON","stringify","response","json","businesses","fetchData","searchInputs","sorting","length","termOne","undefined","termTwo","termThree","dataOne","dataTwo","dataThree","fetchRandomData","reducer","state","action","customViewCopy","type","payload","StoreProvider","props","dispatch","value","children","Store"],"mappings":"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","sourcesContent":["import React, { useReducer, createContext } from \"react\";\n\nconst initialState = {\n  customView: {\n    resultsMode: false,\n    searchTerms: [],\n    sortBy: 'best_match'\n  },\n  data: [],\n  ui: 'landing'\n}\n\n\n\nconst randomSorting = () => {\n  let criteria = ['best_match', 'rating', 'review_count', 'distance'];\n  let index = Math.floor(Math.random() * 4);\n  return criteria[index];\n};\n\nconst searchTerm = async (term, sort_by) => {\n  const response = await fetch('/search', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ \n      term,\n      sort_by\n    })\n  });\n  const businesses = await response.json();\n  return businesses.businesses;\n};\n\n\nconst fetchData = async (searchInputs) => {\n  let sorting = searchInputs.sortBy === 'random' ? randomSorting() : searchInputs.sortBy\n\n  if (searchInputs.searchTerms.length === 0) {\n    let data = await searchTerm(null, sorting);\n    return data;\n  } else { \n    let termOne = searchInputs.searchTerms[0] !== undefined ? searchInputs.searchTerms[0] : null; \n    let termTwo = searchInputs.searchTerms[1] !== undefined ? searchInputs.searchTerms[1] : null; \n    let termThree = searchInputs.searchTerms[2] !== undefined ? searchInputs.searchTerms[2] : null; \n\n    let dataOne = [];\n    let dataTwo = [];\n    let dataThree = [];\n\n    if (termOne !== null) {\n      dataOne = await searchTerm(termOne, sorting);\n    }\n\n    if (termTwo !== null) {\n      dataTwo = await searchTerm(termTwo, sorting);\n    }\n\n    if (termThree !== null) {\n      dataThree = await searchTerm(termThree, sorting);\n    }\n\n    return [...dataOne, ...dataTwo, ...dataThree];\n\n    // ///// RETURNS VALUES EVALUATED LATER  //////////////\n    // let newData = [];\n    // searchInputs.searchTerms.forEach(async function(item) {\n    //   let searchResult = await searchTerm(item, sorting);\n    //   await newData.push(searchResult);\n    // });\n    // return newData;\n\n\n    // ///////// RETURNS PROMISES  //////////////\n    // const multipleTerms = async (inputTerms) => {\n    //   let terms = await inputTerms;\n    //   let newData = [];\n\n    //   terms.forEach(async (item) => {\n    //     let searchResult = await searchTerm(item, sorting);\n    //     await newData.push(searchResult);\n    //   })\n\n    //   return newData;\n    // }\n\n    // //return multipleTerms(searchInputs.searchTerms);\n    // return multipleTerms(searchInputs.searchTerms).then(res => res);\n\n  }\n};\n\n\nconst fetchRandomData = async () => {\n  const response = await fetch('/getRandom');\n  const businesses = await response.json();\n  return businesses.businesses;\n};\n\n\n\nfunction reducer(state, action) {\n  let customViewCopy = {...state.customView};\n\n  switch(action.type) {\n    case 'TOGGLE_CUSTOM_FORM':\n      customViewCopy.resultsMode = !customViewCopy.resultsMode;\n      return { ...state, customView: customViewCopy};\n\n    case 'SUBMIT_SEARCH':\n      customViewCopy = {\n        searchTerms: action.payload.searchTerms,\n        sortBy: action.payload.sortBy,\n        resultsMode: true\n      }\n\n      return {...state, customView: customViewCopy, data: fetchData(action.payload)};\n\n\n    case 'FETCH_RANDOM_DATA':\n      return {...state, data: fetchRandomData()};\n      \n    case 'TOGGLE_UI':\n      customViewCopy = {\n        resultsMode: false,\n        searchTerms: [],\n        sortBy: 'best_match'\n      }\n\n      return {...state, customView: customViewCopy, data: [], ui: action.payload};\n      \n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const value = {state, dispatch}\n  return <Store.Provider value={value}>{props.children}</Store.Provider>\n}\n\nexport const Store = createContext();"]},"metadata":{},"sourceType":"module"}