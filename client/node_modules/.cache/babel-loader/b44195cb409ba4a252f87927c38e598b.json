{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useEffect, useState } from 'react';\nimport { Box } from '../Box';\nimport { StyledDigitalDigit, StyledDigitalNext, StyledDigitalPrevious } from './StyledClock';\n\nvar Digit = function Digit(_ref) {\n  var number = _ref.number,\n      run = _ref.run,\n      size = _ref.size;\n\n  var _useState = useState(number),\n      previous = _useState[0],\n      setPrevious = _useState[1];\n\n  var _useState2 = useState(),\n      changing = _useState2[0],\n      setChanging = _useState2[1];\n\n  useEffect(function () {\n    if (number !== previous) {\n      setChanging(true);\n      var timer = setTimeout(function () {\n        setPrevious(number);\n        setChanging(false);\n      }, 900);\n      return function () {\n        return clearTimeout(timer);\n      };\n    }\n\n    return undefined;\n  }, [number, previous]);\n\n  if (changing) {\n    var direction = run === 'backward' ? 'down' : 'up';\n    return /*#__PURE__*/React.createElement(StyledDigitalDigit, {\n      size: size\n    }, /*#__PURE__*/React.createElement(StyledDigitalPrevious, {\n      direction: direction\n    }, Math.floor(previous)), /*#__PURE__*/React.createElement(StyledDigitalNext, {\n      direction: direction\n    }, Math.floor(number)));\n  }\n\n  return /*#__PURE__*/React.createElement(StyledDigitalDigit, {\n    size: size\n  }, Math.floor(number));\n};\n\nvar Element = function Element(_ref2) {\n  var number = _ref2.number,\n      run = _ref2.run,\n      sep = _ref2.sep,\n      size = _ref2.size;\n  var tens = Math.floor(number / 10);\n  var ones = number % 10;\n  var result = [/*#__PURE__*/React.createElement(Digit, {\n    key: \"tens\",\n    run: run,\n    size: size,\n    number: tens\n  }), /*#__PURE__*/React.createElement(Digit, {\n    key: \"ones\",\n    run: run,\n    size: size,\n    number: ones\n  })];\n\n  if (sep) {\n    result.unshift( /*#__PURE__*/React.createElement(StyledDigitalDigit, {\n      key: \"sep\",\n      size: size\n    }, \":\"));\n  }\n\n  return result;\n};\n\nexport var Digital = /*#__PURE__*/forwardRef(function (props, ref) {\n  var elements = props.elements,\n      precision = props.precision,\n      run = props.run,\n      size = props.size,\n      rest = _objectWithoutPropertiesLoose(props, [\"elements\", \"precision\", \"run\", \"size\"]);\n\n  var seconds;\n\n  if (precision === 'seconds') {\n    seconds = /*#__PURE__*/React.createElement(Element, {\n      number: elements.seconds,\n      run: run,\n      size: size,\n      sep: true\n    });\n  }\n\n  var minutes;\n\n  if (precision === 'minutes' || precision === 'seconds') {\n    minutes = /*#__PURE__*/React.createElement(Element, {\n      number: elements.minutes,\n      run: run,\n      size: size,\n      sep: true\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Box, _extends({\n    ref: ref,\n    direction: \"row\"\n  }, rest), /*#__PURE__*/React.createElement(Element, {\n    number: elements.hours12 || elements.hours,\n    run: run,\n    size: size\n  }), minutes, seconds);\n});","map":null,"metadata":{},"sourceType":"module"}