{"ast":null,"code":"import _slicedToArray from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v1/client/src/Store.js\";\nimport React, { useReducer, createContext } from \"react\";\nvar initialState = {\n  customView: {\n    resultsMode: false,\n    searchTerms: [],\n    sortBy: 'best_match'\n  },\n  data: [],\n  ui: 'landing'\n};\n\nvar randomSorting = function randomSorting() {\n  var criteria = ['best_match', 'rating', 'review_count', 'distance'];\n  var index = Math.floor(Math.random() * 4);\n  return criteria[index];\n};\n\nvar searchTerm =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(term, sort_by) {\n    var response, businesses;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('/search', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                term: term,\n                sort_by: sort_by\n              })\n            });\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            businesses = _context.sent;\n            return _context.abrupt(\"return\", businesses.businesses);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function searchTerm(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar fetchData = function fetchData(searchInputs) {\n  var sorting = searchInputs.sortBy === 'random' ? randomSorting() : searchInputs.sortBy;\n  var data = [];\n\n  if (searchInputs.searchTerms.length === 0) {\n    data = searchTerm(null, sorting);\n  } else {\n    // searchInputs.searchTerms.forEach(el => {\n    //   // searchTerm(el, sorting).then(response => {\n    //   //   //data.push(response);\n    //   //   data = response;\n    //   // });\n    //   // INVESTIGAR SOLUCION PARA LOOP EN TERMS\n    // });\n    var asyncForEach =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(array, callback) {\n        var index;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                index = 0;\n\n              case 1:\n                if (!(index < array.length)) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.next = 4;\n                return callback(array[index], index, array);\n\n              case 4:\n                index++;\n                _context2.next = 1;\n                break;\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function asyncForEach(_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var fetchMultiple =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return asyncForEach(searchInputs.searchTerms,\n                /*#__PURE__*/\n                function () {\n                  var _ref4 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee3(el) {\n                    var searchResult;\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            _context3.next = 2;\n                            return searchTerm(el, sorting);\n\n                          case 2:\n                            searchResult = _context3.sent;\n                            data.push(searchResult);\n\n                          case 4:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n\n                  return function (_x5) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }());\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function fetchMultiple() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    fetchMultiple();\n  }\n\n  console.log(data);\n  return data;\n};\n\nvar fetchRandomData =\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5() {\n    var response, businesses;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return fetch('/getRandom');\n\n          case 2:\n            response = _context5.sent;\n            _context5.next = 5;\n            return response.json();\n\n          case 5:\n            businesses = _context5.sent;\n            return _context5.abrupt(\"return\", businesses.businesses);\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function fetchRandomData() {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nfunction reducer(state, action) {\n  var customViewCopy = _objectSpread({}, state.customView);\n\n  switch (action.type) {\n    case 'TOGGLE':\n      customViewCopy.resultsMode = !customViewCopy.resultsMode;\n      return _objectSpread({}, state, {\n        customView: customViewCopy\n      });\n\n    case 'SUBMIT_SEARCH':\n      // UPDATE SEARCH TERMS IN STATE\n      customViewCopy.searchTerms = action.payload.searchTerms;\n      customViewCopy.sortBy = action.payload.sortBy;\n      customViewCopy.resultsMode = true;\n      return _objectSpread({}, state, {\n        customView: customViewCopy,\n        data: fetchData(action.payload)\n      });\n\n    case 'FETCH_RANDOM_DATA':\n      return _objectSpread({}, state, {\n        data: fetchRandomData()\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var value = {\n    state: state,\n    dispatch: dispatch\n  };\n  return React.createElement(Store.Provider, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, props.children);\n}\nexport var Store = createContext();","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v1/client/src/Store.js"],"names":["React","useReducer","createContext","initialState","customView","resultsMode","searchTerms","sortBy","data","ui","randomSorting","criteria","index","Math","floor","random","searchTerm","term","sort_by","fetch","method","headers","body","JSON","stringify","response","json","businesses","fetchData","searchInputs","sorting","length","asyncForEach","array","callback","fetchMultiple","el","searchResult","push","console","log","fetchRandomData","reducer","state","action","customViewCopy","type","payload","StoreProvider","props","dispatch","value","children","Store"],"mappings":"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","sourcesContent":["import React, { useReducer, createContext } from \"react\";\n\nconst initialState = {\n  customView: {\n    resultsMode: false,\n    searchTerms: [],\n    sortBy: 'best_match'\n  },\n  data: [],\n  ui: 'landing'\n}\n\n\n\nconst randomSorting = () => {\n  let criteria = ['best_match', 'rating', 'review_count', 'distance'];\n  let index = Math.floor(Math.random() * 4);\n  return criteria[index];\n};\n\n\nconst searchTerm = async (term, sort_by) => {\n  const response = await fetch('/search', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ \n      term,\n      sort_by\n    })\n  });\n  const businesses = await response.json();\n  return businesses.businesses;\n};\n\n\n  const fetchData = (searchInputs) => {\n    let sorting = searchInputs.sortBy === 'random' ? randomSorting() : searchInputs.sortBy\n    let data = [];\n    if (searchInputs.searchTerms.length === 0) {\n\n      data = searchTerm(null, sorting);\n\n    } else {  \n      \n      // searchInputs.searchTerms.forEach(el => {\n\n      //   // searchTerm(el, sorting).then(response => {\n      //   //   //data.push(response);\n      //   //   data = response;\n      //   // });\n\n      //   // INVESTIGAR SOLUCION PARA LOOP EN TERMS\n      // });\n      \n      const asyncForEach = async (array, callback) => {\n        for (let index = 0; index < array.length; index++) {\n          await callback(array[index], index, array);\n        }\n      }\n\n      const fetchMultiple = async () => {\n        await asyncForEach(searchInputs.searchTerms, async (el) => {\n          let searchResult = await searchTerm(el, sorting);\n          data.push(searchResult);\n        });\n      }\n      \n      fetchMultiple();\n\n\n    }\n    console.log(data);\n    return data;\n  };\n\n\n  const fetchRandomData = async () => {\n    const response = await fetch('/getRandom');\n    const businesses = await response.json();\n    return businesses.businesses;\n  };\n\n\n\nfunction reducer(state, action) {\n  let customViewCopy = {...state.customView};\n\n  switch(action.type) {\n    case 'TOGGLE':\n      customViewCopy.resultsMode = !customViewCopy.resultsMode;\n      return { ...state, customView: customViewCopy};\n\n    case 'SUBMIT_SEARCH':\n      // UPDATE SEARCH TERMS IN STATE\n      customViewCopy.searchTerms = action.payload.searchTerms; \n      customViewCopy.sortBy = action.payload.sortBy;\n      customViewCopy.resultsMode = true;\n\n      return {...state, customView: customViewCopy, data: fetchData(action.payload)};\n\n    case 'FETCH_RANDOM_DATA':\n      return {...state, data: fetchRandomData()};\n      \n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const value = {state, dispatch}\n  return <Store.Provider value={value}>{props.children}</Store.Provider>\n}\n\nexport const Store = createContext();"]},"metadata":{},"sourceType":"module"}