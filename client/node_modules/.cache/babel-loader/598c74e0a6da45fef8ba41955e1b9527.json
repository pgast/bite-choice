{"ast":null,"code":"import _toConsumableArray from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/CustomForm.js\";\nimport React, { useState, useContext } from 'react';\nimport { Store } from '../Store'; // updates state with pertaining custom search info\n// when user clicks submit, action is dispatched to fetch data from store\n// searchTerms, sort by info is updated into state\n// data is fetched\n\nvar customForm = function customForm() {\n  var _useContext = useContext(Store),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useState = useState(state.customView.searchTerms),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerms = _useState2[0],\n      setSearchTerms = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentTerm = _useState4[0],\n      setCurrentTerm = _useState4[1];\n\n  var _useState5 = useState(state.customView.sortBy),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sortBy = _useState6[0],\n      setSortBy = _useState6[1]; // update state info with terms in form\n\n\n  var submitSearchTerms = function submitSearchTerms(e) {\n    e.preventDefault();\n    var payload = {\n      sortBy: sortBy,\n      searchTerms: searchTerms\n    };\n    return dispatch({\n      type: 'SUBMIT_SEARCH',\n      payload: payload\n    });\n  };\n\n  var addTerm = function addTerm(e) {\n    if (currentTerm !== '') {\n      if (searchTerms.length < 3) {\n        var newTerms = _toConsumableArray(searchTerms);\n\n        newTerms.push(currentTerm);\n        setSearchTerms(newTerms);\n        setCurrentTerm('');\n      }\n    }\n  };\n\n  var removeTerm = function removeTerm(inputIndex) {\n    console.log('removing item');\n    console.log(inputIndex);\n\n    var newSearchTerms = _toConsumableArray(searchTerms);\n\n    newSearchTerms = newSearchTerms.filter(function (el, inx) {\n      return inx !== inputIndex;\n    }); //let newSearchTerms = [...searchTerms].filter((el, inx) => inx !== inputIndex);\n\n    setSearchTerms(newSearchTerms);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Custom Form\"), React.createElement(\"form\", {\n    onSubmit: function onSubmit(e) {\n      return submitSearchTerms(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Name:\", React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Type Search Term\",\n    value: currentTerm,\n    onChange: function onChange(e) {\n      return setCurrentTerm(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: function onClick(e) {\n      return addTerm(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Add term\")), searchTerms.map(function (el, index) {\n    return React.createElement(\"p\", {\n      key: index,\n      onClick: function onClick(index) {\n        return removeTerm(index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, el);\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Sort by:\", React.createElement(\"select\", {\n    value: sortBy,\n    onChange: function onChange(e) {\n      return setSortBy(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"best_match\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Best Match\"), React.createElement(\"option\", {\n    value: \"rating\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Rating\"), React.createElement(\"option\", {\n    value: \"review_count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Review Count\"), React.createElement(\"option\", {\n    value: \"distance\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Distance\"), React.createElement(\"option\", {\n    value: \"random\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Random\"))), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })));\n};\n\nexport default customForm;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/CustomForm.js"],"names":["React","useState","useContext","Store","customForm","state","dispatch","customView","searchTerms","setSearchTerms","currentTerm","setCurrentTerm","sortBy","setSortBy","submitSearchTerms","e","preventDefault","payload","type","addTerm","length","newTerms","push","removeTerm","inputIndex","console","log","newSearchTerms","filter","el","inx","target","value","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Store } from '../Store';\n\n// updates state with pertaining custom search info\n  // when user clicks submit, action is dispatched to fetch data from store\n  // searchTerms, sort by info is updated into state\n  // data is fetched\n\n\nconst customForm = () => {\n  const { state, dispatch } = useContext(Store);\n  const [searchTerms, setSearchTerms] = useState(state.customView.searchTerms);\n  const [currentTerm, setCurrentTerm] = useState(\"\");\n  const [sortBy, setSortBy] = useState(state.customView.sortBy);\n\n  // update state info with terms in form\n  const submitSearchTerms = (e) => {\n    e.preventDefault();\n    let payload = { sortBy, searchTerms };\n    return dispatch ({\n      type: 'SUBMIT_SEARCH',\n      payload\n    });\n  };\n\n  const addTerm = (e) => {\n    if (currentTerm !== '') {\n      if (searchTerms.length < 3) {\n        let newTerms = [...searchTerms];\n        newTerms.push(currentTerm);\n        setSearchTerms(newTerms);\n        setCurrentTerm('');\n      }\n    }\n  };\n\n  const removeTerm = (inputIndex) => {\n    console.log('removing item');\n    console.log(inputIndex);\n    let newSearchTerms = [...searchTerms];\n    newSearchTerms = newSearchTerms.filter((el, inx) => inx !== inputIndex);\n    //let newSearchTerms = [...searchTerms].filter((el, inx) => inx !== inputIndex);\n    setSearchTerms(newSearchTerms);\n  };\n\n  return (\n    <div>\n      <h1>Custom Form</h1>\n\n      <form onSubmit={(e) => submitSearchTerms(e)}>\n          <label>\n            Name:\n            <input \n              type=\"text\" \n              placeholder=\"Type Search Term\"\n              value={currentTerm}\n              onChange={(e) => setCurrentTerm(e.target.value)} \n            />\n            <button onClick={(e) => addTerm(e)}>Add term</button>\n          </label>\n\n          {\n            searchTerms.map((el, index) => {\n              return <p key={index} onClick={(index) => removeTerm(index)}>{el}</p>\n            })\n          }\n\n          <label>\n            Sort by:\n            <select value={sortBy} onChange={(e) => setSortBy(e.target.value)} >\n              <option value=\"best_match\">Best Match</option>\n              <option value=\"rating\">Rating</option>\n              <option value=\"review_count\">Review Count</option>\n              <option value=\"distance\">Distance</option>\n              <option value=\"random\">Random</option>\n            </select>\n          </label>\n\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n    </div>\n  );\n};\n\nexport default customForm;"]},"metadata":{},"sourceType":"module"}