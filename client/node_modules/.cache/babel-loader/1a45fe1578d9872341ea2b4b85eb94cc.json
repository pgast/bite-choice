{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.themeDoc = exports.doc = void 0;\n\nvar _reactDesc = require(\"react-desc\");\n\nvar _mixins = require(\"../../utils/mixins\");\n\nvar doc = function doc(RadioButtonGroup) {\n  var DocumentedRadioButtonGroup = (0, _reactDesc.describe)(RadioButtonGroup).availableAt((0, _mixins.getAvailableAtBadge)('RadioButtonGroup', 'Input')).description('A group of radio buttons.').usage(\"import { RadioButtonGroup } from 'grommet';\\n<RadioButtonGroup />\").intrinsicElement('div');\n  DocumentedRadioButtonGroup.propTypes = {\n    children: _reactDesc.PropTypes.func.description(\"Function that will be called to render the visual representation.\\n      It will be passed an object indicating whether the button is checked. It\\n      should return a react element.\\n      For example:\\n      `children={(option, { checked }) => <Box ...>{...}</Box>}`\\n      \"),\n    disabled: _reactDesc.PropTypes.bool.description(\"Disables all options.\").defaultValue(false),\n    name: _reactDesc.PropTypes.string.description(\"The DOM name attribute value to use for the underlying <input/> \\n      elements.\").isRequired,\n    onChange: _reactDesc.PropTypes.func.description(\"Function that will be called when the user clicks on one of the radio\\n      buttons. It will be passed a React event object.\"),\n    options: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.arrayOf(_reactDesc.PropTypes.string), _reactDesc.PropTypes.arrayOf(_reactDesc.PropTypes.number), _reactDesc.PropTypes.arrayOf(_reactDesc.PropTypes.bool), _reactDesc.PropTypes.arrayOf(_reactDesc.PropTypes.shape({\n      disabled: _reactDesc.PropTypes.bool,\n      id: _reactDesc.PropTypes.string,\n      label: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.string, _reactDesc.PropTypes.element]),\n      value: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.string, _reactDesc.PropTypes.number, _reactDesc.PropTypes.bool]).isRequired\n    }))]).description(\"Options can be either a string, boolean, number \\n      or an object. Each option is rendered as a single RadioButton.\").isRequired,\n    value: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.string, _reactDesc.PropTypes.number, _reactDesc.PropTypes.bool, _reactDesc.PropTypes.object]).description(\"Currently selected option value.\")\n  };\n  return DocumentedRadioButtonGroup;\n};\n\nexports.doc = doc;\nvar themeDoc = {\n  'radioButtonGroup.container': {\n    description: 'Any valid Box props for the RadioButtonGroup container.',\n    type: 'object',\n    defaultValue: 'undefined'\n  }\n};\nexports.themeDoc = themeDoc;","map":null,"metadata":{},"sourceType":"script"}