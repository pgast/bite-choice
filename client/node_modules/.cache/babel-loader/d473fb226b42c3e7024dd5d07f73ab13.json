{"ast":null,"code":"var _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v4/client/src/components/Landing.js\";\nimport React from 'react';\nimport { Box, Heading } from 'grommet';\n\nvar landing = function landing(_ref) {\n  var location = _ref.location,\n      fetchSuccess = _ref.fetchSuccess;\n  return React.createElement(Box, {\n    animation: \"fadeIn\",\n    justify: \"center\",\n    align: \"center\",\n    height: \"100%\",\n    pad: {\n      \"left\": \"small\",\n      \"right\": \"small\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, fetchSuccess || fetchSuccess === '' ? // fetch success view with type in location available\n  React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    textAlign: \"center\",\n    color: \"dark-1\",\n    margin: \"none\",\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Where to eat in\"), React.createElement(Heading, {\n    color: \"status-warning\",\n    margin: \"none\",\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, location)) : React.createElement(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"unable to fetch\"));\n};\n\nexport default landing;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v4/client/src/components/Landing.js"],"names":["React","Box","Heading","landing","location","fetchSuccess"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,SAA7B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAgC;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;AAC9C,SACI,oBAAC,GAAD;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,OAAO,EAAC,QAFV;AAGE,IAAA,KAAK,EAAC,QAHR;AAIE,IAAA,MAAM,EAAC,MAJT;AAKE,IAAA,GAAG,EAAE;AAAE,cAAQ,OAAV;AAAmB,eAAS;AAA5B,KALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGA,YAAY,IAAIA,YAAY,KAAK,EAAjC,GACC;AAEE,sBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,MAAM,EAAC,MAHT;AAIE,IAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EASE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,MAAM,EAAC,MAFT;AAGE,IAAA,IAAI,EAAC,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGD,QALH,CATF,CAHH,GAsBG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA9BN,CADJ;AAqCD,CAtCD;;AAwCA,eAAeD,OAAf","sourcesContent":["import React from 'react';\nimport { Box, Heading } from 'grommet';\n\nconst landing = ({ location, fetchSuccess }) => {\n  return (\n      <Box \n        animation=\"fadeIn\"\n        justify=\"center\" \n        align=\"center\" \n        height=\"100%\"\n        pad={{ \"left\": \"small\", \"right\": \"small\" }} \n      >\n\n        {fetchSuccess || fetchSuccess === '' ? \n          // fetch success view with type in location available\n          (\n            <React.Fragment>\n              <Heading \n                textAlign=\"center\" \n                color=\"dark-1\" \n                margin=\"none\"\n                size=\"small\"\n              >\n                Where to eat in\n              </Heading>\n              <Heading \n                color=\"status-warning\" \n                margin=\"none\"\n                size=\"large\" \n              >\n                {location}\n              </Heading>\n            </React.Fragment>\n          )\n          : (\n            <Heading>unable to fetch</Heading>\n          )\n        }\n\n      </Box>\n  )\n}\n\nexport default landing;"]},"metadata":{},"sourceType":"module"}