{"ast":null,"code":"import _slicedToArray from \"/Users/Pablo/Documents/React/bitechoice/biteFinal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/Pablo/Documents/React/bitechoice/biteFinal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/Pablo/Documents/React/bitechoice/biteFinal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Pablo/Documents/React/bitechoice/biteFinal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/biteFinal/client/src/Store.js\";\nimport React, { useReducer, createContext } from \"react\";\n\nvar request = require('request');\n\nvar initialState = {\n  customView: {\n    resultsMode: false,\n    searchTerms: [],\n    sortBy: 'Best Match'\n  },\n  data: [],\n  ui: 'landing',\n  inputLocation: ''\n};\n\nvar randomSorting = function randomSorting() {\n  var criteria = ['best_match', 'rating', 'review_count'];\n  return criteria[Math.floor(Math.random() * 4)];\n};\n\nvar searchTerm = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(term, sort_by, newLocation) {\n    var response, businesses;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"/search/\".concat(term, \"/\").concat(sort_by, \"/\").concat(newLocation));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            businesses = _context.sent;\n            return _context.abrupt(\"return\", businesses.businesses);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function searchTerm(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar fetchData = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(searchInputs) {\n    var sortBy, searchTerms, location, sorting, data, termOne, termTwo, termThree, result, dataOne, dataTwo, dataThree;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            sortBy = searchInputs.sortBy, searchTerms = searchInputs.searchTerms, location = searchInputs.location;\n            sorting = sortBy === 'random' ? randomSorting() : sortBy;\n\n            if (!(searchTerms.length === 0)) {\n              _context2.next = 9;\n              break;\n            }\n\n            _context2.next = 5;\n            return searchTerm(null, sorting, location);\n\n          case 5:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data);\n\n          case 9:\n            termOne = searchTerms[0] !== undefined ? searchTerms[0] : null;\n            termTwo = searchTerms[1] !== undefined ? searchTerms[1] : null;\n            termThree = searchTerms[2] !== undefined ? searchTerms[2] : null;\n            result = [];\n            dataOne = [];\n            dataTwo = [];\n            dataThree = [];\n\n            if (!(termOne !== null)) {\n              _context2.next = 20;\n              break;\n            }\n\n            _context2.next = 19;\n            return searchTerm(termOne, sorting, location);\n\n          case 19:\n            dataOne = _context2.sent;\n\n          case 20:\n            ;\n\n            if (!(termTwo !== null)) {\n              _context2.next = 25;\n              break;\n            }\n\n            _context2.next = 24;\n            return searchTerm(termTwo, sorting, location);\n\n          case 24:\n            dataTwo = _context2.sent;\n\n          case 25:\n            ;\n\n            if (!(termThree !== null)) {\n              _context2.next = 30;\n              break;\n            }\n\n            _context2.next = 29;\n            return searchTerm(termThree, sorting, location);\n\n          case 29:\n            dataThree = _context2.sent;\n\n          case 30:\n            ; // ERROR CATCHER WRONG DATA\n\n            if (!(dataOne === undefined)) {\n              _context2.next = 33;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", [undefined]);\n\n          case 33:\n            if (dataOne.length !== 0) {\n              result.push(dataOne);\n            }\n\n            ;\n\n            if (dataTwo.length !== 0) {\n              result.push(dataTwo);\n            }\n\n            ;\n\n            if (dataThree.length !== 0) {\n              result.push(dataThree);\n            }\n\n            ;\n            return _context2.abrupt(\"return\", result);\n\n          case 40:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function fetchData(_x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar fetchRandomData = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(location) {\n    var sortBy, parameters;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            /*const response = await fetch(`/getRandom/${location}`);\n            // INTERNAL SERVER ERROR CATCHER\n            if(response.status === 500) return 500;\n            const businesses = await response.json();\n            return businesses.businesses; */\n            sortBy = ['best_match', 'rating', 'review_count'];\n            parameters = {};\n            parameters.sort_by = sortBy[Math.floor(Math.random() * Math.floor(4))];\n            parameters.location = location;\n            getRestaurantData(parameters);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function fetchRandomData(_x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar generateUrl = function generateUrl(inputParams) {\n  // let url = `https://api.yelp.com/v3/businesses/search?`;\n  var url = \"https://api.yelp.com/v3/businesses/search?sort_by=best_match&location=hermosillo\"; // for (key in inputParams) {\n  //     let parameter = inputParams[key];\n  //     switch (key) {\n  //         case 'location':\n  //             url += `location=${parameter}&`;\n  //             break;\n  //         case 'term':\n  //             if (parameter === null || parameter === undefined || parameter === 'null') {\n  //                 url = url;\n  //             } else {\n  //                 url += `term=${parameter}&`;\n  //             }\n  //             break;\n  //         case 'sort_by':\n  //             if (parameter === \"Best Match\") {\n  //                 parameter = \"best_match\";\n  //             } else {\n  //                 parameter = parameter.toLowerCase();\n  //             }\n  //             url += `sort_by=${parameter}&`;\n  //             break;\n  //         default:\n  //             url = url;\n  //     }\n  // };\n  // return url.slice(0, -1);\n\n  return url;\n};\n\nvar getRestaurantData = function getRestaurantData(inputParams) {\n  request.get({\n    \"headers\": {\n      \"Authorization\": \"Bearer 06std1ZLKwAs-2O6bPns9EOD4PuJzku3Oup1FmQr-DIb3hXD7Q83BiC6ZibA0MfdhYzfhRktFyUEIinxnOQlptGGyYzoJgCbd-0--Pfpx-fvl7FV_5O-gFOrKB1JXHYx\"\n    },\n    \"url\": generateUrl(inputParams)\n  }, function (error, response, body) {\n    if (error) {\n      console.log({\n        businesses: \"error\"\n      });\n    } else {\n      console.log(JSON.parse(body));\n    }\n  });\n}; // app.get('/getRandom/:location', (req, res) => {\n//   const sortBy = ['best_match', 'rating', 'review_count'];\n//   let parameters = {};\n//   parameters.sort_by = sortBy[Math.floor(Math.random() * Math.floor(4))];\n//   parameters.location = req.params.location;\n//   getRestaurantData(parameters, res);\n// });\n\n\nfunction reducer(state, action) {\n  var customViewCopy = _objectSpread({}, state.customView);\n\n  switch (action.type) {\n    case 'TOGGLE_CUSTOM_FORM':\n      customViewCopy.resultsMode = !customViewCopy.resultsMode;\n      return _objectSpread({}, state, {\n        customView: customViewCopy\n      });\n\n    case 'SUBMIT_SEARCH':\n      customViewCopy = {\n        searchTerms: action.payload.searchTerms,\n        sortBy: action.payload.sortBy,\n        resultsMode: true\n      };\n      return _objectSpread({}, state, {\n        customView: customViewCopy,\n        data: fetchData(action.payload)\n      });\n\n    case 'FETCH_RANDOM_DATA':\n      return _objectSpread({}, state, {\n        data: fetchRandomData(action.payload)\n      });\n\n    case 'TOGGLE_UI':\n      customViewCopy = {\n        sortBy: 'Best Match',\n        resultsMode: false,\n        searchTerms: []\n      };\n      return _objectSpread({}, state, {\n        customView: customViewCopy,\n        data: [],\n        ui: action.payload\n      });\n\n    case 'UPDATE_LOCATION':\n      return _objectSpread({}, state, {\n        inputLocation: action.payload\n      });\n\n    case 'CLEAR_LOCATION':\n      return _objectSpread({}, state, {\n        inputLocation: ''\n      });\n\n    default:\n      return state;\n  }\n}\n\n;\nexport function StoreProvider(props) {\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var value = {\n    state: state,\n    dispatch: dispatch\n  };\n  return React.createElement(Store.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 10\n    }\n  }, props.children);\n}\nexport var Store = createContext();","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/biteFinal/client/src/Store.js"],"names":["React","useReducer","createContext","request","require","initialState","customView","resultsMode","searchTerms","sortBy","data","ui","inputLocation","randomSorting","criteria","Math","floor","random","searchTerm","term","sort_by","newLocation","fetch","response","json","businesses","fetchData","searchInputs","location","sorting","length","termOne","undefined","termTwo","termThree","result","dataOne","dataTwo","dataThree","push","fetchRandomData","parameters","getRestaurantData","generateUrl","inputParams","url","get","error","body","console","log","JSON","parse","reducer","state","action","customViewCopy","type","payload","StoreProvider","props","dispatch","value","children","Store"],"mappings":"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","sourcesContent":["import React, { useReducer, createContext } from \"react\";\nconst request = require('request');\n\nconst initialState = {\n  customView: {\n    resultsMode: false,\n    searchTerms: [],\n    sortBy: 'Best Match'\n  },\n  data: [],\n  ui: 'landing',\n  inputLocation: ''\n}\n\nconst randomSorting = () => {\n  const criteria = ['best_match', 'rating', 'review_count'];\n  return criteria[Math.floor(Math.random() * 4)];\n};\n\nconst searchTerm = async (term, sort_by, newLocation) => {\n    const response = await fetch(`/search/${term}/${sort_by}/${newLocation}`);\n    const businesses = await response.json();\n    return businesses.businesses;\n  };\n\nconst fetchData = async (searchInputs) => {\n  const { sortBy, searchTerms, location } = searchInputs;\n  const sorting = sortBy === 'random' ? randomSorting() : sortBy\n\n  if (searchTerms.length === 0) {\n    const data = await searchTerm(null, sorting, location);\n    return data;\n  } else { \n    const termOne = searchTerms[0] !== undefined ? searchTerms[0] : null; \n    const termTwo = searchTerms[1] !== undefined ? searchTerms[1] : null; \n    const termThree = searchTerms[2] !== undefined ? searchTerms[2] : null; \n\n    let result = [];\n    let dataOne = [];\n    let dataTwo = [];\n    let dataThree = [];\n\n    if (termOne !== null) { dataOne = await searchTerm(termOne, sorting, location) };\n    if (termTwo !== null) { dataTwo = await searchTerm(termTwo, sorting, location) };\n    if (termThree !== null) { dataThree = await searchTerm(termThree, sorting, location) };\n\n    // ERROR CATCHER WRONG DATA\n    if(dataOne === undefined) return [undefined];\n\n    if (dataOne.length !== 0) { result.push(dataOne) };\n    if (dataTwo.length !== 0) { result.push(dataTwo) };\n    if (dataThree.length !== 0) { result.push(dataThree) };\n\n    return result;\n  }\n};\n\nconst fetchRandomData = async (location) => {\n  /*const response = await fetch(`/getRandom/${location}`);\n  // INTERNAL SERVER ERROR CATCHER\n  if(response.status === 500) return 500;\n  const businesses = await response.json();\n  return businesses.businesses; */\n\n  const sortBy = ['best_match', 'rating', 'review_count'];\n  let parameters = {};\n  parameters.sort_by = sortBy[Math.floor(Math.random() * Math.floor(4))];\n  parameters.location = location;\n  getRestaurantData(parameters);\n\n};\n\n\n\nconst generateUrl = (inputParams) => {\n  // let url = `https://api.yelp.com/v3/businesses/search?`;\n  \n  let url = `https://api.yelp.com/v3/businesses/search?sort_by=best_match&location=hermosillo`;\n\n  // for (key in inputParams) {\n  //     let parameter = inputParams[key];\n  //     switch (key) {\n  //         case 'location':\n  //             url += `location=${parameter}&`;\n  //             break;\n  //         case 'term':\n  //             if (parameter === null || parameter === undefined || parameter === 'null') {\n  //                 url = url;\n  //             } else {\n  //                 url += `term=${parameter}&`;\n  //             }\n  //             break;\n  //         case 'sort_by':\n  //             if (parameter === \"Best Match\") {\n  //                 parameter = \"best_match\";\n  //             } else {\n  //                 parameter = parameter.toLowerCase();\n  //             }\n  //             url += `sort_by=${parameter}&`;\n  //             break;\n  //         default:\n  //             url = url;\n  //     }\n  // };\n  // return url.slice(0, -1);\n  return url\n};\n\nconst getRestaurantData = inputParams => {\n  request.get({\n      \"headers\": \n      {\n          \"Authorization\": \"Bearer 06std1ZLKwAs-2O6bPns9EOD4PuJzku3Oup1FmQr-DIb3hXD7Q83BiC6ZibA0MfdhYzfhRktFyUEIinxnOQlptGGyYzoJgCbd-0--Pfpx-fvl7FV_5O-gFOrKB1JXHYx\"\n      },\n      \"url\": generateUrl(inputParams)\n  }, (error, response, body) => \n  {\n      if (error) { \n          console.log({ businesses: \"error\" }) \n      } else {\n          console.log(JSON.parse(body));\n      }\n  }); \n};\n\n// app.get('/getRandom/:location', (req, res) => {\n//   const sortBy = ['best_match', 'rating', 'review_count'];\n//   let parameters = {};\n//   parameters.sort_by = sortBy[Math.floor(Math.random() * Math.floor(4))];\n//   parameters.location = req.params.location;\n//   getRestaurantData(parameters, res);\n// });\n\nfunction reducer (state, action) {\n  let customViewCopy = { ...state.customView };\n  switch(action.type) {\n    case 'TOGGLE_CUSTOM_FORM':\n      customViewCopy.resultsMode = !customViewCopy.resultsMode;\n      return { ...state, customView: customViewCopy };\n    case 'SUBMIT_SEARCH':\n      customViewCopy = {\n        searchTerms: action.payload.searchTerms,\n        sortBy: action.payload.sortBy,\n        resultsMode: true\n      };\n      return { \n        ...state, \n        customView: customViewCopy, \n        data: fetchData(action.payload)\n      };\n    case 'FETCH_RANDOM_DATA':\n      return { \n        ...state, \n        data: fetchRandomData(action.payload)\n      } \n    case 'TOGGLE_UI':\n      customViewCopy = {\n        sortBy: 'Best Match',\n        resultsMode: false,\n        searchTerms: []\n      };\n      return { ...state, customView: customViewCopy, data: [], ui: action.payload };\n    case 'UPDATE_LOCATION':\n      return { ...state, inputLocation: action.payload };\n    case 'CLEAR_LOCATION':\n      return { ...state, inputLocation: '' }; \n    default:\n      return state;\n  }\n};\n\nexport function StoreProvider (props) {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const value = {state, dispatch}\n  return <Store.Provider value={value}>{props.children}</Store.Provider>\n}\n\nexport const Store = createContext();"]},"metadata":{},"sourceType":"module"}