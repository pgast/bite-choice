{"ast":null,"code":"import _classCallCheck from \"/Users/Pablo/Documents/React/bitechoice/biteFinal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Pablo/Documents/React/bitechoice/biteFinal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Pablo/Documents/React/bitechoice/biteFinal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Pablo/Documents/React/bitechoice/biteFinal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Pablo/Documents/React/bitechoice/biteFinal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/biteFinal/client/src/App.js\";\nimport React, { Component } from 'react';\nimport Request from 'request';\nimport MainView from './components/MainView';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fetchSuccess: '',\n      location: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      Request.get({\n        \"url\": \"http://ip-api.com/json/\"\n      }, function (error, res, body) {\n        if (error || JSON.parse(body).status === \"fail\") {\n          _this2.setState({\n            fetchSuccess: false\n          });\n\n          return console.dir(error);\n        }\n\n        var location = JSON.parse(body).city;\n\n        _this2.setState({\n          location: location,\n          fetchSuccess: true\n        });\n      });\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var latitude = position.coords.latitude;\n        var longitude = position.coords.longitude;\n        var altitude = position.coords.altitude;\n        var accuracy = position.coords.accuracy;\n        var altitudeAccuracy = position.coords.altitudeAccuracy;\n        var heading = position.coords.height;\n        var speed = position.coords.speed;\n        var timestamp = position.timestamp; // work with this information however you'd like!\n\n        console.log(position);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(MainView, {\n        location: this.state.location,\n        fetchSuccess: this.state.fetchSuccess,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/biteFinal/client/src/App.js"],"names":["React","Component","Request","MainView","App","state","fetchSuccess","location","get","error","res","body","JSON","parse","status","setState","console","dir","city","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","altitude","accuracy","altitudeAccuracy","heading","height","speed","timestamp","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;;IAEMC,G;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE,EADR;AAENC,MAAAA,QAAQ,EAAE;AAFJ,K;;;;;;yCAKa;AAAA;;AACnBL,MAAAA,OAAO,CAACM,GAAR,CAAY;AAAE,eAAO;AAAT,OAAZ,EAAkD,UAACC,KAAD,EAAQC,GAAR,EAAaC,IAAb,EAAsB;AACpE,YAAIF,KAAK,IAAIG,IAAI,CAACC,KAAL,CAAWF,IAAX,EAAiBG,MAAjB,KAA4B,MAAzC,EAAiD;AAC/C,UAAA,MAAI,CAACC,QAAL,CAAc;AAAET,YAAAA,YAAY,EAAE;AAAhB,WAAd;;AACA,iBAAOU,OAAO,CAACC,GAAR,CAAYR,KAAZ,CAAP;AACD;;AACD,YAAMF,QAAQ,GAAGK,IAAI,CAACC,KAAL,CAAWF,IAAX,EAAiBO,IAAlC;;AACA,QAAA,MAAI,CAACH,QAAL,CAAc;AAAER,UAAAA,QAAQ,EAARA,QAAF;AAAYD,UAAAA,YAAY,EAAE;AAA1B,SAAd;AACH,OAPD;AAUAa,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAASC,QAAT,EAAmB;AAE1D,YAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAT,CAAgBD,QAAjC;AACA,YAAME,SAAS,GAAGH,QAAQ,CAACE,MAAT,CAAgBC,SAAlC;AACA,YAAMC,QAAQ,GAAGJ,QAAQ,CAACE,MAAT,CAAgBE,QAAjC;AACA,YAAMC,QAAQ,GAAGL,QAAQ,CAACE,MAAT,CAAgBG,QAAjC;AACA,YAAMC,gBAAgB,GAAGN,QAAQ,CAACE,MAAT,CAAgBI,gBAAzC;AACA,YAAMC,OAAO,GAAGP,QAAQ,CAACE,MAAT,CAAgBM,MAAhC;AACA,YAAMC,KAAK,GAAGT,QAAQ,CAACE,MAAT,CAAgBO,KAA9B;AACA,YAAMC,SAAS,GAAGV,QAAQ,CAACU,SAA3B,CAT0D,CAW1D;;AACAhB,QAAAA,OAAO,CAACiB,GAAR,CAAYX,QAAZ;AACH,OAbC;AAcD;;;6BAEQ;AACP,aACI,oBAAC,QAAD;AACE,QAAA,QAAQ,EAAE,KAAKjB,KAAL,CAAWE,QADvB;AAEE,QAAA,YAAY,EAAE,KAAKF,KAAL,CAAWC,YAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAMD;;;;EAxCeL,S;;AA0ClB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Request from 'request';\n\nimport MainView from './components/MainView';\n\nclass App extends Component {\n  state = {\n    fetchSuccess: '',\n    location: ''\n  }; \n\n  componentWillMount() {\n    Request.get({ \"url\": \"http://ip-api.com/json/\" }, (error, res, body) => {\n        if (error || JSON.parse(body).status === \"fail\") {\n          this.setState({ fetchSuccess: false }); \n          return console.dir(error);    \n        } \n        const location = JSON.parse(body).city;\n        this.setState({ location, fetchSuccess: true });\n    });\n\n\n    navigator.geolocation.getCurrentPosition(function(position) {\n\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      const altitude = position.coords.altitude;\n      const accuracy = position.coords.accuracy;\n      const altitudeAccuracy = position.coords.altitudeAccuracy;\n      const heading = position.coords.height;\n      const speed = position.coords.speed;\n      const timestamp = position.timestamp;\n\n      // work with this information however you'd like!\n      console.log(position);\n  });\n  };\n\n  render() {\n    return (\n        <MainView \n          location={this.state.location} \n          fetchSuccess={this.state.fetchSuccess}\n        />\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}