{"ast":null,"code":"import _slicedToArray from \"/Users/Pablo/Documents/React/bitechoice/biteFinal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/biteFinal/client/src/components/MainView/index.js\";\n\nimport React, { useContext, useState } from 'react';\nimport LandingView from '../LandingView';\nimport { Store } from '../../Store';\nimport CustomView from '../CustomView';\nimport RandomView from '../RandomView';\n\nvar mainView = function mainView(_ref) {\n  var location = _ref.location,\n      fetchSuccess = _ref.fetchSuccess;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      locationInput = _useState2[0],\n      setLocationInput = _useState2[1];\n\n  var _useContext = useContext(Store),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var validUserLocation = state.inputLocation !== '' ? true : false;\n\n  var toggleCustomForm = function toggleCustomForm() {\n    return dispatch({\n      type: 'TOGGLE_CUSTOM_FORM'\n    });\n  };\n\n  var _toggleUi = function toggleUi(ui) {\n    return dispatch({\n      type: 'TOGGLE_UI',\n      payload: ui\n    });\n  };\n\n  var clearLocation = function clearLocation() {\n    return dispatch({\n      type: 'CLEAR_LOCATION'\n    });\n  };\n\n  var toggleLocationInputView = function toggleLocationInputView(input) {\n    clearLocation();\n    setLocationInput(input);\n  };\n\n  var validBtn = function validBtn() {\n    var eventA = locationInput && validUserLocation ? true : false;\n    var eventB = !locationInput && fetchSuccess ? true : false;\n    if (eventA || eventB) return true;\n    return false;\n  };\n\n  return React.createElement(React.Fragment, null, state.ui === 'landing' && React.createElement(LandingView, {\n    location: location,\n    validBtn: validBtn,\n    toggleUi: _toggleUi,\n    fetchSuccess: fetchSuccess,\n    locationInput: locationInput,\n    toggleLocationInputView: toggleLocationInputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), state.ui === 'custom' && React.createElement(CustomView, {\n    data: state.data,\n    toggleUi: _toggleUi,\n    customView: state.customView,\n    toggleCustomForm: toggleCustomForm,\n    location: locationInput ? state.inputLocation : location,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), state.ui === 'random' && React.createElement(RandomView, {\n    data: state.data,\n    locationInput: locationInput,\n    toggleUi: function toggleUi() {\n      return _toggleUi('landing');\n    },\n    location: locationInput ? state.inputLocation : location,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default mainView;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/biteFinal/client/src/components/MainView/index.js"],"names":["React","useContext","useState","LandingView","Store","CustomView","RandomView","mainView","location","fetchSuccess","locationInput","setLocationInput","state","dispatch","validUserLocation","inputLocation","toggleCustomForm","type","toggleUi","ui","payload","clearLocation","toggleLocationInputView","input","validBtn","eventA","eventB","data","customView"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\n\nimport LandingView from '../LandingView';\nimport { Store } from '../../Store';\nimport CustomView from '../CustomView';\nimport RandomView from '../RandomView';\n\nconst mainView = ({ location, fetchSuccess }) => {\n  const [locationInput, setLocationInput] = useState(false);\n  const { state, dispatch } = useContext(Store);\n  const validUserLocation = state.inputLocation !== '' ? true : false;\n\n  const toggleCustomForm = () => dispatch({ type: 'TOGGLE_CUSTOM_FORM' });\n  const toggleUi = (ui) => dispatch ({ type: 'TOGGLE_UI', payload: ui });\n  const clearLocation = () => dispatch ({ type: 'CLEAR_LOCATION' });\n\n  const toggleLocationInputView = (input) => {\n    clearLocation();\n    setLocationInput(input);\n  }\n\n  const validBtn = () => {\n    let eventA = locationInput && validUserLocation ? true : false;\n    let eventB = !locationInput && fetchSuccess ? true : false;\n    if(eventA || eventB) return true;\n    return false;\n  }\n\n  return (\n    <>\n      {state.ui === 'landing' && (\n        <LandingView \n          location={location} \n          validBtn={validBtn}\n          toggleUi={toggleUi}\n          fetchSuccess={fetchSuccess} \n          locationInput={locationInput}\n          toggleLocationInputView={toggleLocationInputView}\n        />\n      )}\n      {state.ui === 'custom' && (\n        <CustomView \n          data={state.data}\n          toggleUi={toggleUi}\n          customView={state.customView}\n          toggleCustomForm={toggleCustomForm}\n          location={locationInput ? state.inputLocation : location}\n        />\n      )} \n      {state.ui === 'random' && (\n        <RandomView \n          data={state.data}\n          locationInput={locationInput}\n          toggleUi={() => toggleUi('landing')} \n          location={locationInput ? state.inputLocation : location}\n        />\n      )}\n    </>\n  );\n};\n\nexport default mainView;"]},"metadata":{},"sourceType":"module"}