{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.textAlignStyle = exports.kindPartStyles = exports.plainInputStyle = exports.sizeStyle = exports.disabledStyle = exports.genericStyles = exports.overflowStyle = exports.inputStyle = exports.getInputPadBySide = exports.unfocusStyle = exports.focusStyle = exports.fillStyle = exports.edgeStyle = exports.controlBorderStyle = exports.baseStyle = void 0;\n\nvar _styledComponents = require(\"styled-components\");\n\nvar _background = require(\"./background\");\n\nvar _colors = require(\"./colors\");\n\nvar _mixins = require(\"./mixins\");\n\nvar baseStyle = (0, _styledComponents.css)([\"font-family:\", \";font-size:\", \";line-height:\", \";font-weight:\", \";\", \" box-sizing:border-box;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;\"], function (props) {\n  return props.theme.global.font.family;\n}, function (props) {\n  return props.theme.global.font.size;\n}, function (props) {\n  return props.theme.global.font.height;\n}, function (props) {\n  return props.theme.global.font.weight;\n}, function (props) {\n  return !props.plain && (0, _background.backgroundStyle)(props.theme.baseBackground, props.theme);\n});\nexports.baseStyle = baseStyle;\nvar controlBorderStyle = (0, _styledComponents.css)([\"border:\", \" solid \", \";border-radius:\", \";\"], function (props) {\n  return props.theme.global.control.border.width;\n}, function (props) {\n  return (0, _colors.normalizeColor)(props.theme.global.control.border.color || 'border', props.theme);\n}, function (props) {\n  return props.theme.global.control.border.radius;\n});\nexports.controlBorderStyle = controlBorderStyle;\n\nvar edgeStyle = function edgeStyle(kind, data, responsive, responsiveBreakpoint, theme) {\n  var breakpoint = responsiveBreakpoint && theme.global.breakpoints[responsiveBreakpoint];\n\n  if (typeof data === 'string') {\n    return (0, _styledComponents.css)([\"\", \":\", \";\", \";\"], kind, theme.global.edgeSize[data] || data, responsive && breakpoint ? (0, _mixins.breakpointStyle)(breakpoint, \"\\n        \" + kind + \": \" + (breakpoint.edgeSize[data] || data) + \";\\n      \") : '');\n  }\n\n  var result = [];\n  var horizontal = data.horizontal,\n      vertical = data.vertical,\n      top = data.top,\n      bottom = data.bottom,\n      left = data.left,\n      right = data.right; // if horizontal and vertical are equal OR all sides are equal,\n  // we can just return a single css value such as padding: 12px\n  // instead of breaking out by sides.\n\n  var horizontalVerticalEqual = horizontal && vertical && horizontal === vertical;\n  var allSidesEqual = top && bottom && left && right && top === bottom === left === right;\n\n  if (horizontalVerticalEqual || allSidesEqual) {\n    // since the values will be the same between vertical & horizontal OR\n    // left, right, top, & bottom, we can just choose one\n    var value = horizontalVerticalEqual ? horizontal : top;\n    return (0, _styledComponents.css)([\"\", \":\", \";\", \";\"], kind, theme.global.edgeSize[value] || value, responsive && breakpoint ? (0, _mixins.breakpointStyle)(breakpoint, \"\\n        \" + kind + \": \" + (breakpoint.edgeSize[value] || value) + \";\\n      \") : '');\n  }\n\n  if (horizontal) {\n    result.push((0, _styledComponents.css)([\"\", \"-left:\", \";\", \"-right:\", \";\", \";\"], kind, theme.global.edgeSize[horizontal] || horizontal, kind, theme.global.edgeSize[horizontal] || horizontal, responsive && breakpoint ? (0, _mixins.breakpointStyle)(breakpoint, \"\\n          \" + kind + \"-left: \" + (breakpoint.edgeSize[horizontal] || horizontal) + \";\\n          \" + kind + \"-right: \" + (breakpoint.edgeSize[horizontal] || horizontal) + \";\\n        \") : ''));\n  }\n\n  if (vertical) {\n    result.push((0, _styledComponents.css)([\"\", \"-top:\", \";\", \"-bottom:\", \";\", \";\"], kind, theme.global.edgeSize[vertical] || vertical, kind, theme.global.edgeSize[vertical] || vertical, responsive && breakpoint ? (0, _mixins.breakpointStyle)(breakpoint, \"\\n          \" + kind + \"-top: \" + (breakpoint.edgeSize[vertical] || vertical) + \";\\n          \" + kind + \"-bottom: \" + (breakpoint.edgeSize[vertical] || vertical) + \";\\n        \") : ''));\n  }\n\n  if (top) {\n    result.push((0, _styledComponents.css)([\"\", \"-top:\", \";\", \";\"], kind, theme.global.edgeSize[top] || top, responsive && breakpoint ? (0, _mixins.breakpointStyle)(breakpoint, \"\\n          \" + kind + \"-top: \" + (breakpoint.edgeSize[top] || top) + \";\\n        \") : ''));\n  }\n\n  if (bottom) {\n    result.push((0, _styledComponents.css)([\"\", \"-bottom:\", \";\", \";\"], kind, theme.global.edgeSize[bottom] || bottom, responsive && breakpoint ? (0, _mixins.breakpointStyle)(breakpoint, \"\\n          \" + kind + \"-bottom: \" + (breakpoint.edgeSize[bottom] || bottom) + \";\\n        \") : ''));\n  }\n\n  if (left) {\n    result.push((0, _styledComponents.css)([\"\", \"-left:\", \";\", \";\"], kind, theme.global.edgeSize[left] || left, responsive && breakpoint ? (0, _mixins.breakpointStyle)(breakpoint, \"\\n          \" + kind + \"-left: \" + (breakpoint.edgeSize[left] || left) + \";\\n        \") : ''));\n  }\n\n  if (right) {\n    result.push((0, _styledComponents.css)([\"\", \"-right:\", \";\", \";\"], kind, theme.global.edgeSize[right] || right, responsive && breakpoint ? (0, _mixins.breakpointStyle)(breakpoint, \"\\n          \" + kind + \"-right: \" + (breakpoint.edgeSize[right] || right) + \";\\n        \") : ''));\n  }\n\n  if (data.start) {\n    result.push((0, _styledComponents.css)([\"\", \"-inline-start:\", \";\", \";\"], kind, theme.global.edgeSize[data.start] || data.start, responsive && breakpoint ? (0, _mixins.breakpointStyle)(breakpoint, \"\\n          \" + kind + \"-inline-start: \" + (breakpoint.edgeSize[data.start] || data.start) + \";\\n        \") : ''));\n  }\n\n  if (data.end) {\n    result.push((0, _styledComponents.css)([\"\", \"-inline-end:\", \";\", \";\"], kind, theme.global.edgeSize[data.end] || data.end, responsive && breakpoint ? (0, _mixins.breakpointStyle)(breakpoint, \"\\n          \" + kind + \"-inline-end: \" + (breakpoint.edgeSize[data.end] || data.end) + \";\\n        \") : ''));\n  }\n\n  return result;\n};\n\nexports.edgeStyle = edgeStyle;\n\nvar fillStyle = function fillStyle(fillProp) {\n  if (fillProp === 'horizontal') {\n    return 'width: 100%;';\n  }\n\n  if (fillProp === 'vertical') {\n    return 'height: 100%;';\n  }\n\n  if (fillProp) {\n    return \"\\n      width: 100%;\\n      height: 100%;\\n    \";\n  }\n\n  return undefined;\n};\n\nexports.fillStyle = fillStyle;\n\nvar focusStyles = function focusStyles(props, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      forceOutline = _ref.forceOutline,\n      justBorder = _ref.justBorder;\n\n  var focus = props.theme.global.focus;\n\n  if (!focus || forceOutline && !focus.outline) {\n    var color = (0, _colors.normalizeColor)('focus', props.theme);\n    if (color) return \"outline: 2px solid \" + color + \";\";\n    return ''; // native\n  }\n\n  if (focus.outline && (!focus.border || !justBorder)) {\n    if (typeof focus.outline === 'object') {\n      var _color = (0, _colors.normalizeColor)(focus.outline.color || 'focus', props.theme);\n\n      var size = focus.outline.size || '2px';\n      return \"\\n        outline-offset: 0px;\\n        outline: \" + size + \" solid \" + _color + \";\\n      \";\n    }\n\n    return \"outline: \" + focus.outline + \";\";\n  }\n\n  if (focus.shadow && (!focus.border || !justBorder)) {\n    if (typeof focus.shadow === 'object') {\n      var _color2 = (0, _colors.normalizeColor)( // If there is a focus.border.color, use that for shadow too.\n      // This is for backwards compatibility in v2.\n      focus.border && focus.border.color || focus.shadow.color || 'focus', props.theme);\n\n      var _size = focus.shadow.size || '2px'; // backwards compatible default\n\n\n      return \"\\n        outline: none;\\n        box-shadow: 0 0 \" + _size + \" \" + _size + \" \" + _color2 + \";\\n      \";\n    }\n\n    return \"\\n      outline: none;\\n      box-shadow: \" + focus.shadow + \";\\n    \";\n  }\n\n  if (focus.border) {\n    var _color3 = (0, _colors.normalizeColor)(focus.border.color || 'focus', props.theme);\n\n    return \"\\n      outline: none;\\n      border-color: \" + _color3 + \";\\n    \";\n  }\n\n  return ''; // defensive\n};\n\nvar unfocusStyles = function unfocusStyles(props, _temp2) {\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      forceOutline = _ref2.forceOutline,\n      justBorder = _ref2.justBorder;\n\n  var focus = props.theme.global.focus;\n\n  if (!focus || forceOutline && !focus.outline) {\n    var color = (0, _colors.normalizeColor)('focus', props.theme);\n    if (color) return \"outline: none;\";\n    return ''; // native\n  }\n\n  if (focus.outline && (!focus.border || !justBorder)) {\n    if (typeof focus.outline === 'object') {\n      return \"\\n        outline-offset: 0px;\\n        outline: none;\\n      \";\n    }\n\n    return \"outline: none;\";\n  }\n\n  if (focus.shadow && (!focus.border || !justBorder)) {\n    if (typeof focus.shadow === 'object') {\n      return \"\\n        outline: none;\\n        box-shadow: none;\\n      \";\n    }\n\n    return \"\\n      outline: none;\\n      box-shadow: none;\\n    \";\n  }\n\n  if (focus.border) {\n    return \"\\n      outline: none;\\n      border-color: none;\\n    \";\n  }\n\n  return ''; // defensive\n}; // focus also supports clickable elements inside svg\n\n\nvar focusStyle = function focusStyle(_temp3) {\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      forceOutline = _ref3.forceOutline,\n      justBorder = _ref3.justBorder,\n      skipSvgChildren = _ref3.skipSvgChildren;\n\n  return (0, _styledComponents.css)([\"\", \" \", \" \", \"\"], function (props) {\n    return !skipSvgChildren && \"\\n  > circle,\\n  > ellipse,\\n  > line,\\n  > path,\\n  > polygon,\\n  > polyline,\\n  > rect {\\n    \" + focusStyles(props) + \"\\n  }\";\n  }, function (props) {\n    return focusStyles(props, {\n      forceOutline: forceOutline,\n      justBorder: justBorder\n    });\n  }, !forceOutline && \"\\n  ::-moz-focus-inner {\\n    border: 0;\\n  }\\n  \");\n}; // This is placed next to focusStyle for easy maintainability\n// of code since changes to focusStyle should be reflected in\n// unfocusStyle as well. However, this function is only being used\n// by List for an iterim state. It is not recommended to rely on\n// this function for other components.\n\n\nexports.focusStyle = focusStyle;\n\nvar unfocusStyle = function unfocusStyle(_temp4) {\n  var _ref4 = _temp4 === void 0 ? {} : _temp4,\n      forceOutline = _ref4.forceOutline,\n      justBorder = _ref4.justBorder,\n      skipSvgChildren = _ref4.skipSvgChildren;\n\n  return (0, _styledComponents.css)([\"\", \" \", \" \", \"\"], function (props) {\n    return !skipSvgChildren && \"\\n  > circle,\\n  > ellipse,\\n  > line,\\n  > path,\\n  > polygon,\\n  > polyline,\\n  > rect {\\n    \" + unfocusStyles(props) + \"\\n  }\";\n  }, function (props) {\n    return unfocusStyles(props, {\n      forceOutline: forceOutline,\n      justBorder: justBorder\n    });\n  }, !forceOutline && \"\\n  ::-moz-focus-inner {\\n    border: 0;\\n  }\\n  \");\n}; // For backwards compatibility we need to add back the control border width.\n// Based on how grommet was functioning prior to https://github.com/grommet/grommet/pull/3939,\n// the padding was subtracting the border width from the theme value, but the\n// placeholder was not. Because we're now placing the subtraction into the\n// theme itself, we have to add back in the border width here.\n// This is used for placeholder/icon in TextInput and MaskedInput.\n\n\nexports.unfocusStyle = unfocusStyle;\n\nvar adjustPad = function adjustPad(props, value) {\n  return (0, _mixins.parseMetricToNum)((props.theme.global.edgeSize[value] || value) + \"px\") + (0, _mixins.parseMetricToNum)(props.theme.global.control.border.width + \"px\") + \"px\";\n};\n\nvar getInputPadBySide = function getInputPadBySide(props, side) {\n  if (typeof props.theme.global.input.padding !== 'object') {\n    var _adjustedPad = adjustPad(props, props.theme.global.input.padding);\n\n    return _adjustedPad;\n  }\n\n  var orientation;\n  if (side === 'left' || side === 'right') orientation = 'horizontal';else if (side === 'top' || side === 'bottom') orientation = 'vertical';else orientation = undefined; // if individual side isn't available, fallback to the\n  // orientation if possible\n\n  var pad = props.theme.global.input.padding[side] || props.theme.global.input.padding[orientation];\n  var adjustedPad = adjustPad(props, pad);\n  return adjustedPad;\n};\n\nexports.getInputPadBySide = getInputPadBySide;\nvar placeholderColor = (0, _styledComponents.css)([\"color:\", \";\"], function (props) {\n  return (0, _colors.normalizeColor)(props.theme.global.colors.placeholder, props.theme);\n});\nvar placeholderStyle = (0, _styledComponents.css)([\"&::-webkit-input-placeholder{\", \";}&::-moz-placeholder{\", \";}&:-ms-input-placeholder{\", \";}\"], placeholderColor, placeholderColor, placeholderColor);\n\nvar inputSizeStyle = function inputSizeStyle(props) {\n  var data = props.theme.text[props.size];\n  return (0, _styledComponents.css)([\"font-size:\", \";line-height:\", \";\"], data.size, data.height);\n};\n\nvar inputStyle = (0, _styledComponents.css)([\"box-sizing:border-box;\", \" font-family:inherit;border:none;-webkit-appearance:none;background:transparent;color:inherit;width:100%;\", \" \", \" \", \" margin:0;\", \" \", \";\", \" \", \"::-webkit-search-decoration{-webkit-appearance:none;}&::-moz-focus-inner{border:none;outline:none;}&:-moz-placeholder,&::-moz-placeholder{opacity:1;}\", \"\"], function (props) {\n  return \"font-size: \" + (props.theme.global.input.font.size ? props.theme.text[props.theme.global.input.font.size].size || props.theme.global.input.font.size : 'inherit') + \";\";\n}, function (props) {\n  return props.theme.global.input.font.height && \"line-height: \" + props.theme.global.input.font.height + \";\";\n}, function (props) {\n  return props.theme.global.input.padding && typeof props.theme.global.input.padding !== 'object' ? // On a breaking change release, this condition could be removed and\n  // just the edgeStyle could remain. Currently, this is needed for\n  // backwards compatibility since we are placing the calculation in\n  // base.js\n  \"padding: \" + ((0, _mixins.parseMetricToNum)(props.theme.global.edgeSize[props.theme.global.input.padding] || props.theme.global.input.padding) - (0, _mixins.parseMetricToNum)(props.theme.global.control.border.width)) + \"px;\" : edgeStyle('padding', props.theme.global.input.padding, props.responsive, props.theme.box.responsiveBreakpoint, props.theme);\n}, function (props) {\n  return (// for backwards compatibility, check if props.theme.global.input.weight\n    (props.theme.global.input.weight || props.theme.global.input.font.weight) && (0, _styledComponents.css)([\"font-weight:\", \";\"], props.theme.global.input.weight || props.theme.global.input.font.weight)\n  );\n}, function (props) {\n  return props.size && inputSizeStyle(props);\n}, function (props) {\n  return props.focus && !props.plain && focusStyle();\n}, controlBorderStyle, placeholderStyle, function (props) {\n  return props.theme.global.input.extend;\n});\nexports.inputStyle = inputStyle;\n\nvar overflowStyle = function overflowStyle(overflowProp) {\n  if (typeof overflowProp === 'string') {\n    return (0, _styledComponents.css)([\"overflow:\", \";\"], overflowProp);\n  }\n\n  return (0, _styledComponents.css)([\"\", \" \", \";\"], overflowProp.horizontal && \"overflow-x: \" + overflowProp.horizontal + \";\", overflowProp.vertical && \"overflow-y: \" + overflowProp.vertical + \";\");\n};\n\nexports.overflowStyle = overflowStyle;\nvar ALIGN_SELF_MAP = {\n  center: 'center',\n  end: 'flex-end',\n  start: 'flex-start',\n  stretch: 'stretch'\n};\nvar genericStyles = (0, _styledComponents.css)([\"\", \" \", \" \", \"\"], function (props) {\n  return props.alignSelf && \"align-self: \" + ALIGN_SELF_MAP[props.alignSelf] + \";\";\n}, function (props) {\n  return props.gridArea && \"grid-area: \" + props.gridArea + \";\";\n}, function (props) {\n  return props.margin && props.theme.global && edgeStyle('margin', props.margin, props.responsive, props.theme.global.edgeSize.responsiveBreakpoint, props.theme);\n});\nexports.genericStyles = genericStyles;\n\nvar disabledStyle = function disabledStyle(componentStyle) {\n  return (0, _styledComponents.css)([\"opacity:\", \";cursor:default;\"], function (props) {\n    return componentStyle || props.theme.global.control.disabled.opacity;\n  });\n};\n\nexports.disabledStyle = disabledStyle;\n\nvar sizeStyle = function sizeStyle(name, value, theme) {\n  return (0, _styledComponents.css)([\"\", \":\", \";\"], name, theme.global.size[value] || value);\n};\n\nexports.sizeStyle = sizeStyle;\nvar plainInputStyle = (0, _styledComponents.css)([\"outline:none;border:none;\"]); // CSS for this sub-object in the theme\n\nexports.plainInputStyle = plainInputStyle;\n\nvar kindPartStyles = function kindPartStyles(obj, theme, colorValue) {\n  var styles = [];\n\n  if (obj.padding || obj.pad) {\n    // button uses `padding` but other components use Grommet `pad`\n    var pad = obj.padding || obj.pad;\n    if (pad.vertical || pad.horizontal) styles.push(\"padding: \" + (theme.global.edgeSize[pad.vertical] || pad.vertical || 0) + \" \" + (theme.global.edgeSize[pad.horizontal] || pad.horizontal || 0) + \";\");else styles.push(\"padding: \" + (theme.global.edgeSize[pad] || pad || 0) + \";\");\n  }\n\n  if (obj.background) styles.push((0, _background.backgroundStyle)(colorValue || obj.background, theme, obj.color || (Object.prototype.hasOwnProperty.call(obj, 'color') && obj.color === undefined ? false : undefined)));else if (obj.color) styles.push(\"color: \" + (0, _colors.normalizeColor)(obj.color, theme) + \";\");\n\n  if (obj.border) {\n    if (obj.border.width) styles.push((0, _styledComponents.css)([\"border-style:solid;border-width:\", \";\"], obj.border.width));\n    if (obj.border.color) styles.push((0, _styledComponents.css)([\"border-color:\", \";\"], (0, _colors.normalizeColor)(!obj.background && colorValue || obj.border.color || 'border', theme)));\n    if (obj.border.radius) styles.push((0, _styledComponents.css)([\"border-radius:\", \";\"], obj.border.radius));\n  } else if (obj.border === false) styles.push('border: none;');\n\n  if (colorValue && !obj.border && !obj.background) styles.push(\"color: \" + (0, _colors.normalizeColor)(colorValue, theme) + \";\");\n\n  if (obj.font) {\n    if (obj.font.size) {\n      styles.push(\"font-size: \" + (theme.text[obj.font.size].size || obj.font.size) + \";\");\n    }\n\n    if (obj.font.height) {\n      styles.push(\"line-height: \" + obj.font.height + \";\");\n    }\n\n    if (obj.font.weight) {\n      styles.push(\"font-weight: \" + obj.font.weight + \";\");\n    }\n  }\n\n  if (obj.opacity) {\n    var opacity = obj.opacity === true ? theme.global.opacity.medium : theme.global.opacity[obj.opacity] || obj.opacity;\n    styles.push(\"opacity: \" + opacity + \";\");\n  }\n\n  if (obj.extend) styles.push(obj.extend);\n  return styles;\n};\n\nexports.kindPartStyles = kindPartStyles;\nvar TEXT_ALIGN_MAP = {\n  center: 'center',\n  end: 'right',\n  start: 'left'\n};\nvar textAlignStyle = (0, _styledComponents.css)([\"text-align:\", \";\"], function (props) {\n  return TEXT_ALIGN_MAP[props.textAlign];\n});\nexports.textAlignStyle = textAlignStyle;","map":null,"metadata":{},"sourceType":"script"}