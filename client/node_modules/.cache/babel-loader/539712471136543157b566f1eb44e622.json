{"ast":null,"code":"import _classCallCheck from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/ResultList.js\";\nimport React, { Component } from 'react';\n\nvar ResultList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ResultList, _Component);\n\n  function ResultList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ResultList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ResultList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: [],\n      displayItems: [] // WHEN COMPONENT LOADS\n\n    };\n\n    _this.getIndeces = function (businesses) {\n      var indeces = []; // HANDLE IF DATA RETURNED IS LESS THAN 3\n\n      if (businesses.length < 3) {\n        indeces.push(0, 1);\n      } else {\n        while (indeces.length < 3) {\n          var number = Math.floor(Math.random() * Math.floor(businesses.length));\n\n          if (!indeces.includes(number)) {\n            indeces.push(number);\n          }\n        }\n\n        ;\n      }\n\n      return indeces;\n    };\n\n    _this.randomPicks = function () {\n      var results = _this.getIndeces(_this.state.data).map(function (el) {\n        return _this.state.data[el];\n      });\n\n      return results;\n    };\n\n    _this.removeItem = function (passedIndex) {\n      var newData = _this.state.data.filter(function (el, index) {\n        return passedIndex !== index;\n      });\n\n      _this.setState({\n        data: newData\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ResultList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.data !== prevProps.data) {\n        var displayItems = [];\n        var data = []; // RECEIVE DATA AND TAKE 3 ITEMS FROM THAT ARRAY AND TRANSPOSE THEM TO DISPLAY ARRAY\n        // received [1,2,3,4,5,6]\n        // (depending on random or not)\n        // state.data log [4,5,6]\n        // state.display array [1,2,3]\n        // IF TOTAL DATA IS LESS THAN 3\n\n        if (this.props.data.length < 3) {\n          // ADD EVERYTHING TO DISPLAY ITEMS\n          displayItems = this.props.data;\n        } else {\n          // if random, add random entries to display items for the first time\n          for (var i = 0; i < 3; i++) {\n            displayItems.push(this.props.data[i]);\n          } // actualizar data general sin valores que se pusieron en display items\n\n\n          data = this.props.data.filter(function (el) {\n            return displayItems.includes(el) === false;\n          });\n        }\n\n        this.setState({\n          data: data\n        });\n        this.setState({\n          displayItems: displayItems\n        }); //this.setState({ data: this.props.data });\n      }\n    } // when an item in display array is clicked\n    // delete from display array\n    // (depending on random or not) take item from data log and add to display array\n    // FUNCTION THAT CREATES 3 RANDOM NUMBERS WITH DATA ARRAY LENGTH\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return console.log(_this2.state);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"GET STATE\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.state.displayItems.map(function (el, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          onClick: function onClick() {\n            return _this2.removeItem(index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, el.name);\n      })));\n    }\n  }]);\n\n  return ResultList;\n}(Component);\n\n;\nexport default ResultList;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/ResultList.js"],"names":["React","Component","ResultList","state","data","displayItems","getIndeces","businesses","indeces","length","push","number","Math","floor","random","includes","randomPicks","results","map","el","removeItem","passedIndex","newData","filter","index","setState","prevProps","props","i","console","log","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass ResultList extends Component {\n  state = {\n    data: [],\n    displayItems: []\n  }\n\n  // WHEN COMPONENT LOADS\n  componentDidUpdate(prevProps) {\n    if (this.props.data !== prevProps.data) {\n      let displayItems = [];\n      let data = [];\n\n      // RECEIVE DATA AND TAKE 3 ITEMS FROM THAT ARRAY AND TRANSPOSE THEM TO DISPLAY ARRAY\n      // received [1,2,3,4,5,6]\n      // (depending on random or not)\n      // state.data log [4,5,6]\n      // state.display array [1,2,3]\n\n      // IF TOTAL DATA IS LESS THAN 3\n      if (this.props.data.length < 3) {\n        // ADD EVERYTHING TO DISPLAY ITEMS\n        displayItems = this.props.data;\n\n      } else {\n        // if random, add random entries to display items for the first time\n        for (let i=0; i<3; i++) {\n          displayItems.push(this.props.data[i]);\n        }\n\n        // actualizar data general sin valores que se pusieron en display items\n        data = this.props.data.filter(el => displayItems.includes(el) === false);\n      }\n\n      \n\n\n      this.setState({ data });\n      this.setState({ displayItems });\n      //this.setState({ data: this.props.data });\n    }\n  }  \n  \n\n\n  // when an item in display array is clicked\n    // delete from display array\n    // (depending on random or not) take item from data log and add to display array\n\n\n\n    // FUNCTION THAT CREATES 3 RANDOM NUMBERS WITH DATA ARRAY LENGTH\n    getIndeces = (businesses) => {\n      let indeces = [];\n  \n      // HANDLE IF DATA RETURNED IS LESS THAN 3\n      if (businesses.length < 3) {\n        indeces.push(0, 1);\n      } else {\n  \n        while (indeces.length < 3) {\n          let number = Math.floor(Math.random() * Math.floor(businesses.length));\n    \n          if (!indeces.includes(number)) {\n            indeces.push(number);\n          }\n        };\n  \n      }\n  \n      return indeces;\n    };\n  \n    // SETS 3 RANDOM PICKS AND ADDS THEM TO STATE\n    randomPicks = () => {\n      let results = this.getIndeces(this.state.data).map(el => {\n        return this.state.data[el];\n      });\n  \n      return results;\n    };\n\n  // TAKE FULL DATA [1,2,3,4,5,6]\n  // SELECT 3 ITEMS AND UPDATE DATA\n  // REFRESH DATA ARRAY EACH TIME ONE ITEM IS DELETED\n\n  // ONLY SHOW 3 RANDOM PICKS\n  // WHEN USER CLICKS IN ONE ITEM IT DELETES AND GIVES ANOTHER RANDOM FROM THE LIST\n\n \n  \n\n  removeItem = (passedIndex) => {\n    let newData = this.state.data.filter((el, index) => passedIndex !== index);\n    this.setState({ data: newData });\n  }\n\n\n  render() {\n    return (\n      <div>\n        <button onClick={() => console.log(this.state)}>GET STATE</button>\n      <ul>\n        {\n          this.state.displayItems.map((el, index) => {\n            return <li key={index} onClick={() => this.removeItem(index)}>{el.name}</li>\n          })\n        }\n      </ul>\n      </div>\n    );\n  }\n};\n\nexport default ResultList;"]},"metadata":{},"sourceType":"module"}