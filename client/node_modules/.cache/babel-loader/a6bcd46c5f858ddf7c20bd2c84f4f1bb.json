{"ast":null,"code":"var _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/biteFinal/client/src/components/CustomView.js\";\nimport React from 'react'; // import ResultView from './ResultView';\n// import CustomForm from './CustomForm';\n\nimport Loadable from 'react-loadable';\nvar ResultView = Loadable({\n  loader: function loader() {\n    return import('./ResultView');\n  },\n  loading: function loading() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n});\nvar CustomForm = Loadable({\n  loader: function loader() {\n    return import('./CustomForm');\n  },\n  loading: function loading() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Loading...\");\n  }\n});\n\nvar customView = function customView(_ref) {\n  var data = _ref.data,\n      location = _ref.location,\n      toggleUi = _ref.toggleUi,\n      customView = _ref.customView,\n      toggleCustomForm = _ref.toggleCustomForm;\n  return React.createElement(React.Fragment, null, customView.resultsMode ? React.createElement(ResultView, {\n    isCustom: true,\n    data: data,\n    toggleUi: toggleUi,\n    location: location,\n    customSearchData: customView,\n    toggleCustomForm: toggleCustomForm,\n    randomSorting: customView.sortBy === 'random' ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }) : React.createElement(CustomForm, {\n    location: location,\n    toggleUi: toggleUi,\n    customView: customView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n};\n\nexport default React.memo(customView);","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/biteFinal/client/src/components/CustomView.js"],"names":["React","Loadable","ResultView","loader","loading","CustomForm","customView","data","location","toggleUi","toggleCustomForm","resultsMode","sortBy","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,IAAMC,UAAU,GAAGD,QAAQ,CAAC;AAC1BE,EAAAA,MAAM,EAAE;AAAA,WAAM,OAAO,cAAP,CAAN;AAAA,GADkB;AAE1BC,EAAAA,OAF0B,qBAEhB;AACR,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;AAJyB,CAAD,CAA3B;AAOA,IAAMC,UAAU,GAAGJ,QAAQ,CAAC;AAC1BE,EAAAA,MAAM,EAAE;AAAA,WAAM,OAAO,cAAP,CAAN;AAAA,GADkB;AAE1BC,EAAAA,OAF0B,qBAEhB;AACR,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;AAJyB,CAAD,CAA3B;;AAQA,IAAME,UAAU,GAAG,0BAMb;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHJC,QAGI,QAHJA,QAGI;AAAA,MAFJH,UAEI,QAFJA,UAEI;AAAA,MADJI,gBACI,QADJA,gBACI;AACJ,SACE,0CACGJ,UAAU,CAACK,WAAX,GACC,oBAAC,UAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,IAAI,EAAEJ,IAFR;AAGE,IAAA,QAAQ,EAAEE,QAHZ;AAIE,IAAA,QAAQ,EAAED,QAJZ;AAKE,IAAA,gBAAgB,EAAEF,UALpB;AAME,IAAA,gBAAgB,EAAEI,gBANpB;AAOE,IAAA,aAAa,EAAEJ,UAAU,CAACM,MAAX,KAAsB,QAAtB,GAAiC,IAAjC,GAAwC,KAPzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAWC,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAEJ,QADZ;AAEE,IAAA,QAAQ,EAAEC,QAFZ;AAGE,IAAA,UAAU,EAAEH,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADF;AAoBD,CA3BD;;AA6BA,eAAeN,KAAK,CAACa,IAAN,CAAWP,UAAX,CAAf","sourcesContent":["import React from 'react';\n\n// import ResultView from './ResultView';\n// import CustomForm from './CustomForm';\n\nimport Loadable from 'react-loadable';\n\nconst ResultView = Loadable({\n  loader: () => import('./ResultView'),\n  loading() {\n    return <div>Loading...</div>\n  }\n});\n\nconst CustomForm = Loadable({\n  loader: () => import('./CustomForm'),\n  loading() {\n    return <div>Loading...</div>\n  }\n});\n\n\nconst customView = ({ \n  data,\n  location, \n  toggleUi, \n  customView, \n  toggleCustomForm,\n}) => {\n  return (\n    <>\n      {customView.resultsMode ? \n        <ResultView \n          isCustom\n          data={data}\n          toggleUi={toggleUi}\n          location={location}\n          customSearchData={customView}\n          toggleCustomForm={toggleCustomForm}\n          randomSorting={customView.sortBy === 'random' ? true : false}\n        /> \n        : \n        <CustomForm \n          location={location}\n          toggleUi={toggleUi} \n          customView={customView} \n        />}\n    </>\n  );\n};\n\nexport default React.memo(customView);"]},"metadata":{},"sourceType":"module"}