{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.themeDoc = exports.doc = void 0;\n\nvar _reactDesc = require(\"react-desc\");\n\nvar _utils = require(\"../../utils\");\n\nvar doc = function doc(CheckBoxGroup) {\n  var DocumentedCheckBoxGroup = (0, _reactDesc.describe)(CheckBoxGroup).availableAt((0, _utils.getAvailableAtBadge)('CheckBoxGroup', 'Input')).description('A group of CheckBoxes.').usage(\"import { CheckBoxGroup } from 'grommet';\\n        <CheckBoxGroup />\").intrinsicElement('div');\n  DocumentedCheckBoxGroup.propTypes = {\n    value: _reactDesc.PropTypes.arrayOf(_reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.number, _reactDesc.PropTypes.string])).description(\"An array of the values for the checked options. \\n      If options is provided as an object, the value array will be the values \\n     that the valueKey maps to.\"),\n    disabled: _reactDesc.PropTypes.bool.description(\"Disables all options.\").defaultValue(undefined),\n    labelKey: _reactDesc.PropTypes.string.description(\"When the options array contains objects, this property indicates how\\n        to determine the label of each option. If a string is\\n        provided, it is used as the key to retrieve each option's label.\"),\n    name: _reactDesc.PropTypes.string.description(\"Required when used in the Context of Form and FormField.\"),\n    onChange: _reactDesc.PropTypes.func.description(\"Function that will be called when the user clicks on a CheckBox option. \\n      It will pass a React event object with the additional CheckBoxGroup \\n      properties of 'option' and 'value'.\"),\n    options: _reactDesc.PropTypes.oneOfType([_reactDesc.PropTypes.arrayOf(_reactDesc.PropTypes.string), _reactDesc.PropTypes.arrayOf(_reactDesc.PropTypes.shape({}))]).description(\"Options can be either a string or an object of CheckBox props \\n      excluding the 'checked' property, use CheckBoxGroup 'value' prop instead \\n      of 'checked'.\").isRequired,\n    valueKey: _reactDesc.PropTypes.string.description(\"When the options array contains objects, this property indicates how\\n        to determine the value of each option. If a string is provided, \\n        it is used as the key to retrieve each option's value.\")\n  };\n  return DocumentedCheckBoxGroup;\n};\n\nexports.doc = doc;\nvar themeDoc = {\n  'checkBoxGroup.container': {\n    description: 'Any valid Box props for the CheckBoxGroup container.',\n    type: 'object',\n    defaultValue: undefined\n  }\n};\nexports.themeDoc = themeDoc;","map":null,"metadata":{},"sourceType":"script"}