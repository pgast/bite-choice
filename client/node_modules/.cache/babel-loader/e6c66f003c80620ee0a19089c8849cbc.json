{"ast":null,"code":"import _slicedToArray from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v1/client/src/Store.js\";\nimport React, { useReducer, createContext } from \"react\";\nvar initialState = {\n  customView: {\n    resultsMode: false,\n    searchTerms: [],\n    sortBy: 'random'\n  },\n  data: []\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'TOGGLE':\n      var customViewCopy = state.customView;\n      customViewCopy.resultsMode = !customViewCopy.resultsMode;\n      return _objectSpread({}, state, {\n        customView: customViewCopy\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var value = {\n    state: state,\n    dispatch: dispatch\n  };\n  return React.createElement(Store.Provider, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, props.children);\n}\nexport var Store = createContext();","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v1/client/src/Store.js"],"names":["React","useReducer","createContext","initialState","customView","resultsMode","searchTerms","sortBy","data","reducer","state","action","type","customViewCopy","StoreProvider","props","dispatch","value","children","Store"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAE,KADH;AAEVC,IAAAA,WAAW,EAAE,EAFH;AAGVC,IAAAA,MAAM,EAAE;AAHE,GADO;AAMnBC,EAAAA,IAAI,EAAE;AANa,CAArB;;AASA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,QAAL;AACE,UAAIC,cAAc,GAAGH,KAAK,CAACN,UAA3B;AACAS,MAAAA,cAAc,CAACR,WAAf,GAA6B,CAACQ,cAAc,CAACR,WAA7C;AACA,+BAAYK,KAAZ;AAAmBN,QAAAA,UAAU,EAAES;AAA/B;;AACF;AACE,aAAOH,KAAP;AANJ;AAQD;;AAED,OAAO,SAASI,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,oBACTd,UAAU,CAACQ,OAAD,EAAUN,YAAV,CADD;AAAA;AAAA,MAC5BO,KAD4B;AAAA,MACrBM,QADqB;;AAEnC,MAAMC,KAAK,GAAG;AAACP,IAAAA,KAAK,EAALA,KAAD;AAAQM,IAAAA,QAAQ,EAARA;AAAR,GAAd;AACA,SAAO,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BF,KAAK,CAACG,QAArC,CAAP;AACD;AAED,OAAO,IAAMC,KAAK,GAAGjB,aAAa,EAA3B","sourcesContent":["import React, { useReducer, createContext } from \"react\";\n\nconst initialState = {\n  customView: {\n    resultsMode: false,\n    searchTerms: [],\n    sortBy: 'random'\n  },\n  data: []\n}\n\nfunction reducer(state, action) {\n  switch(action.type) {\n    case 'TOGGLE':\n      let customViewCopy = state.customView\n      customViewCopy.resultsMode = !customViewCopy.resultsMode;\n      return { ...state, customView: customViewCopy};\n    default:\n      return state;\n  }\n}\n\nexport function StoreProvider(props) {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const value = {state, dispatch}\n  return <Store.Provider value={value}>{props.children}</Store.Provider>\n}\n\nexport const Store = createContext();"]},"metadata":{},"sourceType":"module"}