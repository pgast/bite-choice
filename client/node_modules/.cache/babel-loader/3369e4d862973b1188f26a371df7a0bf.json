{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.RadioButtonGroup = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _styledComponents = require(\"styled-components\");\n\nvar _FormContext = require(\"../Form/FormContext\");\n\nvar _defaultProps = require(\"../../default-props\");\n\nvar _Keyboard = require(\"../Keyboard\");\n\nvar _Box = require(\"../Box\");\n\nvar _RadioButton = require(\"../RadioButton\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar RadioButtonGroup = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {\n  var children = _ref.children,\n      disabled = _ref.disabled,\n      name = _ref.name,\n      _onChange = _ref.onChange,\n      optionsProp = _ref.options,\n      valueProp = _ref.value,\n      gap = _ref.gap,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"children\", \"disabled\", \"name\", \"onChange\", \"options\", \"value\", \"gap\"]);\n\n  var formContext = (0, _react.useContext)(_FormContext.FormContext);\n\n  var theme = (0, _react.useContext)(_styledComponents.ThemeContext) || _defaultProps.defaultProps.theme; // normalize options to always use an object\n\n\n  var options = (0, _react.useMemo)(function () {\n    return optionsProp.map(function (o) {\n      return typeof o !== 'object' ? {\n        disabled: disabled,\n        id: rest.id ? rest.id + \"-\" + o : \"\" + o,\n        // force string\n        label: typeof o !== 'string' ? JSON.stringify(o) : o,\n        value: o\n      } : _extends({\n        disabled: disabled\n      }, o);\n    });\n  }, [disabled, optionsProp, rest.id]);\n\n  var _formContext$useFormI = formContext.useFormInput(name, valueProp, ''),\n      value = _formContext$useFormI[0],\n      setValue = _formContext$useFormI[1];\n\n  var _useState = (0, _react.useState)(),\n      focus = _useState[0],\n      setFocus = _useState[1];\n\n  var optionRefs = (0, _react.useRef)([]);\n\n  var valueIndex = _react[\"default\"].useMemo(function () {\n    var result;\n    options.some(function (option, index) {\n      if (option.value === value) {\n        result = index;\n        return true;\n      }\n\n      return false;\n    });\n    return result;\n  }, [options, value]);\n\n  (0, _react.useEffect)(function () {\n    if (focus && valueIndex >= 0) optionRefs.current[valueIndex].focus();\n  }, [focus, valueIndex]);\n\n  var onNext = function onNext() {\n    if (valueIndex !== undefined && valueIndex < options.length - 1) {\n      var nextIndex = valueIndex + 1;\n      var nextValue = options[nextIndex].value;\n      setValue(nextValue);\n      if (_onChange) _onChange({\n        target: {\n          value: nextValue\n        }\n      });\n    }\n  };\n\n  var onPrevious = function onPrevious() {\n    if (valueIndex > 0) {\n      var nextIndex = valueIndex - 1;\n      var nextValue = options[nextIndex].value;\n      setValue(nextValue);\n      if (_onChange) _onChange({\n        target: {\n          value: nextValue\n        }\n      });\n    }\n  };\n\n  var onFocus = function onFocus() {\n    // Delay just a wee bit so Chrome doesn't missing turning the button on.\n    // Chrome behaves differently in that focus is given to radio buttons\n    // when the user selects one, unlike Safari and Firefox.\n    setTimeout(function () {\n      return !focus && setFocus(true);\n    }, 1);\n  };\n\n  var onBlur = function onBlur() {\n    return focus && setFocus(false);\n  };\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_Keyboard.Keyboard, {\n    target: \"document\",\n    onUp: focus ? onPrevious : undefined,\n    onDown: focus ? onNext : undefined,\n    onLeft: focus ? onPrevious : undefined,\n    onRight: focus ? onNext : undefined\n  }, /*#__PURE__*/_react[\"default\"].createElement(_Box.Box, _extends({\n    ref: ref\n  }, theme.radioButtonGroup.container, {\n    gap: gap || (theme.radioButtonGroup.container && theme.radioButtonGroup.container.gap ? theme.radioButtonGroup.container.gap : 'small')\n  }, rest), options.map(function (_ref2, index) {\n    var optionDisabled = _ref2.disabled,\n        id = _ref2.id,\n        label = _ref2.label,\n        optionValue = _ref2.value,\n        optionRest = _objectWithoutPropertiesLoose(_ref2, [\"disabled\", \"id\", \"label\", \"value\"]);\n\n    return /*#__PURE__*/_react[\"default\"].createElement(_RadioButton.RadioButton, _extends({\n      ref: function ref(aRef) {\n        optionRefs.current[index] = aRef;\n      },\n      key: optionValue,\n      name: name,\n      label: !children ? label : undefined,\n      disabled: optionDisabled,\n      checked: optionValue === value,\n      focus: focus && (optionValue === value || value === undefined && !index),\n      id: id,\n      value: optionValue,\n      onFocus: onFocus,\n      onBlur: onBlur,\n      onChange: function onChange(event) {\n        setValue(optionValue);\n        if (_onChange) _onChange(event);\n      }\n    }, optionRest), children ? function (state) {\n      return children(optionsProp[index], state);\n    } : null);\n  })));\n});\nRadioButtonGroup.displayName = 'RadioButtonGroup';\nvar RadioButtonGroupDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line global-require\n  RadioButtonGroupDoc = require('./doc').doc(RadioButtonGroup);\n}\n\nvar RadioButtonGroupWrapper = RadioButtonGroupDoc || RadioButtonGroup;\nexports.RadioButtonGroup = RadioButtonGroupWrapper;","map":null,"metadata":{},"sourceType":"script"}