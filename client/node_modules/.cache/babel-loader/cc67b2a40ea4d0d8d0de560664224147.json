{"ast":null,"code":"import _toConsumableArray from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/ResultList.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Store } from '../Store'; // 1 TERM && cualquier criterio menos random\n// RETURN LOS PRIMERO 3 DE ARRAY DE RESPUESTA\n// 1 TERM && random\n// RETURN RANDOM 3 ITEMS\n// 2 TERM && cualquier criterio menos random\n// RETURN EL PRIMERO DE 1 Y LOS PRIMEROS 2 DE OTRO (cual tiene 1 y cual 2 luego se define)\n// 2 TERM && random\n// RETURN RANDOM 1 DE 1 Y 2 RANDOM DE OTRO\n// 3 TERM && cualquier criterio menos random\n// RETURN el primero de cada term\n// 3 TERM && random \n// RETURN y \n\nvar resultList = function resultList(_ref) {\n  var data = _ref.data,\n      randomSorting = _ref.randomSorting,\n      isCustom = _ref.isCustom,\n      toggleUi = _ref.toggleUi,\n      customSearchTerms = _ref.customSearchTerms;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      businesses = _useState2[0],\n      setBusinesses = _useState2[1];\n\n  var _useState3 = useState([{\n    name: 'Waiting for items'\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayItems = _useState4[0],\n      setDisplayItems = _useState4[1];\n\n  var _useContext = useContext(Store),\n      state = _useContext.state;\n\n  useEffect(function () {\n    if (isCustom) {\n      setStatesCustom(data);\n    } else {\n      setStatesFromArray(data);\n    }\n  }, [data, setBusinesses]);\n\n  var getIndeces = function getIndeces(businesses) {\n    var indeces = [];\n\n    if (businesses.length <= 3) {\n      indeces.push(0, 2);\n    } else if (businesses.length !== 0) {\n      while (indeces.length < 3) {\n        var number = Math.floor(Math.random() * Math.floor(businesses.length));\n\n        if (!indeces.includes(number)) {\n          indeces.push(number);\n        }\n      }\n\n      ;\n    }\n\n    return indeces;\n  };\n\n  var randomPicks = function randomPicks(array) {\n    var results = getIndeces(array).map(function (el) {\n      return array[el];\n    });\n    return results;\n  }; // IF IS IN CUSTOM MODE = refactor\n\n\n  var setStatesCustom =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(inputData) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return inputData;\n\n            case 2:\n              data = _context.sent;\n\n              if (customSearchTerms.searchTerms.length === 0) {\n                console.log('[CUSTOM - NO TERMS]');\n                setStatesFromArray(data);\n              } else {\n                console.log('[CUSTOM - WITH TERMS]');\n                setStatesFromTerms(data);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function setStatesCustom(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var setStatesFromTerms =\n  /*#__PURE__*/\n  function () {\n    var _ref3 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(inputData) {\n      var newData, allResults;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return inputData;\n\n            case 2:\n              newData = _context2.sent;\n\n              // if search random, mezclar todos los result arrays en uno solo\n              if (randomSorting) {\n                allResults = [];\n                newData.forEach(function (item) {\n                  allResults = [].concat(_toConsumableArray(allResults), _toConsumableArray(item));\n                });\n                setStatesFromArray(allResults);\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function setStatesFromTerms(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var setStatesFromArray =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3(inputData) {\n      var newData, newDisplayItems, i, item;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return inputData;\n\n            case 2:\n              newData = _context3.sent;\n              newDisplayItems = [];\n\n              if (newData.length < 3 && newData.length !== 0) {\n                newDisplayItems = newData;\n              } else if (newData.length > 3) {\n                if (randomSorting) {\n                  console.log('[RANDOM SORTING]');\n                  newDisplayItems = randomPicks(newData);\n                } else {\n                  console.log('[NOT RANDOM SORTING]');\n                  newDisplayItems = [newData[0], newData[1], newData[2]];\n                }\n\n                for (i = 0; i < newDisplayItems.length; i++) {\n                  item = newData.indexOf(newDisplayItems[i]);\n\n                  if (item > -1) {\n                    newData.splice(item, 1);\n                  }\n\n                  ;\n                }\n              }\n\n              setBusinesses(newData);\n              setDisplayItems(newDisplayItems);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function setStatesFromArray(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var removeItem = function removeItem(passedIndex) {\n    // update display items by deleting clicked item\n    var newDisplayItems = displayItems.filter(function (el, index) {\n      return passedIndex !== index;\n    }); // copy state\n\n    var newState = businesses;\n    var newItem; // if random mode is selected\n\n    if (randomSorting) {\n      // select random item from new state and save it to new item\n      newItem = newState[getIndeces(newState)[0]]; // update new state, filtering out the new item\n\n      newState = newState.filter(function (el) {\n        return newItem.name !== el.name;\n      });\n    } else {\n      // save value of removed item from array with shift\n      newItem = newState.shift();\n    }\n\n    if (newItem !== undefined) {\n      newDisplayItems.push(newItem);\n    }\n\n    setBusinesses(newState);\n    setDisplayItems(newDisplayItems);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return console.log(businesses);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"GET BUSINESSES STATE\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return console.log(displayItems);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"GET DISPLAY ITEMS STATE\"), displayItems.length !== 0 ? React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, displayItems.map(function (el, index) {\n    return React.createElement(\"li\", {\n      key: index,\n      onClick: function onClick() {\n        return removeItem(index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, el.name);\n  })) : // add fetching data message in the begginning\n  // if display items are gone, display button to take user to main page to try again\n  React.createElement(\"button\", {\n    onClick: function onClick() {\n      return toggleUi('landing');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"Try again!\"), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return console.log(state);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"GET STATE\"));\n};\n\nexport default resultList;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/ResultList.js"],"names":["React","useState","useEffect","useContext","Store","resultList","data","randomSorting","isCustom","toggleUi","customSearchTerms","businesses","setBusinesses","name","displayItems","setDisplayItems","state","setStatesCustom","setStatesFromArray","getIndeces","indeces","length","push","number","Math","floor","random","includes","randomPicks","array","results","map","el","inputData","searchTerms","console","log","setStatesFromTerms","newData","allResults","forEach","item","newDisplayItems","i","indexOf","splice","removeItem","passedIndex","filter","index","newState","newItem","shift","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { Store } from '../Store';\n\n\n\n// 1 TERM && cualquier criterio menos random\n// RETURN LOS PRIMERO 3 DE ARRAY DE RESPUESTA\n\n// 1 TERM && random\n// RETURN RANDOM 3 ITEMS\n\n// 2 TERM && cualquier criterio menos random\n// RETURN EL PRIMERO DE 1 Y LOS PRIMEROS 2 DE OTRO (cual tiene 1 y cual 2 luego se define)\n\n// 2 TERM && random\n// RETURN RANDOM 1 DE 1 Y 2 RANDOM DE OTRO\n\n// 3 TERM && cualquier criterio menos random\n// RETURN el primero de cada term\n\n// 3 TERM && random \n// RETURN y \n\n\nconst resultList = ({ data, randomSorting, isCustom, toggleUi, customSearchTerms }) => {\n  const [businesses, setBusinesses] = useState([]);\n  const [displayItems, setDisplayItems] = useState([{ name: 'Waiting for items' }]);\n  const { state } = useContext(Store);\n\n  useEffect(() => {\n    if (isCustom) {\n      setStatesCustom(data);\n    } else {\n      setStatesFromArray(data);\n    }\n  }, [data, setBusinesses]);\n\n  \n\n  const getIndeces = (businesses) => {\n    let indeces = [];\n    if (businesses.length <= 3) {\n      indeces.push(0, 2);\n    } else if (businesses.length !== 0) {\n      while (indeces.length < 3) {\n        let number = Math.floor(Math.random() * Math.floor(businesses.length));\n        if (!indeces.includes(number)) {\n          indeces.push(number);\n        }\n      };\n    }\n    return indeces;\n  }\n\n  const randomPicks = (array) => {\n    let results = getIndeces(array).map(el => {\n      return array[el];\n    })\n    return results;\n  }\n\n\n  // IF IS IN CUSTOM MODE = refactor\n  const setStatesCustom = async (inputData) => {\n    let data = await inputData;\n\n    if (customSearchTerms.searchTerms.length === 0) {\n      console.log('[CUSTOM - NO TERMS]')\n      setStatesFromArray(data);\n    } else {\n      console.log('[CUSTOM - WITH TERMS]')\n      setStatesFromTerms(data);\n    }\n  }\n\n  const setStatesFromTerms = async (inputData) => {\n    let newData = await inputData;\n\n    \n\n\n\n\n\n      // if search random, mezclar todos los result arrays en uno solo\n    if (randomSorting) {\n      let allResults = [];\n        \n      newData.forEach(item => {\n        allResults = [...allResults, ...item];\n      });\n\n      setStatesFromArray(allResults);\n    }\n      \n\n  }\n \n\n  const setStatesFromArray = async (inputData) => {\n    let newData = await inputData;\n    let newDisplayItems = [];\n\n    if (newData.length < 3 && newData.length !== 0) {\n      newDisplayItems = newData;\n    } else if (newData.length > 3) {\n      if (randomSorting) {\n        console.log('[RANDOM SORTING]')\n        newDisplayItems = randomPicks(newData);\n      } else {\n        console.log('[NOT RANDOM SORTING]')\n        newDisplayItems = [newData[0], newData[1], newData[2]];\n      }\n\n      for (let i=0; i<newDisplayItems.length; i++) {\n        let item = newData.indexOf(newDisplayItems[i]);\n        if (item > -1) { newData.splice(item, 1) };\n      }\n    }\n\n    setBusinesses(newData);\n    setDisplayItems(newDisplayItems); \n  }\n\n  const removeItem = (passedIndex) => {\n    // update display items by deleting clicked item\n    let newDisplayItems = displayItems.filter((el, index) => passedIndex !== index);\n    // copy state\n    let newState = businesses;\n    let newItem;\n\n\n    // if random mode is selected\n    if (randomSorting) {\n      // select random item from new state and save it to new item\n      newItem = newState[getIndeces(newState)[0]];\n      // update new state, filtering out the new item\n      newState = newState.filter(el => newItem.name !== el.name);\n    } else {\n      // save value of removed item from array with shift\n      newItem = newState.shift();\n    }\n\n    if (newItem !== undefined) {\n      newDisplayItems.push(newItem);\n    }\n    \n    setBusinesses(newState);\n    setDisplayItems(newDisplayItems);\n  }\n\n\n  return (\n    <div>\n      <button onClick={() => console.log(businesses)}>GET BUSINESSES STATE</button>\n      <button onClick={() => console.log(displayItems)}>GET DISPLAY ITEMS STATE</button>\n\n      { displayItems.length !== 0 ?\n        <ul>\n          { \n            displayItems.map((el, index) => {\n              return <li key={index} onClick={() => removeItem(index)}>{el.name}</li>\n            })\n          }\n        </ul>\n        :\n        // add fetching data message in the begginning\n        // if display items are gone, display button to take user to main page to try again\n        <button onClick={() => toggleUi('landing')}>Try again!</button>\n      }\n      <button onClick={() => console.log(state)}>GET STATE</button>\n    </div>\n  );\n};\n\nexport default resultList;"]},"metadata":{},"sourceType":"module"}