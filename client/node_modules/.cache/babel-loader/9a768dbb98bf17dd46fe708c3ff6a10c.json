{"ast":null,"code":"import _slicedToArray from \"/Users/Pablo/Documents/React/bitechoice/biteFinal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/biteFinal/client/src/components/MainView/index.js\";\n\nimport React, { useContext, useState } from 'react';\nimport { Store } from '../../Store';\nimport CustomView from '../CustomView';\nimport RandomView from '../RandomView';\nimport LandingView from '../LandingView';\n\nvar mainView = function mainView(_ref) {\n  var location = _ref.location,\n      fetchSuccess = _ref.fetchSuccess;\n\n  var _useContext = useContext(Store),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      locationInput = _useState2[0],\n      setLocationInput = _useState2[1];\n\n  var validUserLocation = state.inputLocation !== '' ? true : false;\n\n  var clearLocation = function clearLocation() {\n    return dispatch({\n      type: 'CLEAR_LOCATION'\n    });\n  };\n\n  var _toggleUi = function toggleUi(ui) {\n    return dispatch({\n      type: 'TOGGLE_UI',\n      payload: ui\n    });\n  };\n\n  var toggleCustomForm = function toggleCustomForm() {\n    return dispatch({\n      type: 'TOGGLE_CUSTOM_FORM'\n    });\n  };\n\n  var toggleLocationInputView = function toggleLocationInputView(input) {\n    clearLocation();\n    setLocationInput(input);\n  };\n\n  var validBtn = function validBtn() {\n    var eventA = locationInput && validUserLocation ? true : false;\n    var eventB = !locationInput && fetchSuccess ? true : false;\n    if (eventA || eventB) return true;\n    return false;\n  };\n\n  return React.createElement(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100vw'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, state.ui === 'landing' && React.createElement(LandingView, {\n    location: location,\n    validBtn: validBtn,\n    toggleUi: _toggleUi,\n    fetchSuccess: fetchSuccess,\n    locationInput: locationInput,\n    toggleLocationInputView: toggleLocationInputView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), state.ui === 'custom' && React.createElement(CustomView, {\n    data: state.data,\n    toggleUi: _toggleUi,\n    customView: state.customView,\n    toggleCustomForm: toggleCustomForm,\n    location: locationInput ? state.inputLocation : location,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), state.ui === 'random' && React.createElement(RandomView, {\n    data: state.data,\n    locationInput: locationInput,\n    toggleUi: function toggleUi() {\n      return _toggleUi('landing');\n    },\n    location: locationInput ? state.inputLocation : location,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default mainView;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/biteFinal/client/src/components/MainView/index.js"],"names":["React","useContext","useState","Store","CustomView","RandomView","LandingView","mainView","location","fetchSuccess","state","dispatch","locationInput","setLocationInput","validUserLocation","inputLocation","clearLocation","type","toggleUi","ui","payload","toggleCustomForm","toggleLocationInputView","input","validBtn","eventA","eventB","height","width","data","customView"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\n\nimport { Store } from '../../Store';\nimport CustomView from '../CustomView';\nimport RandomView from '../RandomView';\nimport LandingView from '../LandingView';\n\nconst mainView = ({ location, fetchSuccess }) => {\n  const { state, dispatch } = useContext(Store);\n  const [locationInput, setLocationInput] = useState(false);\n  const validUserLocation = state.inputLocation !== '' ? true : false;\n\n  const clearLocation = () => dispatch ({ type: 'CLEAR_LOCATION' });\n  const toggleUi = ui => dispatch ({ type: 'TOGGLE_UI', payload: ui });\n  const toggleCustomForm = () => dispatch({ type: 'TOGGLE_CUSTOM_FORM' });\n\n  const toggleLocationInputView = input => {\n    clearLocation();\n    setLocationInput(input);\n  }\n\n  const validBtn = () => {\n    let eventA = locationInput && validUserLocation ? true : false;\n    let eventB = !locationInput && fetchSuccess ? true : false;\n    if(eventA || eventB) return true;\n    return false;\n  }\n\n  return (\n    <div style={{ height: '100vh', width: '100vw' }}>\n      {state.ui === 'landing' && (\n        <LandingView \n          location={location} \n          validBtn={validBtn}\n          toggleUi={toggleUi}\n          fetchSuccess={fetchSuccess} \n          locationInput={locationInput}\n          toggleLocationInputView={toggleLocationInputView}\n        />\n      )}\n      {state.ui === 'custom' && (\n        <CustomView \n          data={state.data}\n          toggleUi={toggleUi}\n          customView={state.customView}\n          toggleCustomForm={toggleCustomForm}\n          location={locationInput ? state.inputLocation : location}\n        />\n      )} \n      {state.ui === 'random' && (\n        <RandomView \n          data={state.data}\n          locationInput={locationInput}\n          toggleUi={() => toggleUi('landing')} \n          location={locationInput ? state.inputLocation : location}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default mainView;"]},"metadata":{},"sourceType":"module"}