{"ast":null,"code":"import _classCallCheck from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/ResultList.js\";\nimport React, { Component } from 'react'; // FIRST GET INPUT DATA 3 DISPLAY ITEMS AND EVERYTHING ELSE AS DATA\n// IF IS RANDOM MODE GET 3 \n// NO TERM && cualquier criterio menos random\n// RETURN LOS PRIMEROS 3 DE ARRAY DE RESPUESTA\n// NO TERM && random\n// RETURN RANDOM 3 ITEMS\n// 1 TERM && cualquier criterio menos random\n// RETURN LOS PRIMERO 3 DE ARRAY DE RESPUESTA\n// 1 TERM && random\n// RETURN RANDOM 3 ITEMS\n// 2 TERM && cualquier criterio menos random\n// RETURN EL PRIMERO DE 1 Y LOS PRIMEROS 2 DE OTRO (cual tiene 1 y cual 2 luego se define)\n// 2 TERM && random\n// RETURN RANDOM 1 DE 1 Y 2 RANDOM DE OTRO\n// 3 TERM && cualquier criterio menos random\n// RETURN el primero de cada term\n// 3 TERM && random \n// RETURN y \n\nvar ResultList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ResultList, _Component);\n\n  function ResultList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ResultList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ResultList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: _this.props.data,\n      displayItems: []\n    };\n\n    _this.setStateRandom = function (inputData) {\n      var displayItems = [];\n      var data = [];\n\n      if (inputData.length <= 3) {\n        displayItems = inputData;\n      } else {\n        displayItems = _this.randomPicks(inputData);\n        data = inputData.filter(function (el) {\n          return displayItems.includes(el) === false;\n        });\n      }\n\n      _this.setState({\n        data: data\n      });\n\n      _this.setState({\n        displayItems: displayItems\n      });\n\n      console.log(inputData);\n    };\n\n    _this.setStateCustom = function (inputData) {\n      console.log(inputData);\n    };\n\n    _this.getIndeces = function (businesses) {\n      var indeces = [];\n\n      if (businesses.length < 3) {\n        indeces.push(0, 1);\n      } else {\n        while (indeces.length < 3) {\n          var number = Math.floor(Math.random() * Math.floor(businesses.length));\n\n          if (!indeces.includes(number)) {\n            indeces.push(number);\n          }\n        }\n\n        ;\n      }\n\n      return indeces;\n    };\n\n    _this.randomPicks = function (array) {\n      var results = _this.getIndeces(array).map(function (el) {\n        return array[el];\n      });\n\n      return results;\n    };\n\n    return _this;\n  }\n\n  _createClass(ResultList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // if (this.props.isCustom) {\n      //   this.setStateCustom(this.props.data);\n      // } else {\n      //   this.setStateRandom(this.props.data);\n      // }\n      //this.setState({ data: this.props.data });\n      console.log('result list rendering');\n    } // returns 3 random indeces depending on input array length\n\n  }, {\n    key: \"render\",\n    // setInitialStates(inputData) {\n    //   let displayItems = [];\n    //   let data = [];\n    //   if (this.props.data.length < 3) {\n    //     displayItems = inputData;\n    //   } else {\n    //     if(this.props.randomSorting) {\n    //       displayItems = this.randomPicks();\n    //     } else {\n    //       for (let i=0; i<3; i++) {\n    //         displayItems.push(inputData[i]);\n    //       }\n    //     }\n    //     data = inputData.filter(el => displayItems.includes(el) === false);\n    //   }\n    //   displayItems = inputData;\n    //   console.log('SETTING INITIAL STATES')\n    //   //this.setState({ data });\n    //   this.setState({ displayItems }); \n    // }\n    // removeItem = (passedIndex) => {\n    //   // update display items by deleting clicked item\n    //   let newDisplayItems = this.state.displayItems.filter((el, index) => passedIndex !== index);\n    //   // copy state\n    //   let newState = [...this.state.data];\n    //   let newItem;\n    //   // if random mode is selected\n    //   if (this.props.randomSorting) {\n    //     // select random item from new state and save it to new item\n    //     newItem = newState[this.getIndeces(newState)[0]];\n    //     // update new state, filtering out the new item\n    //     newState = newState.filter(el => newItem.name !== el.name);\n    //   } else {\n    //     // save value of removed item from array with shift\n    //     newItem = newState.shift();\n    //   }\n    //   if (newItem !== undefined) {\n    //     newDisplayItems.push(newItem);\n    //   }\n    //   this.setState({ data: newState });\n    //   this.setState({ displayItems: newDisplayItems });\n    // }\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return console.log(_this2.state);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"GET STATE FROM RESULT LIST\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, this.state.data.length === 0 ? // ADD NO BUSINESSES COMPONENT\n      React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"There are no businesses\") : // ELSE RETURN DISPLAY ITEMS\n      this.state.data.map(function (el, index) {\n        // return <li key={index} onClick={() => this.removeItem(index)}>{el.name}</li>\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, el.name);\n      })));\n    }\n  }]);\n\n  return ResultList;\n}(Component);\n\n;\nexport default ResultList;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/ResultList.js"],"names":["React","Component","ResultList","state","data","props","displayItems","setStateRandom","inputData","length","randomPicks","filter","el","includes","setState","console","log","setStateCustom","getIndeces","businesses","indeces","push","number","Math","floor","random","array","results","map","index","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n\n// FIRST GET INPUT DATA 3 DISPLAY ITEMS AND EVERYTHING ELSE AS DATA\n  // IF IS RANDOM MODE GET 3 \n\n\n\n// NO TERM && cualquier criterio menos random\n// RETURN LOS PRIMEROS 3 DE ARRAY DE RESPUESTA\n\n// NO TERM && random\n// RETURN RANDOM 3 ITEMS\n\n// 1 TERM && cualquier criterio menos random\n// RETURN LOS PRIMERO 3 DE ARRAY DE RESPUESTA\n\n// 1 TERM && random\n// RETURN RANDOM 3 ITEMS\n\n// 2 TERM && cualquier criterio menos random\n// RETURN EL PRIMERO DE 1 Y LOS PRIMEROS 2 DE OTRO (cual tiene 1 y cual 2 luego se define)\n\n// 2 TERM && random\n// RETURN RANDOM 1 DE 1 Y 2 RANDOM DE OTRO\n\n// 3 TERM && cualquier criterio menos random\n// RETURN el primero de cada term\n\n// 3 TERM && random \n// RETURN y \n\nclass ResultList extends Component {\n  state = {\n    data: this.props.data,\n    displayItems: []\n  }\n\n  setStateRandom = (inputData) => {\n    let displayItems = [];\n    let data = [];\n\n    if (inputData.length <= 3) {\n      displayItems = inputData;\n    } else {\n      displayItems = this.randomPicks(inputData);\n      data = inputData.filter(el => displayItems.includes(el) === false);\n    }\n\n    this.setState({ data });\n    this.setState({ displayItems });\n    console.log(inputData);\n  }\n\n  setStateCustom = (inputData) => {\n    console.log(inputData);\n  }\n\n  \n  componentDidMount() {\n    // if (this.props.isCustom) {\n    //   this.setStateCustom(this.props.data);\n    // } else {\n    //   this.setStateRandom(this.props.data);\n    // }\n    //this.setState({ data: this.props.data });\n\n    console.log('result list rendering');\n  }\n\n\n\n\n\n\n\n\n  \n\n  // returns 3 random indeces depending on input array length\n  getIndeces = (businesses) => {\n    let indeces = [];\n    if (businesses.length < 3) {\n      indeces.push(0, 1);\n    } else {\n      while (indeces.length < 3) {\n        let number = Math.floor(Math.random() * Math.floor(businesses.length));\n        if (!indeces.includes(number)) {\n          indeces.push(number);\n        }\n      };\n    }\n    return indeces;\n  }\n\n  // returns 3 random array items using get indeces function\n  randomPicks = (array) => {\n    let results = this.getIndeces(array).map(el => {\n      return array[el];\n    })\n    return results;\n  }\n\n\n  // setInitialStates(inputData) {\n  //   let displayItems = [];\n  //   let data = [];\n\n  //   if (this.props.data.length < 3) {\n  //     displayItems = inputData;\n  //   } else {\n\n  //     if(this.props.randomSorting) {\n  //       displayItems = this.randomPicks();\n  //     } else {\n  //       for (let i=0; i<3; i++) {\n  //         displayItems.push(inputData[i]);\n  //       }\n  //     }\n  //     data = inputData.filter(el => displayItems.includes(el) === false);\n  //   }\n\n  //   displayItems = inputData;\n  //   console.log('SETTING INITIAL STATES')\n  //   //this.setState({ data });\n  //   this.setState({ displayItems }); \n  // }\n\n\n  // removeItem = (passedIndex) => {\n  //   // update display items by deleting clicked item\n  //   let newDisplayItems = this.state.displayItems.filter((el, index) => passedIndex !== index);\n  //   // copy state\n  //   let newState = [...this.state.data];\n  //   let newItem;\n  //   // if random mode is selected\n  //   if (this.props.randomSorting) {\n  //     // select random item from new state and save it to new item\n  //     newItem = newState[this.getIndeces(newState)[0]];\n  //     // update new state, filtering out the new item\n  //     newState = newState.filter(el => newItem.name !== el.name);\n  //   } else {\n  //     // save value of removed item from array with shift\n  //     newItem = newState.shift();\n  //   }\n\n  //   if (newItem !== undefined) {\n  //     newDisplayItems.push(newItem);\n  //   }\n    \n  //   this.setState({ data: newState });\n  //   this.setState({ displayItems: newDisplayItems });\n  // }\n\n\n  render() {\n    return (\n      <div>\n        <button onClick={() => console.log(this.state)}>GET STATE FROM RESULT LIST</button>\n      <ul>\n        {\n          this.state.data.length === 0 ?\n          // ADD NO BUSINESSES COMPONENT\n          <h1>There are no businesses</h1> :\n          // ELSE RETURN DISPLAY ITEMS\n          this.state.data.map((el, index) => {\n            // return <li key={index} onClick={() => this.removeItem(index)}>{el.name}</li>\n            return <li key={index}>{el.name}</li>\n          })\n        }\n      </ul>\n      </div>\n    );\n  }\n};\n\nexport default ResultList;"]},"metadata":{},"sourceType":"module"}