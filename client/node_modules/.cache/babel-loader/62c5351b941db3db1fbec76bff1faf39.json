{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { forwardRef, useContext, useState } from 'react';\nimport { ThemeContext } from 'styled-components';\nimport { defaultProps } from '../../default-props';\nimport { Box } from '../Box';\nimport { TabsContext } from './TabsContext';\nimport { StyledTabPanel, StyledTabs, StyledTabsHeader } from './StyledTabs';\nimport { normalizeColor } from '../../utils';\nvar Tabs = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var alignControls = _ref.alignControls,\n      children = _ref.children,\n      flex = _ref.flex,\n      _ref$justify = _ref.justify,\n      justify = _ref$justify === void 0 ? 'center' : _ref$justify,\n      _ref$messages = _ref.messages,\n      messages = _ref$messages === void 0 ? {\n    tabContents: 'Tab Contents'\n  } : _ref$messages,\n      _ref$responsive = _ref.responsive,\n      responsive = _ref$responsive === void 0 ? true : _ref$responsive,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"alignControls\", \"children\", \"flex\", \"justify\", \"messages\", \"responsive\"]);\n\n  var theme = useContext(ThemeContext) || defaultProps.theme;\n  var propsActiveIndex = rest.activeIndex,\n      onActive = rest.onActive;\n\n  var _useState = useState(rest.activeIndex || 0),\n      activeIndex = _useState[0],\n      setActiveIndex = _useState[1];\n\n  var _useState2 = useState(),\n      activeContent = _useState2[0],\n      setActiveContent = _useState2[1];\n\n  var _useState3 = useState(),\n      activeTitle = _useState3[0],\n      setActiveTitle = _useState3[1];\n\n  if (activeIndex !== propsActiveIndex && propsActiveIndex !== undefined) {\n    setActiveIndex(propsActiveIndex);\n  }\n\n  var activateTab = function activateTab(index) {\n    if (propsActiveIndex === undefined) {\n      setActiveIndex(index);\n    }\n\n    if (onActive) {\n      onActive(index);\n    }\n  };\n  /* eslint-disable no-param-reassign */\n\n\n  delete rest.activeIndex;\n  delete rest.onActive;\n  /* eslint-enable no-param-reassign */\n\n  var tabs = React.Children.map(children, function (child, index) {\n    return /*#__PURE__*/React.createElement(TabsContext.Provider, {\n      value: {\n        activeIndex: activeIndex,\n        active: activeIndex === index,\n        onActivate: function onActivate() {\n          return activateTab(index);\n        },\n        setActiveContent: setActiveContent,\n        setActiveTitle: setActiveTitle\n      }\n    }, child ?\n    /*#__PURE__*/\n    // cloneElement is needed for backward compatibility with custom\n    // styled components that rely on props.active. We should reassess\n    // if it is still necessary in our next major release.\n    React.cloneElement(child, {\n      active: activeIndex === index\n    }) : child);\n  });\n  var tabsHeaderStyles = {};\n\n  if (theme.tabs.header && theme.tabs.header.border) {\n    var borderColor = theme.tabs.header.border.color || theme.global.control.border.color;\n    borderColor = normalizeColor(borderColor, theme);\n    tabsHeaderStyles.border = {\n      side: theme.tabs.header.border.side,\n      size: theme.tabs.header.border.size,\n      style: theme.tabs.header.border.style,\n      color: borderColor\n    };\n  }\n\n  var tabContentTitle = (activeTitle || '') + \" \" + messages.tabContents;\n  return /*#__PURE__*/React.createElement(StyledTabs, _extends({\n    ref: ref,\n    as: Box,\n    role: \"tablist\",\n    flex: flex,\n    responsive: responsive\n  }, rest, {\n    background: theme.tabs.background\n  }), /*#__PURE__*/React.createElement(StyledTabsHeader, _extends({\n    as: Box,\n    direction: \"row\",\n    justify: justify,\n    alignSelf: alignControls,\n    flex: false,\n    wrap: true,\n    background: theme.tabs.header.background,\n    gap: theme.tabs.gap\n  }, tabsHeaderStyles), tabs), /*#__PURE__*/React.createElement(StyledTabPanel, {\n    flex: flex,\n    \"aria-label\": tabContentTitle,\n    role: \"tabpanel\"\n  }, activeContent));\n});\nTabs.displayName = 'Tabs';\nvar TabsDoc;\n\nif (process.env.NODE_ENV !== 'production') {\n  TabsDoc = require('./doc').doc(Tabs); // eslint-disable-line global-require\n}\n\nvar TabsWrapper = TabsDoc || Tabs;\nexport { TabsWrapper as Tabs };","map":null,"metadata":{},"sourceType":"module"}