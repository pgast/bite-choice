{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Pablo/Documents/React/bitechoice/v1/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/CustomView.js\";\nimport React, { Component } from 'react';\nimport ListItem from './ListItem';\n\nvar CustomView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CustomView, _Component);\n\n  function CustomView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CustomView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CustomView)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: [],\n      picks: [],\n      term: '',\n      sortBy: 'best_match',\n      distance: ''\n    };\n\n    _this.searchTerm =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var response, businesses;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return fetch('/search', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    term: _this.state.term,\n                    sort_by: _this.state.sortBy,\n                    radius: _this.state.distance\n                  })\n                });\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.json();\n\n              case 6:\n                businesses = _context.sent;\n\n                _this.setState({\n                  data: businesses.businesses\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        term: e.target.value\n      });\n    };\n\n    _this.sorting = function (e) {\n      _this.setState({\n        sortBy: e.target.value\n      });\n    };\n\n    _this.setDistance = function (e) {\n      _this.setState({\n        distance: e.target.value\n      });\n    };\n\n    _this.logState = function (e) {\n      e.preventDefault();\n      console.log('[ LOGGING STATE ]');\n      console.log(_this.state);\n    };\n\n    return _this;\n  }\n\n  _createClass(CustomView, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Custom View\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Test backend fetching\")), React.createElement(\"button\", {\n        onClick: this.logState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Console log component state\")), \"FUNCION DE ON SUBMIT QUE AGARRE LOS VALORES - NO VARIAS FUNCIONES\", React.createElement(\"form\", {\n        onSubmit: this.searchTerm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Name:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.term,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Sort by:\", React.createElement(\"select\", {\n        value: this.state.sortBy,\n        onChange: this.sorting,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"best_match\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Best Match\"), React.createElement(\"option\", {\n        value: \"rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Rating\"), React.createElement(\"option\", {\n        value: \"review_count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Review Count\"), React.createElement(\"option\", {\n        value: \"distance\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Distance\"))), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Distance en KMs:\", React.createElement(\"input\", {\n        type: \"number\",\n        value: this.state.distance,\n        onChange: this.setDistance,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), this.state.picks.map(function (el, index) {\n        return React.createElement(ListItem, {\n          key: index,\n          item: el,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return CustomView;\n}(Component);\n\n;\nexport default CustomView;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/CustomView.js"],"names":["React","Component","ListItem","CustomView","state","data","picks","term","sortBy","distance","searchTerm","e","preventDefault","fetch","method","headers","body","JSON","stringify","sort_by","radius","response","json","businesses","setState","handleChange","target","value","sorting","setDistance","logState","console","log","map","el","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ListItem from './ListItem';\n\nclass CustomView extends Component {\n  state = {\n    data: [],\n    picks: [],\n    term: '',\n    sortBy:'best_match',\n    distance: ''\n  };\n\n  // GET REQUEST WITH TERM\n  searchTerm = async e => {\n    e.preventDefault();\n    const response = await fetch('/search', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ \n        term: this.state.term,\n        sort_by: this.state.sortBy,\n        radius: this.state.distance\n      })\n    });\n    const businesses = await response.json();\n    this.setState({ data: businesses.businesses });\n  };\n\n  // HANDLE INPUT CHANGE UPDATING STATE\n  handleChange = e => {\n    this.setState({ term: e.target.value });\n  };\n\n  // HANDLE TYPE OF SORTING\n  sorting = e => {\n    this.setState({ sortBy: e.target.value });\n  };\n\n  // HANDLE DISTANCE SETTING STATE\n  setDistance = e => {\n    this.setState({ distance: e.target.value });\n  };\n\n  logState = (e) => {\n    e.preventDefault();\n    console.log('[ LOGGING STATE ]');\n    console.log(this.state);\n  };\n\n\n  render() {\n    return (\n      <div>\n        <h1>Custom View</h1>\n\n        <form>\n          <p>\n            <strong>Test backend fetching</strong>\n          </p>\n          <button onClick={this.logState}>Console log component state</button>\n        </form>\n\n        FUNCION DE ON SUBMIT QUE AGARRE LOS VALORES - NO VARIAS FUNCIONES\n        <form onSubmit={this.searchTerm}>\n          <label>\n            Name:\n            <input type=\"text\" value={this.state.term} onChange={this.handleChange} />\n          </label>\n\n          <label>\n            Sort by:\n            <select value={this.state.sortBy} onChange={this.sorting} >\n              <option value=\"best_match\">Best Match</option>\n              <option value=\"rating\">Rating</option>\n              <option value=\"review_count\">Review Count</option>\n              <option value=\"distance\">Distance</option>\n            </select>\n          </label>\n\n          <label>\n            Distance en KMs:\n            <input type=\"number\" value={this.state.distance} onChange={this.setDistance} />\n          </label>\n\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n\n        {/* <ul>\n          {this.state.data.length > 0 || this.state.data === undefined\n            ? \n              this.state.data.map((item, index) => {\n                return (\n                  <li key={index}><ListItem item={item} /></li>\n                )\n              })\n            :\n              null\n          }\n        </ul> */}\n\n        {\n          this.state.picks.map((el, index) => {\n            return <ListItem key={index} item={el} />\n          })\n        }\n\n      </div>\n    );\n  };\n};\n\nexport default CustomView;"]},"metadata":{},"sourceType":"module"}