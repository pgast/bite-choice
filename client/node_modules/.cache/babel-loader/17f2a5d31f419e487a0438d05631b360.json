{"ast":null,"code":"import _slicedToArray from \"/Users/Pablo/Documents/React/bitechoice/v4/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v4/client/src/components/Landing.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Box, Heading, TextInput, Button, ThemeContext } from 'grommet';\nimport { FormSearch } from 'grommet-icons';\n\nvar landing = function landing(_ref) {\n  var location = _ref.location,\n      fetchSuccess = _ref.fetchSuccess;\n\n  var _useState = useState(location),\n      _useState2 = _slicedToArray(_useState, 2),\n      locationInput = _useState2[0],\n      setLocation = _useState2[1];\n\n  useEffect(function () {\n    setLocation(location);\n  }, [location]); // dispatch to state new location (if typed)\n\n  return React.createElement(Box, {\n    pad: {\n      \"left\": \"small\",\n      \"right\": \"small\"\n    },\n    animation: \"fadeIn\",\n    justify: \"center\",\n    align: \"center\",\n    height: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, fetchSuccess || fetchSuccess === '' ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    textAlign: \"center\",\n    color: \"dark-1\",\n    margin: \"none\",\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Where to eat in\"), React.createElement(ThemeContext.Extend, {\n    value: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    value: locationInput,\n    size: \"large\",\n    plain: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))) : React.createElement(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"unable to fetch\"));\n};\n\nexport default landing;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v4/client/src/components/Landing.js"],"names":["React","useState","useEffect","Box","Heading","TextInput","Button","ThemeContext","FormSearch","landing","location","fetchSuccess","locationInput","setLocation"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,YAA1C,QAA8D,SAA9D;AACA,SAASC,UAAT,QAA2B,eAA3B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAgC;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAAA,kBACTV,QAAQ,CAACS,QAAD,CADC;AAAA;AAAA,MACvCE,aADuC;AAAA,MACxBC,WADwB;;AAE9CX,EAAAA,SAAS,CAAC,YAAM;AAAEW,IAAAA,WAAW,CAACH,QAAD,CAAX;AAAuB,GAAhC,EAAkC,CAACA,QAAD,CAAlC,CAAT,CAF8C,CAG9C;;AAEA,SACE,oBAAC,GAAD;AACE,IAAA,GAAG,EAAE;AAAE,cAAQ,OAAV;AAAmB,eAAS;AAA5B,KADP;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,OAAO,EAAC,QAHV;AAIE,IAAA,KAAK,EAAC,QAJR;AAKE,IAAA,MAAM,EAAC,MALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGC,YAAY,IAAIA,YAAY,KAAK,EAAjC,GAEG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,KAAK,EAAC,QAFR;AAGE,IAAA,MAAM,EAAC,MAHT;AAIE,IAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAYE,oBAAC,YAAD,CAAc,MAAd;AAAqB,IAAA,KAAK,EAAE,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEC,aADT;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,MAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZF,CAFH,GA8CG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAtDN,CADF;AA6DD,CAlED;;AAoEA,eAAeH,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Box, Heading, TextInput, Button, ThemeContext } from 'grommet';\nimport { FormSearch } from 'grommet-icons';\n\nconst landing = ({ location, fetchSuccess }) => {\n  const [locationInput, setLocation] = useState(location);\n  useEffect(() => { setLocation(location) }, [location]);\n  // dispatch to state new location (if typed)\n\n  return (\n    <Box \n      pad={{ \"left\": \"small\", \"right\": \"small\" }} \n      animation=\"fadeIn\"\n      justify=\"center\" \n      align=\"center\" \n      height=\"100%\"\n    >\n      {/* fetchSuccess || fetchSuccess === '' */}\n      {fetchSuccess || fetchSuccess === '' ? \n        (\n          <React.Fragment>\n            <Heading \n              textAlign=\"center\" \n              color=\"dark-1\" \n              margin=\"none\"\n              size=\"small\"\n            >\n              Where to eat in\n            </Heading>\n            {/* <Heading color=\"status-warning\" margin=\"none\" size=\"large\">\n              {location}\n            </Heading> */}\n            <ThemeContext.Extend value={{}}>\n              <TextInput \n                value={locationInput}\n                size=\"large\"\n                plain\n              />\n            </ThemeContext.Extend>\n\n\n\n\n\n\n\n            {/* <Box>\n              <ThemeContext.Extend value={{}}>\n                <TextInput \n                  placeholder=\"e.g. Pizza, Tacos, Bar\" \n                  size=\"small\"\n                  plain\n                />\n              </ThemeContext.Extend>\n              <Button \n                color=\"status-warning\"\n                icon={<FormSearch />}\n                alignSelf=\"center\"\n                primary\n              />\n            </Box> */} \n          </React.Fragment>\n        )\n        : (\n          <Heading>unable to fetch</Heading>\n        )\n      }\n\n    </Box>\n  )\n}\n\nexport default landing;"]},"metadata":{},"sourceType":"module"}