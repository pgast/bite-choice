{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/RandomView.js\";\n\nimport React, { useContext, useEffect } from 'react';\nimport ResultView from './ResultView';\nimport { Store } from '../Store'; // LOGIC COMPONENT THAT FETCHES DATA IN RANDOM MODE AND PASSES DATA TO RESULT VIEW\n\nvar randomView = function randomView() {\n  var _useContext = useContext(Store),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  useEffect(function () {\n    return console.log('mounted');\n  }, []);\n\n  var fetchRandomData = function fetchRandomData() {\n    return dispatch({\n      type: 'FETCH_RANDOM_DATA'\n    });\n  }; // THIS LOGIC TO THE STORE FILE\n  // getBusinesses = async () => {\n  //   const response = await fetch('/getRandom');\n  //   const businesses = await response.json();\n  //   this.setState({ data: businesses.businesses });\n  // };\n  // USE COMPONENT ID MOUNT EQUIVALENT WITH HOOKS\n  // componentDidMount () {\n  //   this.getBusinesses();\n  // };\n\n\n  return React.createElement(ResultView, {\n    location: _this.props.location,\n    data: state.data,\n    isCustom: false,\n    randomSorting: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n};\n\nexport default randomView;","map":{"version":3,"sources":["/Users/Pablo/Documents/React/bitechoice/v1/client/src/components/RandomView.js"],"names":["React","useContext","useEffect","ResultView","Store","randomView","state","dispatch","console","log","fetchRandomData","type","props","location","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,KAAT,QAAsB,UAAtB,C,CAEA;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA,oBACKJ,UAAU,CAACG,KAAD,CADf;AAAA,MACfE,KADe,eACfA,KADe;AAAA,MACRC,QADQ,eACRA,QADQ;;AAEvBL,EAAAA,SAAS,CAAC;AAAA,WAAMM,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAN;AAAA,GAAD,EAA+B,EAA/B,CAAT;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,WAAOH,QAAQ,CAAE;AACfI,MAAAA,IAAI,EAAE;AADS,KAAF,CAAf;AAGD,GAJD,CAJuB,CAUvB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGA,SACE,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAE,KAAI,CAACC,KAAL,CAAWC,QADvB;AAEE,IAAA,IAAI,EAAEP,KAAK,CAACQ,IAFd;AAGE,IAAA,QAAQ,EAAE,KAHZ;AAIE,IAAA,aAAa,EAAE,IAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD,CA/BD;;AAiCA,eAAeT,UAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport ResultView from './ResultView';\nimport { Store } from '../Store';\n\n// LOGIC COMPONENT THAT FETCHES DATA IN RANDOM MODE AND PASSES DATA TO RESULT VIEW\n\nconst randomView = () => {\n  const { state, dispatch } = useContext(Store);\n  useEffect(() => console.log('mounted'), []);\n\n  const fetchRandomData = () => {\n    return dispatch ({\n      type: 'FETCH_RANDOM_DATA',\n    });\n  };\n\n  // THIS LOGIC TO THE STORE FILE\n  // getBusinesses = async () => {\n  //   const response = await fetch('/getRandom');\n  //   const businesses = await response.json();\n  //   this.setState({ data: businesses.businesses });\n  // };\n\n  // USE COMPONENT ID MOUNT EQUIVALENT WITH HOOKS\n  // componentDidMount () {\n  //   this.getBusinesses();\n  // };\n\n\n  return (\n    <ResultView \n      location={this.props.location} \n      data={state.data} \n      isCustom={false} \n      randomSorting={true}\n    />\n  );\n};\n\nexport default randomView;\n\n\n"]},"metadata":{},"sourceType":"module"}