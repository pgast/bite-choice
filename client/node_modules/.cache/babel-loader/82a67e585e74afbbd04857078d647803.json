{"ast":null,"code":"import { rgba } from 'polished';\nimport styled, { css } from 'styled-components';\nimport { focusStyle, normalizeColor, parseMetricToNum } from '../../utils';\nimport { defaultProps } from '../../default-props'; // opacity of the bound trumps the track opacity\n\nvar getBoundOpacity = function getBoundOpacity(props, bound) {\n  return props.theme.rangeInput && props.theme.rangeInput.track && props.theme.rangeInput.track[bound] && props.theme.rangeInput.track[bound].opacity ? props.theme.rangeInput.track[bound].opacity : 1;\n};\n\nvar getBoundColor = function getBoundColor(props, bound) {\n  if (props.theme.rangeInput && props.theme.rangeInput.track && props.theme.rangeInput.track[bound] && props.theme.rangeInput.track[bound].color) {\n    return rgba(normalizeColor(props.theme.rangeInput.track[bound].color, props.theme), getBoundOpacity(props, bound));\n  } // If bound color is undefined pick the default track color with bound opacity\n\n\n  return rgba(normalizeColor(props.theme.rangeInput.track.color, props.theme), getBoundOpacity(props, bound));\n};\n\nvar trackColorStyle = function trackColorStyle(props) {\n  // backward compatibility in case no bounds are defined\n  if (props.theme.rangeInput && props.theme.rangeInput.track && !props.theme.rangeInput.track.lower && !props.theme.rangeInput.track.upper) {\n    var color = rgba(normalizeColor(props.theme.rangeInput.track.color, props.theme), 0.2); // Since the track color was changed from border-with-opacity to just border\n    // this condition is used to make sure we are applying the opacity correctly\n    // for 'border' color (for backward compatibility purposes).\n\n    if (color === 'rgba(0,0,0,0.2)') return \"background: \" + color; // no bounds are defined but color may have changed\n\n    return \"background: \" + rgba(normalizeColor(props.theme.rangeInput.track.color, props.theme), props.theme.rangeInput.track.opacity || 1);\n  }\n\n  var max = props.max || 100; // 'max' defaults to 100 in case not specified\n\n  var min = props.min || 0; // 'min' defaults to 0 in case not specified\n\n  var thumbPosition = (props.value - min) / (max - min) * 100 + \"%\";\n  var lowerTrackColor = getBoundColor(props, 'lower');\n  var upperTrackColor = getBoundColor(props, 'upper');\n  return \"background: linear-gradient(\\n      to right,\\n      \" + lowerTrackColor + \",\\n      \" + lowerTrackColor + \" \" + thumbPosition + \",\\n      \" + upperTrackColor + \" \" + thumbPosition + \",\\n      \" + upperTrackColor + \"\\n    );\\n  \";\n};\n\nvar rangeTrackStyle = css([\"box-sizing:border-box;width:100%;height:\", \";\", \";\", \"\"], function (props) {\n  return props.theme.rangeInput.track.height;\n}, function (props) {\n  return trackColorStyle(props);\n}, function (props) {\n  return props.theme.rangeInput && props.theme.rangeInput.track && props.theme.rangeInput.track.extend;\n});\nvar rangeThumbStyle = css([\"box-sizing:border-box;position:relative;border-radius:\", \";height:\", \";width:\", \";overflow:visible;background:\", \";-webkit-appearance:none;cursor:pointer;\", \"\"], function (props) {\n  return props.theme.global.spacing;\n}, function (props) {\n  return props.theme.global.spacing;\n}, function (props) {\n  return props.theme.global.spacing;\n}, function (props) {\n  return normalizeColor(props.theme.rangeInput.thumb.color || 'control', props.theme);\n}, function (props) {\n  return props.theme.rangeInput && props.theme.rangeInput.thumb && props.theme.rangeInput.thumb.extend;\n});\nvar firefoxMicrosoftThumbStyle = css([\"\", \" margin-top:0px;height:\", \";width:\", \";\", \"\"], rangeThumbStyle, function (props) {\n  return props.theme.global.spacing;\n}, function (props) {\n  return props.theme.global.spacing;\n}, function (props) {\n  return props.theme.rangeInput && props.theme.rangeInput.thumb && props.theme.rangeInput.thumb.extend;\n});\n/* eslint-disable max-len */\n\nvar StyledRangeInput = styled.input.withConfig({\n  displayName: \"StyledRangeInput\",\n  componentId: \"sc-15st9ck-0\"\n})([\"box-sizing:border-box;position:relative;-webkit-appearance:none;border-color:transparent;height:\", \";width:100%;padding:0px;cursor:pointer;background:transparent;&::-moz-focus-inner{border:none;}&::-moz-focus-outer{border:none;}&::-webkit-slider-runnable-track{\", \"}&::-webkit-slider-thumb{margin-top:-\", \"px;\", \" \", \"}&::-moz-range-track{\", \"}&::-moz-range-thumb{\", \"}&::-ms-thumb{\", \"}\", \" &::-ms-track{\", \" border-color:transparent;color:transparent;}&::-ms-fill-lower{\", \";border-color:transparent;}&::-ms-fill-upper{\", \";border-color:transparent;}\", \" \", \"\"], function (props) {\n  return props.theme.global.spacing;\n}, rangeTrackStyle, function (props) {\n  return (parseMetricToNum(props.theme.global.spacing) - parseMetricToNum(props.theme.rangeInput.track.height || 0)) * 0.5;\n}, rangeThumbStyle, function (props) {\n  return !props.disabled && css([\"&:hover{box-shadow:0px 0px 0px 2px \", \";}\"], normalizeColor(props.theme.rangeInput.thumb.color || 'control', props.theme));\n}, rangeTrackStyle, firefoxMicrosoftThumbStyle, firefoxMicrosoftThumbStyle, function (props) {\n  return !props.disabled && css([\"&:hover::-moz-range-thumb{box-shadow:0px 0px 0px 2px \", \";}&:hover::-ms-thumb{box-shadow:0px 0px 0px 2px \", \";}\"], normalizeColor(props.theme.rangeInput.thumb.color || 'control', props.theme), normalizeColor(props.theme.rangeInput.thumb.color || 'control', props.theme));\n}, rangeTrackStyle, function (props) {\n  return trackColorStyle(props, 'lower');\n}, function (props) {\n  return trackColorStyle(props, 'upper');\n}, function (props) {\n  return props.focus && focusStyle();\n}, function (props) {\n  return props.theme.rangeInput && props.theme.rangeInput.extend;\n});\n/* eslint-enable max-len */\n\nStyledRangeInput.defaultProps = {};\nObject.setPrototypeOf(StyledRangeInput.defaultProps, defaultProps);\nexport { StyledRangeInput };","map":null,"metadata":{},"sourceType":"module"}