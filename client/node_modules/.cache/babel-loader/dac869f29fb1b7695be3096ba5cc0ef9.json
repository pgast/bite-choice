{"ast":null,"code":"export var normalizeValues = function normalizeValues(values) {\n  return (values || []).map(function (value, index) {\n    if (value === undefined) return {\n      value: [index, undefined]\n    };\n    if (typeof value === 'number') return {\n      value: [index, value]\n    };\n    if (Array.isArray(value)) return {\n      value: value\n    };\n    return value;\n  });\n};\nexport var normalizeBounds = function normalizeBounds(bounds, values) {\n  var result = bounds;\n\n  if (!result) {\n    result = [[0, 1], [0, 1]];\n    (values || []).forEach(function (value) {\n      if (value.value[0] !== undefined) {\n        result[0][0] = Math.min(result[0][0], value.value[0]);\n        result[0][1] = Math.max(result[0][1], value.value[0]);\n      }\n\n      if (value.value[1] !== undefined) {\n        result[1][0] = Math.min(result[1][0], value.value[1]);\n        result[1][1] = Math.max(result[1][1], value.value[1]);\n      }\n\n      if (value.value[2] !== undefined) {\n        result[1][0] = Math.min(result[1][0], value.value[2]);\n        result[1][1] = Math.max(result[1][1], value.value[2]);\n      }\n    });\n  }\n\n  return result;\n};\nexport var areNormalizedValuesEquals = function areNormalizedValuesEquals(valuesX, valuesY) {\n  console.warn(\"This function will be removed in the upcoming releases.\\nPlease get in touch with us if you have concerns.\");\n  if (!valuesX || !valuesY) return false;\n  if (valuesX.length !== valuesY.length) return false;\n  if (valuesX.length === 0) return true;\n  if (!valuesX[0].value || !valuesY[0].value) return false;\n  return valuesX.every(function (_, i) {\n    return valuesX[i].value.every(function (value, index) {\n      return value === valuesY[i].value[index];\n    });\n  });\n};\nexport var areNormalizedBoundsEquals = function areNormalizedBoundsEquals(boundsX, boundsY) {\n  console.warn(\"This function will be removed in the upcoming releases.\\nPlease get in touch with us if you have concerns.\");\n  if (!boundsX || !boundsY) return false;\n  if (boundsX.length !== boundsY.length || !(boundsX.length > 0)) return false;\n  return boundsX.every(function (_, i) {\n    return boundsX[i].every(function (value, index) {\n      return value === boundsY[i][index];\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"module"}