{"version":3,"sources":["serviceWorker.js","Store.js","components/ResultHeader.js","components/ErrorScreen.js","components/ChoiceView.js","components/ListItem.js","components/ResultList.js","components/ResultView.js","components/CustomForm.js","components/CustomView.js","components/RandomView.js","components/Landing.js","components/MainView.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","customView","resultsMode","searchTerms","sortBy","data","ui","inputLocation","searchTerm","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","term","sort_by","newLocation","response","businesses","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","arguments","fetchData","_ref2","_callee2","searchInputs","sorting","termOne","termTwo","termThree","result","dataOne","dataTwo","dataThree","_context2","Math","floor","random","length","undefined","push","_x4","fetchRandomData","_ref3","_callee3","_context3","status","_x5","reducer","state","action","customViewCopy","objectSpread","type","payload","Store","createContext","resultHeader","customSearchData","toggleCustomForm","isCustom","toggleUi","react_default","createElement","Fragment","Box","pad","left","right","alignContent","background","justify","direction","align","height","width","Anchor","onClick","margin","top","icon","Previous","color","size","Text","weight","alignSelf","textAlign","gap","map","el","index","bottom","round","key","errorScreen","error","Alert","Heading","choiceView","item","level","name","categories","title","address1","opacity","href","url","target","label","primary","Button","ListItem","removeItem","hasOwnProperty","resultList","randomSorting","customSearchTerms","_useState","useState","_useState2","slicedToArray","displayItems","setDisplayItems","_useState3","_useState4","setBusinesses","useEffect","setStatesCustom","setStatesFromArray","getIndeces","indeces","number","includes","randomPicks","array","inputData","setStatesFromTerms","newData","newDisplayItems","allResults","j","forEach","toConsumableArray","every","shift","_ref4","i","indexOf","splice","components_ListItem","passedIndex","newItem","filter","newState","newEntry","pickedArray","Cafeteria","ErrorScreen","ChoiceView","resultView","ResultHeader","ResultList","style","alignItems","fontWeight","fontSize","textDecoration","customForm","setSearchTerms","setSortBy","_useState5","_useState6","currentTerm","setCurrentTerm","dispatch","useContext","animation","ThemeContext","Extend","value","formField","horizontal","vertical","border","select","icons","FormField","Select","options","onChange","option","plain","TextInput","e","placeholder","disabled","newTerms","addTerm","inputIndex","newSearchTerms","inx","removeTerm","FormClose","preventDefault","submitSearchTerms","ResultView","CustomForm","randomView","landing","fetchSuccess","locationInput","_useContext","global","focus","textInput","extend","truncate","charAt","toUpperCase","substring","focusIndicator","Map","mainView","setLocationInput","validUserLocation","toggleLocationInputView","input","validBtn","Landing","CustomView","RandomView","App","_this2","Request","get","body","JSON","parse","setState","console","dir","city","Grommet","MainView","Component","ReactDOM","render","props","_useReducer","useReducer","_useReducer2","Provider","children","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2b727d4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useReducer, createContext } from \"react\";\n\nconst initialState = {\n  customView: {\n    resultsMode: false,\n    searchTerms: [],\n    sortBy: 'Best Match'\n  },\n  data: [],\n  ui: 'landing',\n  inputLocation: ''\n}\n\nconst randomSorting = () => {\n  const criteria = ['best_match', 'rating', 'review_count'];\n  return criteria[Math.floor(Math.random() * 4)];\n};\n\nconst searchTerm = async (term, sort_by, newLocation) => {\n    const response = await fetch(`/search/${term}/${sort_by}/${newLocation}`);\n    const businesses = await response.json();\n    return businesses.businesses;\n  };\n\nconst fetchData = async (searchInputs) => {\n  const { sortBy, searchTerms, location } = searchInputs;\n  const sorting = sortBy === 'random' ? randomSorting() : sortBy\n\n  if (searchTerms.length === 0) {\n    const data = await searchTerm(null, sorting, location);\n    return data;\n  } else { \n    const termOne = searchTerms[0] !== undefined ? searchTerms[0] : null; \n    const termTwo = searchTerms[1] !== undefined ? searchTerms[1] : null; \n    const termThree = searchTerms[2] !== undefined ? searchTerms[2] : null; \n\n    let result = [];\n    let dataOne = [];\n    let dataTwo = [];\n    let dataThree = [];\n\n    if (termOne !== null) { dataOne = await searchTerm(termOne, sorting, location) };\n    if (termTwo !== null) { dataTwo = await searchTerm(termTwo, sorting, location) };\n    if (termThree !== null) { dataThree = await searchTerm(termThree, sorting, location) };\n\n    // ERROR CATCHER WRONG DATA\n    if(dataOne === undefined) return [undefined];\n\n    if (dataOne.length !== 0) { result.push(dataOne) };\n    if (dataTwo.length !== 0) { result.push(dataTwo) };\n    if (dataThree.length !== 0) { result.push(dataThree) };\n\n    return result;\n  }\n};\n\nconst fetchRandomData = async (location) => {\n  const response = await fetch(`/getRandom/${location}`);\n  // INTERNAL SERVER ERROR CATCHER\n  if(response.status === 500) return 500;\n  const businesses = await response.json();\n  return businesses.businesses;\n};\n\nfunction reducer (state, action) {\n  let customViewCopy = { ...state.customView };\n  switch(action.type) {\n    case 'TOGGLE_CUSTOM_FORM':\n      customViewCopy.resultsMode = !customViewCopy.resultsMode;\n      return { ...state, customView: customViewCopy };\n    case 'SUBMIT_SEARCH':\n      customViewCopy = {\n        searchTerms: action.payload.searchTerms,\n        sortBy: action.payload.sortBy,\n        resultsMode: true\n      };\n      return { \n        ...state, \n        customView: customViewCopy, \n        data: fetchData(action.payload)\n      };\n    case 'FETCH_RANDOM_DATA':\n      return { \n        ...state, \n        data: fetchRandomData(action.payload)\n      } \n    case 'TOGGLE_UI':\n      customViewCopy = {\n        sortBy: 'Best Match',\n        resultsMode: false,\n        searchTerms: []\n      };\n      return { ...state, customView: customViewCopy, data: [], ui: action.payload };\n    case 'UPDATE_LOCATION':\n      return { ...state, inputLocation: action.payload };\n    case 'CLEAR_LOCATION':\n      return { ...state, inputLocation: '' }; \n    default:\n      return state;\n  }\n};\n\nexport function StoreProvider (props) {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const value = {state, dispatch}\n  return <Store.Provider value={value}>{props.children}</Store.Provider>\n}\n\nexport const Store = createContext();","import React from 'react';\nimport { Box, Anchor, Text } from 'grommet';\nimport { Previous } from 'grommet-icons';\n\nconst resultHeader = ({ \n  customSearchData, \n  toggleCustomForm, \n  location, \n  isCustom, \n  toggleUi \n}) => {\n  return (\n    <React.Fragment>\n      {!isCustom && (\n        <Box \n          pad={{ left: 'small', right: 'small' }}\n          alignContent=\"center\"\n          background=\"light-1\"\n          justify=\"around\"\n          direction=\"row\" \n          align=\"center\"\n          height=\"15%\" \n        >\n          <Box width=\"20%\">       \n            <Anchor \n              onClick={() => toggleUi('landing')}\n              margin={{ top: '4px' }}\n              icon={<Previous />}\n              color=\"dark-1\"\n              size=\"small\" \n            />\n          </Box>\n          <Box width=\"60%\" align=\"center\">\n            <Text size=\"small\" weight=\"bold\">\n              Eating in\n            </Text>\n            <Text \n              color=\"status-warning\" \n              alignSelf=\"center\"\n              textAlign=\"center\" \n              weight=\"bold\" \n              size=\"large\" \n            >\n              {location}\n            </Text>\n          </Box>\n          <Box width=\"20%\"></Box>\n        </Box>\n      )}\n      {isCustom && (\n        <Box \n          pad={{ left: 'small', right: 'small' }}\n          alignContent=\"center\"\n          background=\"light-1\"\n          justify=\"around\"\n          align=\"center\"\n          height=\"25%\" \n        >\n          <Box \n            direction=\"row\" \n            align=\"center\"\n            height=\"50%\" \n            width=\"100%\" \n          >\n            <Box width=\"20%\">       \n              <Anchor \n                onClick={() => toggleCustomForm()}\n                margin={{ top: '4px' }}\n                icon={<Previous />}\n                color=\"dark-1\"\n                size=\"small\" \n              />\n            </Box>\n            <Box width=\"60%\" align=\"center\">\n              <Text size=\"small\" weight=\"bold\">\n                Eating in\n              </Text>\n              <Text size=\"large\" weight=\"bold\" color=\"status-warning\">\n                {location}\n              </Text>\n            </Box>\n            <Box width=\"20%\"></Box>\n          </Box>\n          <Box height=\"60%\" width=\"100%\">\n            <Box \n              justify=\"center\" \n              direction=\"row\" \n              height=\"50%\" \n              align=\"end\" \n              gap=\"small\"\n            >\n              {customSearchData.searchTerms.map((el, index) => {\n                return (\n                  <Box \n                    pad={{ \n                      bottom: 'xsmall', \n                      right: 'small', \n                      top: 'xsmall', \n                      left: 'small', \n                    }}\n                    background=\"light-3\" \n                    round=\"xlarge\"\n                    key={index} \n                  >\n                    <Text textAlign=\"center\" weight=\"bold\" size=\"xsmall\">\n                      {el}\n                    </Text>\n                  </Box>\n                )\n              })} \n            </Box>\n            <Box \n              justify=\"center\" \n              direction=\"row\"\n              height=\"40%\" \n              width=\"100%\" \n              align=\"end\" \n            >\n              <Text size=\"small\" weight=\"bold\">\n                Sorted by\n              </Text>\n              <Text \n                margin={{ left: 'xsmall' }}\n                color=\"status-warning\" \n                weight=\"bold\" \n                size=\"small\" \n              >\n                {customSearchData.sortBy}\n              </Text>\n            </Box>      \n          </Box>\n        </Box>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default resultHeader;","import React from 'react';\nimport { Alert } from 'grommet-icons';\nimport { Box, Heading, Text } from 'grommet';\n\nconst errorScreen = ({ error }) => {\n  return (\n    <Box \n      background=\"status-error\" \n      justify=\"center\" \n      align=\"center\"\n      height=\"100%\" \n      width=\"100%\"\n      pad=\"large\" \n    >\n      <Alert size=\"xlarge\" />\n      <Heading color=\"light-1\">\n        Oops..\n      </Heading>\n      <Text textAlign=\"center\" weight=\"bold\">\n        {error === \"Error\" ?\n        \"There was an error fetching the information. This might be due to:\"\n        :\n        \"Unable to fetch data due to problems with the server. Please try again later.\"\n        }\n      </Text>\n      {error === \"Error\" && (\n        <ul>\n          <li><Text>Typos in your search terms</Text></li>\n          <li><Text>Your internet connection</Text></li>\n          <li><Text>No businesses available</Text></li>\n          <li><Text>Wrong location input</Text></li>\n        </ul>\n      )}\n    </Box>\n  );\n};\n\nexport default errorScreen;","import React from 'react';\nimport { Box, Text, Heading, Button, Anchor } from 'grommet';\n\nconst choiceView = ({ item, toggleUi }) => {\n  return (\n    <Box \n      pad={{ left: 'large', right: 'large' }}\n      background=\"accent-4\" \n      align=\"center\"\n      height=\"100%\" \n      width=\"100%\"\n    >\n      <Box \n        justify=\"around\"\n        align=\"center\"\n        height=\"85%\"\n        width=\"100%\"\n      >\n        <Box height=\"20%\" justify=\"end\">\n          <Heading \n            textAlign=\"center\" \n            color=\"dark-1\"\n            size=\"medium\" \n            level=\"3\" \n          >\n            Your last option is\n          </Heading>\n        </Box>\n        <Box height=\"80%\" width=\"100%\" pad={{ bottom: 'medium' }}>\n          <Box height=\"50%\" justify=\"end\" align=\"center\" >\n            <Heading \n              textAlign=\"center\" \n              color=\"dark-1\" \n              size=\"medium\" \n              level=\"2\"\n            >\n              {item.name}\n            </Heading>\n          </Box>\n          <Box \n            margin={{ bottom: 'large' }}\n            justify=\"center\" \n            align=\"start\" \n          >\n            <Text weight=\"bold\" color=\"dark-1\" alignSelf=\"center\">\n              {item.categories[0].title}\n            </Text>\n            <Text alignSelf=\"center\">\n              {item.location.address1}\n            </Text>\n          </Box>\n          <Box \n            background={{ 'color': 'dark-1', 'opacity': 'weak'}}\n            alignSelf=\"center\"\n            justify=\"center\" \n            round=\"large\" \n            width=\"66px\" \n            pad=\"small\"\n          >\n            <Anchor \n              alignSelf=\"center\" \n              href={item.url}\n              target=\"_blank\"\n              color=\"dark-1\" \n              size=\"small\" \n              label=\"Info\" \n              primary \n            />\n          </Box>\n        </Box>\n      </Box>\n      <Box height=\"15%\" justify=\"center\" margin={{ 'bottom': 'medium' }}>\n          <Button \n            onClick={() => toggleUi('landing')} \n            label=\"Try again\" \n            color=\"dark-1\" \n            primary\n          />\n      </Box>\n    </Box>\n  )\n}\n\nexport default choiceView;","import React from 'react';\nimport { Box, Text, Anchor } from 'grommet';\n\nconst ListItem = ({ item, removeItem }) => {\n  return (\n    <Box \n      background=\"accent-4\"\n      justify=\"around\"\n      align=\"center\"\n      round=\"small\" \n      width=\"260px\"\n      height=\"27%\" \n      pad=\"small\"\n    >\n      <Box>\n        <Text \n          margin={{bottom: 'xsmall'}} \n          textAlign=\"center\" \n          weight=\"bold\"\n        >\n          {item.name}\n        </Text>\n        <Box \n          justify=\"center\" \n          direction=\"row\" \n          width=\"100%\"\n          gap=\"medium\" \n        >\n          <Text size=\"small\">\n            { item.categories[0].hasOwnProperty('title') ? item.categories[0].title : \"\" }\n          </Text>\n        </Box>\n      </Box>\n      <Box \n        justify=\"center\" \n        direction=\"row\" \n        width=\"100%\"\n        gap=\"large\" \n      >\n        <Box \n          background={{ 'color': 'dark-1', 'opacity': 'weak'}}\n          round=\"large\" \n          width=\"66px\" \n          pad=\"small\" \n        >\n          <Anchor \n            alignSelf=\"center\" \n            href={item.url}\n            target=\"_blank\"\n            color=\"dark-1\" \n            size=\"small\" \n            label=\"Info\" \n            primary \n          />\n        </Box>\n        <Box \n          background={{ 'color': 'status-warning', 'opacity': 'strong' }}\n          round=\"large\" \n          width=\"66px\" \n          pad=\"small\" \n        >\n          <Anchor \n            onClick={() => removeItem()} \n            alignSelf=\"center\" \n            label=\"Delete\" \n            color=\"dark-1\" \n            size=\"small\" \n          />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default ListItem;","import React, { useState, useEffect } from 'react';\nimport { Cafeteria } from 'grommet-icons';\nimport { Box, Heading } from 'grommet';\n\nimport ErrorScreen from './ErrorScreen';\nimport ChoiceView from './ChoiceView';\nimport ListItem from './ListItem';\n\nconst resultList = ({ data, randomSorting, isCustom, toggleUi, customSearchTerms }) => {\n  const [displayItems, setDisplayItems] = useState([{ \n    name: 'Fetching', \n    categories: [{ title: '' }] \n  }]);\n  const [businesses, setBusinesses] = useState([]);\n\n  useEffect(() => {\n    if (isCustom) {\n      setStatesCustom(data);\n    } else {\n      setStatesFromArray(data);\n    }\n  }, [data, setBusinesses]);\n\n  const getIndeces = (businesses) => {\n    let indeces = [];\n    if (businesses.length <= 3) {\n      indeces.push(0, 2);\n    } else if (businesses.length !== 0) {\n      while (indeces.length < 3) {\n        let number = Math.floor(Math.random() * Math.floor(businesses.length));\n        if (!indeces.includes(number)) {\n          indeces.push(number);\n        }\n      };\n    }\n    return indeces;\n  }\n\n  const randomPicks = (array) => {\n    let results = getIndeces(array).map(el => {\n      return array[el];\n    })\n    return results;\n  }\n\n  const setStatesCustom = async (inputData) => {\n    let data = await inputData;\n    if (customSearchTerms.searchTerms.length === 0) {\n      setStatesFromArray(data);\n    } else if (customSearchTerms.searchTerms.length === 1) {\n      setStatesFromArray(data[0]);\n    } else {\n      setStatesFromTerms(data);\n    }\n  }\n\n  const setStatesFromTerms = async (inputData) => {\n    let newData = await inputData;\n    let newDisplayItems = [];\n    if (randomSorting) {\n      let allResults = [];   \n      newData.forEach(item => {\n        allResults = [...allResults, ...item];\n      });\n      setStatesFromArray(allResults);\n    } else {\n      while (newDisplayItems.length < 3) {\n        let emptyArrays = newData.every(item => item.length === 0);\n        if(emptyArrays) break;\n        for (let j=0; j<newData.length; j++) {\n          if(newData[j].length !== 0) {\n            newDisplayItems.push(newData[j].shift());\n          }\n          if(newDisplayItems.length === 3) break;\n        }\n      }\n      setBusinesses(newData);\n      setDisplayItems(newDisplayItems);\n    }\n  }\n \n  const setStatesFromArray = async (inputData) => {\n    let newData = await inputData;\n    let newDisplayItems = [];\n\n    if(newData === 500) {\n      newDisplayItems = [{ name: 500, categories: [{ title: '' }] }];\n    }\n\n    if (newData == \"error\" || newData === undefined) {\n      newDisplayItems = [{ name: \"Error\", categories: [{ title: '' }] }];\n    } else if (newData.length < 3 && newData.length !== 0) {\n      newDisplayItems = newData;\n    } else if (newData.length > 3) {\n      if (randomSorting) {\n        newDisplayItems = randomPicks(newData);\n      } else {\n        newDisplayItems = [newData[0], newData[1], newData[2]];\n      }\n      for (let i=0; i<newDisplayItems.length; i++) {\n        let item = newData.indexOf(newDisplayItems[i]);\n        if (item > -1) { newData.splice(item, 1) };\n      }\n    }\n    setBusinesses(newData);\n    setDisplayItems(newDisplayItems); \n  }\n\n  const removeItem = (passedIndex) => {\n    let newDisplayItems = displayItems.filter((el, index) => passedIndex !== index);\n    let newState = businesses;\n    let newItem;\n\n    if (randomSorting) {\n      newItem = newState[getIndeces(newState)[0]];\n      newState = newState.filter(el => newItem.name !== el.name);\n    } else {\n      if (customSearchTerms.searchTerms.length > 1) {\n        let newEntry = undefined;\n        while (newEntry === undefined) {\n          let emptyArrays = newState.every(item => item.length === 0);\n          if(emptyArrays) break;\n          let pickedArray = Math.floor(Math.random() * Math.floor(newState.length));\n          if (newState[pickedArray].length !== 0) { newEntry = newState[pickedArray].shift() }; \n        }\n        newItem = newEntry;\n      } else {\n        newItem = newState.shift();\n      }\n    }\n    if (newItem !== undefined) { newDisplayItems.push(newItem) };\n    setBusinesses(newState);\n    setDisplayItems(newDisplayItems);\n  }\n\n  return (\n    <Box height={isCustom ? \"75%\" : \"85%\"} align=\"center\" justify=\"evenly\">\n      {displayItems.length > 1 && (\n        <React.Fragment>\n          {displayItems.map((el, index) => {\n            return <ListItem key={index} item={el} removeItem={() => removeItem(index)}/>\n          })}\n        </React.Fragment>\n      )}\n      {(displayItems.length < 1) && (\n        <Box \n          background=\"status-warning\" \n          justify=\"center\" \n          align=\"center\"\n          height=\"100%\" \n          width=\"100%\" \n        >\n          <Cafeteria size=\"xlarge\" color=\"light-1\" />\n          <Heading color=\"light-1\">\n            Fetching places...\n          </Heading>\n        </Box>\n      )}\n      {(displayItems.length === 1 && (displayItems[0].name === \"Error\" || displayItems[0].name === 500)) && (\n        <ErrorScreen error={displayItems[0].name} />\n      )}      \n      {(displayItems.length === 1 && displayItems[0].name !== \"Error\" && displayItems[0].name !== \"Fetching\" && displayItems[0].name !== 500) && (\n        <ChoiceView item={displayItems[0]} toggleUi={toggleUi}/>\n      )} \n    </Box>\n  );\n};\n\nexport default resultList;","import React from 'react';\nimport { Box } from 'grommet';\n\nimport ResultHeader from './ResultHeader';\nimport ResultList from './ResultList';\n\nconst resultView = ({ \n  toggleCustomForm,\n  customSearchData, \n  randomSorting, \n  location, \n  isCustom, \n  toggleUi, \n  data \n}) => {\n\n  return (\n    <Box height=\"100vh\">\n      <ResultHeader \n        toggleCustomForm={toggleCustomForm}\n        customSearchData={customSearchData}\n        location={location} \n        isCustom={isCustom} \n        toggleUi={toggleUi} \n      />\n      <ResultList \n        customSearchTerms={customSearchData}\n        randomSorting={randomSorting}\n        isCustom={isCustom} \n        toggleUi={toggleUi} \n        data={data} \n      />\n      <Box height=\"8%\" justify=\"center\">\n          <div style={{\n              alignItems: 'center',\n              textAlign: 'center',\n              fontWeight: 'bold',\n              fontSize: 15,\n              opacity: 0.2,\n            }}\n          >\n            <a \n              style={{ 'textDecoration': 'none' }} \n              href=\"http://www.github.com/pgast\" \n            >\n              &lt;/&gt; pgast\n            </a>\n          </div>\n      </Box>\n    </Box>\n  );\n};\n\nexport default resultView;","import React, { useState, useContext } from 'react';\nimport { Previous, FormClose } from 'grommet-icons';\nimport { \n  ThemeContext, \n  FormField, \n  TextInput, \n  Heading, \n  Button, \n  Select, \n  Anchor, \n  Text, \n  Box \n} from 'grommet';\n\nimport { Store } from '../Store';\n\nconst customForm = ({ toggleUi, customView, location }) => {\n  const [searchTerms, setSearchTerms] = useState(customView.searchTerms);\n  const [sortBy, setSortBy] = useState(customView.sortBy);\n  const [currentTerm, setCurrentTerm] = useState(\"\");\n  const { dispatch } = useContext(Store);\n\n  const submitSearchTerms = (e) => {\n    e.preventDefault();\n    let payload = { sortBy, searchTerms, location };\n    return dispatch ({ type: 'SUBMIT_SEARCH', payload });\n  };\n\n  const addTerm = () => {\n    if (currentTerm !== '' && searchTerms.length < 3) {\n      let newTerms = [...searchTerms];\n      newTerms.push(currentTerm);\n      setSearchTerms(newTerms);\n      setCurrentTerm('');\n    }\n  };\n\n  const removeTerm = (inputIndex) => {\n    const newSearchTerms = [...searchTerms].filter((el, inx) => inx !== inputIndex);\n    setSearchTerms(newSearchTerms);\n  };\n\n  return (\n    <Box height=\"100vh\" width=\"100%\" animation=\"fadeIn\">\n        <Box direction=\"row\" height=\"15%\" align=\"center\">\n          <Box width=\"20%\">\n            <Anchor \n              onClick={() => toggleUi('landing')}\n              margin={{ top: '4px' }} \n              icon={<Previous />} \n              color=\"dark-1\"\n              size=\"small\"\n            />\n          </Box>\n          <Box width=\"60%\" align=\"center\" justify=\"center\">\n            <Text size=\"large\" weight=\"bold\" color=\"status-warning\">\n              Custom Search\n            </Text>\n          </Box>\n        </Box>\n        <Box \n          alignSelf=\"center\"\n          align=\"center\"\n          width=\"260px\"\n          height=\"69%\" \n        >\n          <Box justify=\"center\" width=\"100%\">\n            <ThemeContext.Extend value={{\n              formField: { \n                label: { margin: { 'horizontal': 'none', 'vertical': 'small' } },\n                border: { color: '#ffffff' } \n              },\n              select: { \n                icons: { color: 'status-warning' }, \n                background: 'light-2'\n              }\n            }}>\n              <FormField label=\"Sort by\">\n                <Select\n                  options={['Best Match', 'Rating', 'Random']}\n                  onChange={({ option }) => setSortBy(option)}\n                  alignSelf=\"center\"\n                  value={sortBy}\n                  size=\"medium\"\n                  plain\n                />\n              </FormField>\n            </ThemeContext.Extend>\n          </Box>\n          <Box justify=\"center\" width=\"100%\" margin={{top: '22px'}}>\n            <ThemeContext.Extend value={{\n              formField: { label: { margin: { 'horizontal': 'none', 'vertical': 'none' } } }\n            }}>\n              <FormField label=\"Search for:\">\n                <TextInput \n                  onChange={(e) => setCurrentTerm(e.target.value)}\n                  placeholder=\"e.g. Pizza, Tacos, Bar\" \n                  value={currentTerm}\n                  size=\"small\"\n                />\n              </FormField>\n            </ThemeContext.Extend>\n            <Button \n              label={ searchTerms.length === 3 ? \"Click on terms to delete\" : \"Add\"} \n              disabled={searchTerms.length === 3 ? true : false}\n              primary={searchTerms.length === 3 ? true : false}\n              onClick={(e) => addTerm(e)} \n              color=\"status-warning\"\n              alignSelf=\"center\"\n            />\n          </Box> \n          <Box \n            pad={{ top: 'small', bottom: 'small' }}\n            justify=\"evenly\"\n            align=\"center\" \n            height=\"50%\"\n            width=\"100%\"\n          >\n            {searchTerms.map((el, index) => {\n              return (\n                <Box \n                  pad={{ top: 'xsmall', bottom: 'xsmall', left: 'small', right: 'small' }}\n                  onClick={() => removeTerm(index)} \n                  background=\"light-2\" \n                  direction=\"row\"\n                  round=\"xlarge\"\n                  key={index} \n                >\n                  <Text textAlign=\"center\" weight=\"bold\" margin={{ 'right': 'small' }}>\n                    {el}\n                  </Text>\n                  <FormClose color=\"status-warning\"/>\n                </Box>\n              )\n            })}\n          </Box>  \n        </Box>\n      <Box\n        onClick={(e) => submitSearchTerms(e)}\n        background=\"status-warning\"\n        justify=\"center\"\n        align=\"center\" \n        height=\"16%\" \n      >\n        <Heading level=\"3\" size=\"small\">\n          FIND ME PLACES\n        </Heading>\n      </Box>\n    </Box>\n  );\n};\n\nexport default customForm;","import React from 'react';\n\nimport ResultView from './ResultView';\nimport CustomForm from './CustomForm';\n\nconst customView = ({ \n  toggleCustomForm,\n  customView, \n  location, \n  toggleUi, \n  data\n}) => {\n  return (\n    <div>\n      {customView.resultsMode ? \n        <ResultView \n          randomSorting={customView.sortBy === 'random' ? true : false}\n          toggleCustomForm={toggleCustomForm}\n          customSearchData={customView}\n          toggleUi={toggleUi}\n          location={location}\n          isCustom={true}\n          data={data}\n        /> \n        : \n        <CustomForm \n          customView={customView} \n          location={location}\n          toggleUi={toggleUi} \n        />}\n    </div>\n  );\n};\n\nexport default customView;","import React, { useContext, useEffect } from 'react';\n\nimport ResultView from './ResultView';\nimport { Store } from '../Store';\n\nconst randomView = ({ location, toggleUi, data }) => {\n  const { dispatch } = useContext(Store);\n  useEffect(() => fetchRandomData(), []);\n  const fetchRandomData = () => dispatch ({ type: 'FETCH_RANDOM_DATA', payload: location });\n\n  return (\n    <ResultView \n      location={location} \n      toggleUi={toggleUi}\n      isCustom={false} \n      randomSorting\n      data={data} \n    />\n  );\n};\n\nexport default randomView;","import React, { useContext } from 'react';\nimport { Box, Heading, TextInput, ThemeContext, Text } from 'grommet';\nimport { Map } from 'grommet-icons';\n\nimport { Store } from '../Store';\n\nconst landing = ({ location, fetchSuccess, locationInput }) => {\n  const { state, dispatch } = useContext(Store);\n  const updateLocation = (payload) => dispatch ({ type: 'UPDATE_LOCATION', payload });\n\n  return (\n    <Box \n      height={locationInput ? \"85%\" : \"100%\"}\n      animation=\"fadeIn\"\n      justify=\"center\" \n      align=\"center\" \n      width=\"100vw\"\n    >\n    {locationInput && (\n      <Box \n        justify=\"center\"\n        height=\"100%\"\n        width=\"100%\"\n        pad=\"large\"\n      >       \n        <ThemeContext.Extend value={{\n          global: { focus: { border: { color: 'status-warning' } } },\n          textInput: { extend: { \n            color: 'status-warning',\n            textAlign: 'center',\n            truncate: false\n          } }\n        }}>\n          <TextInput\n            value={state.inputLocation.charAt(0).toUpperCase() + state.inputLocation.substring(1)}\n            onChange={(e) => updateLocation(e.target.value)}\n            placeholder=\"Type your new location\" \n            focusIndicator\n            size=\"large\"\n            plain\n          />\n        </ThemeContext.Extend>\n        <Heading \n          textAlign=\"center\"\n          alignSelf=\"center\"\n          color=\"dark-1\" \n          margin=\"none\"\n          level=\"3\"\n          size=\"small\"\n        >\n          and choose your search option\n        </Heading>\n      </Box>\n    )}\n    {((fetchSuccess || fetchSuccess === '') && !locationInput) && (\n      <Box \n        justify=\"center\"\n        height=\"100%\"\n        width=\"100%\"\n        pad=\"medium\"\n        >\n          <Heading \n            alignSelf=\"center\"\n            color=\"dark-1\" \n            margin=\"none\"\n            size=\"small\"\n          >\n            Where to eat in\n          </Heading>\n          <Heading \n            color=\"status-warning\" \n            textAlign=\"center\"\n            truncate={false} \n            margin=\"none\"\n            size=\"large\"\n          >\n            {location}\n          </Heading>\n      </Box>\n    )}\n    {(!(fetchSuccess || fetchSuccess === '') && !locationInput) && (\n      <Box \n        justify=\"center\"\n        align=\"center\"\n        height=\"100%\"\n        width=\"100%\"\n        pad=\"medium\"\n        >\n          <Map size=\"large\" color=\"status-warning\"/>\n          <Heading \n            margin={{ 'top': 'large' }}\n            alignSelf=\"center\"\n            color=\"dark-1\" \n            size=\"small\"\n          >\n            Unable to fetch location\n          </Heading>\n          <Text color=\"dark-1\" textAlign=\"center\" weight=\"bold\">\n            Try again or enter your location\n          </Text>\n      </Box>\n    )}\n    </Box>\n  )\n}\n\nexport default landing;","import React, { useContext, useState } from 'react';\nimport { Heading, Box, Anchor } from 'grommet';\nimport { Previous } from 'grommet-icons';\n\nimport CustomView from './CustomView';\nimport RandomView from './RandomView';\nimport { Store } from '../Store';\nimport Landing from './Landing';\n\nconst mainView = ({ location, fetchSuccess }) => {\n  const [locationInput, setLocationInput] = useState(false);\n  const { state, dispatch } = useContext(Store);\n  const validUserLocation = state.inputLocation !== '' ? true : false;\n\n  const toggleCustomForm = () => dispatch({ type: 'TOGGLE_CUSTOM_FORM' });\n  const toggleUi = (ui) => dispatch ({ type: 'TOGGLE_UI', payload: ui });\n  const clearLocation = () => dispatch ({ type: 'CLEAR_LOCATION' });\n\n  const toggleLocationInputView = (input) => {\n    clearLocation();\n    setLocationInput(input);\n  }\n\n  const validBtn = () => {\n    let eventA = locationInput && validUserLocation ? true : false;\n    let eventB = !locationInput && fetchSuccess ? true : false;\n    if(eventA || eventB) return true;\n    return false;\n  }\n\n  return (\n    <React.Fragment>\n      {state.ui === 'landing' && (\n        <React.Fragment>\n          <Box height=\"60vh\">\n            {locationInput && (\n              <Box height=\"15%\" background=\"light-1\" justify=\"center\">\n                <Anchor \n                  onClick={() => toggleLocationInputView(false)}\n                  margin={{ top: '4px' }}\n                  icon={<Previous />}\n                  color=\"dark-1\"\n                  size=\"small\" \n                />\n              </Box>\n            )}\n            <Landing \n              locationInput={locationInput}\n              fetchSuccess={fetchSuccess} \n              location={location} \n            /> \n          </Box>\n          <Box height=\"40vh\" animation=\"slideUp\">\n            <Box\n              onClick={validBtn() ? () => toggleUi('random') : null}\n              height={locationInput ? \"65%\" : \"50%\"}\n              background={{ \n                'opacity': validBtn() ? 'strong' : 'medium', \n                'color': 'status-warning'\n              }}\n              justify=\"center\"\n              align=\"center\"\n            >\n              <Heading \n                color={validBtn()  ? \"\" : \"dark-6\"}\n                textAlign=\"center\" \n                size=\"small\" \n                level=\"3\"\n                >\n                FIND ME PLACES\n              </Heading>\n            </Box>\n            <Box\n              onClick={validBtn() ? () => toggleUi('custom') : null}\n              background={{\n                'opacity': validBtn() ? 'strong' : 'medium',\n                'color': 'accent-4'\n              }}\n              justify=\"center\"\n              align=\"center\"\n              height=\"35%\"\n            >\n              <Heading \n                color={validBtn() ? \"\" : \"dark-6\"}\n                textAlign=\"center\" \n                size=\"small\" \n                level=\"3\"\n              >\n                CUSTOM SEARCH\n              </Heading>\n            </Box>\n            {!locationInput && (\n              <Box \n                onClick={() => toggleLocationInputView(true)}\n                background=\"dark-1\" \n                justify=\"center\" \n                height=\"20%\" \n              >\n                <Heading \n                  alignSelf=\"center\"\n                  textAlign=\"center\"\n                  size=\"xsmall\" \n                  margin=\"none\" \n                  level=\"5\" \n                >\n                  WRONG LOCATION? FIX IT HERE\n                </Heading>\n              </Box>\n            )}\n          </Box>\n        </React.Fragment>\n      )}\n      {state.ui === 'custom' && (\n        <CustomView \n          location={locationInput ? state.inputLocation : location}\n          toggleCustomForm={toggleCustomForm}\n          customView={state.customView}\n          toggleUi={toggleUi}\n          data={state.data}\n        />\n      )} \n      {state.ui === 'random' && (\n        <RandomView \n          location={locationInput ? state.inputLocation : location}\n          locationInput={locationInput}\n          toggleUi={toggleUi} \n          data={state.data}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default mainView;","import React, { Component } from 'react';\nimport { Grommet, Box } from 'grommet';\nimport Request from 'request';\n\nimport MainView from './components/MainView';\n\nclass App extends Component {\n  state = {\n    fetchSuccess: '',\n    location: ''\n  }; \n\n  componentWillMount() {\n    Request.get({ \"url\": \"http://ip-api.com/json/\" }, (error, response, body) => {\n        if (error || JSON.parse(body).status === \"fail\") {\n          this.setState({ fetchSuccess: false }); \n          return console.dir(error);    \n        } else {\n          const location = JSON.parse(body).city;\n          this.setState({ \n            location, \n            fetchSuccess: true,\n          });\n        }\n    });\n  };\n\n  render() {\n    return (\n      <Grommet>\n        <Box width=\"100vw\" height=\"100vh\">\n          <MainView \n            fetchSuccess={this.state.fetchSuccess}\n            location={this.state.location} \n          />\n        </Box>\n      </Grommet>\n    );\n  }\n}\nexport default App;","import ReactDOM from 'react-dom';\nimport React from 'react';\n\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './Store';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<StoreProvider><App /></StoreProvider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}